<?xml version="1.0" encoding="UTF-8"?>
<fps version="1.2" url="https://github.com/zhblue/freeproblemset/"><generator name="HUSTOJ" url="https://github.com/zhblue/hustoj/"/>
<item>
<title ><![CDATA[P1067]]></title>
<description ><![CDATA[&nbsp &nbsp &nbsp &nbsp N位同学站成一排，音乐老师要请其中的(N-K)位同学出列，使得剩下的K位同学排成合唱队形。

&nbsp &nbsp &nbsp &nbsp 合唱队形是指这样的一种队形：设K位同学从左到右依次编号为1，2…，K，他们的身高分别为T1，T2，…，TK，&nbsp &nbsp 则他们的身高满足T1&lt; ...&lt; Ti&gt; Ti+1&gt; …&gt; TK(1&lt; =i&lt; =K)。

&nbsp &nbsp &nbsp &nbsp 你的任务是，已知所有N位同学的身高，计算最少需要几位同学出列，可以使得剩下的同学排成合唱队形。
]]></description>
<input ><![CDATA[&nbsp &nbsp &nbsp 输入文件chorus.in的第一行是一个整数N(2&lt; =N&lt; =100)，表示同学的总数。第一行有n个整数，用空格分隔，第i个整数Ti(130&lt; =Ti&lt; =230)是第i位同学的身高(厘米)。
]]></input>
<output ><![CDATA[&nbsp &nbsp &nbsp &nbsp 输出文件chorus.out包括一行，这一行只包含一个整数，就是最少需要几位同学出列。
]]></output>
<sample_input ><![CDATA[8
186 186 150 200 160 130 197 220
]]></sample_input>
<sample_output ><![CDATA[4
]]></sample_output>
<time_limit ><![CDATA[各个测试点1s
]]></time_limit>
<time_limit unit="s"><![CDATA[1]]></time_limit>
<memory_limit unit="mb"><![CDATA[128]]></memory_limit>
<hint ><![CDATA[对于50％的数据，保证有n&lt; =20；
对于全部的数据，保证有n&lt; =100。
]]></hint>
<source ><![CDATA[]]></source>
<test_input ><![CDATA[8
186 186 150 200 160 130 197 220
]]></test_input>
<test_input ><![CDATA[100
157 165 138 130 141 206 160 164 216 216 145 227 180 147 170 216 154 144 171 230 205 137 169 181 146 133 220 138 175 207 173 155 136 167 144 166 140 191 145 162 214 213 151 200 166 131 221 154 161 229 136 194 215 202 137 202 157 132 166 215 218 230 168 217 131 189 203 131 207 176 172 211 187 158 165 156 179 194 200 145 130 183 174 143 148 218 213 187 204 221 160 169 168 224 163 132 226 135 201 217
]]></test_input>
<test_input ><![CDATA[10
130 130 174 130 185 230 206 219 210 173
]]></test_input>
<test_input ><![CDATA[20
130 140 150 160 170 180 190 200 210 220 221 222 223 224 225 226 227 228 229 230
]]></test_input>
<test_input ><![CDATA[20
176 164 166 189 178 230 150 134 135 222 162 230 229 151 200 165 157 184 143 176
]]></test_input>
<test_input ><![CDATA[20
189 188 228 158 185 148 133 141 140 173 221 211 176 194 158 200 193 168 193 156
]]></test_input>
<test_input ><![CDATA[100
205 211 133 152 160 188 141 150 194 180 188 229 144 176 190 145 181 151 213 140 227 143 159 190 161 163 194 186 188 211 221 151 209 158 164 204 218 163 194 134 151 221 132 183 133 184 199 169 181 163 175 130 203 220 177 133 228 132 157 175 130 230 196 141 134 230 180 165 219 181 167 141 212 193 153 134 137 160 148 145 189 164 138 199 212 191 199 156 171 191 136 147 203 205 221 175 220 139 224 218
]]></test_input>
<test_input ><![CDATA[100
215 194 209 197 153 208 142 199 151 162 148 159 216 136 220 157 151 193 150 229 190 139 171 181 149 167 200 180 227 173 191 147 144 165 140 170 224 157 195 147 188 229 197 210 163 183 201 151 147 216 211 203 204 158 153 228 219 153 172 209 168 200 166 195 164 148 187 229 224 216 174 157 156 166 172 176 207 183 148 150 226 152 226 197 224 227 179 203 227 192 175 213 223 158 178 137 154 183 140 140
]]></test_input>
<test_input ><![CDATA[100
225 176 227 185 147 171 188 204 152 144 210 190 188 140 150 213 178 177 188 217 154 178 226 217 181 171 206 130 165 135 205 142 180 228 160 179 230 208 196 217 225 180 204 137 149 139 158 133 169 168 145 175 161 154 230 222 210 174 130 186 207 169 192 193 194 223 138 136 173 207 180 218 201 183 190 218 176 149 191 156 206 140 213 151 179 219 202 149 182 148 156 179 142 212 135 200 133 183 201 219
]]></test_input>
<test_input ><![CDATA[100
143 140 220 161 134 154 177 215 210 165 130 152 131 205 211 137 175 160 164 149 182 214 192 144 200 180 217 175 142 161 131 132 208 139 214 212 142 195 154 155 198 139 219 148 223 195 162 197 213 230 160 220 176 145 226 210 135 172 203 197 182 208 189 187 153 171 198 150 171 189 149 151 146 217 227 201 216 138 133 210 224 218 187 204 204 146 148 143 193 149 132 211 227 219 149 168 148 226 178 164
]]></test_input>
<test_output ><![CDATA[4
]]></test_output>
<test_output ><![CDATA[78
]]></test_output>
<test_output ><![CDATA[3
]]></test_output>
<test_output ><![CDATA[0
]]></test_output>
<test_output ><![CDATA[10
]]></test_output>
<test_output ><![CDATA[11
]]></test_output>
<test_output ><![CDATA[75
]]></test_output>
<test_output ><![CDATA[77
]]></test_output>
<test_output ><![CDATA[76
]]></test_output>
<test_output ><![CDATA[74
]]></test_output>
</item>
</fps>
