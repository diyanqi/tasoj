<?xml version="1.0" encoding="UTF-8"?>
<fps version="1.2" url="https://github.com/zhblue/freeproblemset/"><generator name="HUSTOJ" url="https://github.com/zhblue/hustoj/"/>
<item>
<title ><![CDATA[P1065]]></title>
<description ><![CDATA[&nbsp &nbsp &nbsp &nbsp 津津的零花钱一直都是自己管理。每个月的月初妈妈给津津300元钱，津津会预算这个月的花销，并且总能做到实际花销和预算的相同。&nbsp 

&nbsp &nbsp &nbsp &nbsp 为了让津津学习如何储蓄，妈妈提出，津津可以随时把整百的钱存在她那里，到了年末她会加上20％还给津津。因此津津制定了一个储蓄计划：每个月的月初，在得到妈妈给的零花钱后，如果她预计到这个月的月末手中还会有多于100元或恰好100元，她就会把整百的钱存在妈妈那里，剩余的钱留在自己手中。&nbsp 

&nbsp &nbsp &nbsp &nbsp 例如11月初津津手中还有83元，妈妈给了津津300元。津津预计11月的花销是180元，那么她就会在妈妈那里存200元，自己留下183元。到了11月月末，津津手中会剩下3元钱。&nbsp 

&nbsp &nbsp &nbsp &nbsp 津津发现这个储蓄计划的主要风险是，存在妈妈那里的钱在年末之前不能取出。有可能在某个月的月初，津津手中的钱加上这个月妈妈给的钱，不够这个月的原定预算。如果出现这种情况，津津将不得不在这个月省吃俭用，压缩预算。&nbsp 

&nbsp &nbsp &nbsp &nbsp 现在请你根据2004年1月到12月每个月津津的预算，判断会不会出现这种情况。如果不会，计算到2004年年末，妈妈将津津平常存的钱加上20％还给津津之后，津津手中会有多少钱。&nbsp 
]]></description>
<input ><![CDATA[&nbsp &nbsp &nbsp 输入文件save.in包括12行数据，每行包含一个小于350的非负整数，分别表示1月到12月津津的预算。&nbsp 
]]></input>
<output ><![CDATA[&nbsp &nbsp &nbsp &nbsp 输出文件save.out包括一行，这一行只包含一个整数。如果储蓄计划实施过程中出现某个月钱不够用的情况，输出-X，X表示出现这种情况的第一个月；否则输出到2004年年末津津手中会有多少钱。&nbsp 
]]></output>
<sample_input ><![CDATA[输入样例1
290
230
280
200
300
170
340
50 
90 
80 
200
60 

输入样例2
290 
230 
280 
200 
300 
170 
330 
50 
90 
80 
200 
60 
]]></sample_input>
<sample_output ><![CDATA[输出样例1
-7 
输出样例2
1580
]]></sample_output>
<time_limit ><![CDATA[各个测试点1s
]]></time_limit>
<time_limit unit="s"><![CDATA[1]]></time_limit>
<memory_limit unit="mb"><![CDATA[128]]></memory_limit>
<hint ><![CDATA[各个测试点1s
]]></hint>
<source ><![CDATA[]]></source>
<test_input ><![CDATA[290
230
280
200
300
170
340
50
90
80
200
60
]]></test_input>
<test_input ><![CDATA[288
93
278
51
110
189
331
50
277
57
186
64
]]></test_input>
<test_input ><![CDATA[290
230
280
200
300
170
330
50
90
80
200
60
]]></test_input>
<test_input ><![CDATA[288
110
310
188
168
161
32
332
89
298
201
60
]]></test_input>
<test_input ><![CDATA[288
225
151
95
279
203
65
300
266
232
199
60
]]></test_input>
<test_input ><![CDATA[288
339
342
2
39
245
99
269
92
167
198
61
]]></test_input>
<test_input ><![CDATA[288
219
24
166
259
329
165
207
95
35
194
62
]]></test_input>
<test_input ><![CDATA[288
334
214
73
19
21
198
175
271
320
193
62
]]></test_input>
<test_input ><![CDATA[288
99
55
330
129
63
232
144
97
254
191
63
]]></test_input>
<test_input ><![CDATA[288
213
246
237
240
105
265
113
274
188
190
63
]]></test_input>
<test_output ><![CDATA[-7
]]></test_output>
<test_output ><![CDATA[1946
]]></test_output>
<test_output ><![CDATA[1580
]]></test_output>
<test_output ><![CDATA[-3
]]></test_output>
<test_output ><![CDATA[1477
]]></test_output>
<test_output ><![CDATA[-2
]]></test_output>
<test_output ><![CDATA[1857
]]></test_output>
<test_output ><![CDATA[-2
]]></test_output>
<test_output ><![CDATA[1975
]]></test_output>
<test_output ><![CDATA[1398
]]></test_output>
</item>
</fps>
