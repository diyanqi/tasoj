{"title": "Santa Claus and a Palindrome", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">D. Santa Claus and a Palindrome</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Santa Claus likes palindromes very much. There was his birthday recently. <span class=\"tex-span\"><i>k</i></span> of his friends came to him to congratulate him, and each of them presented to him a string <span class=\"tex-span\"><i>s</i><sub class=\"lower-index\"><i>i</i></sub></span> having the same length <span class=\"tex-span\"><i>n</i></span>. We denote the beauty of the <span class=\"tex-span\"><i>i</i></span>-th string by <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span>. It can happen that <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> is negative&minus; that means that Santa doesn't find this string beautiful at all.</p><p>Santa Claus is crazy about palindromes. He is thinking about the following question: what is the maximum possible total beauty of a palindrome which can be obtained by concatenating some (possibly all) of the strings he has? Each present can be used at most once. Note that all strings have <span class=\"tex-font-style-bf\">the same length</span> <span class=\"tex-span\"><i>n</i></span>.</p><p>Recall that a palindrome is a string that doesn't change after one reverses it.</p><p>Since the empty string is a palindrome too, the answer can't be negative. Even if all <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span>'s are negative, Santa can obtain the empty string.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains two positive integers <span class=\"tex-span\"><i>k</i></span> and <span class=\"tex-span\"><i>n</i></span> divided by space and denoting the number of Santa friends and the length of every string they've presented, respectively (<span class=\"tex-span\">1&le;<i>k</i>,<i>n</i>&le;100000</span>; <span class=\"tex-span\"><i>n</i>&middot;<i>k</i>&le;100000</span>).</p><p><span class=\"tex-span\"><i>k</i></span> lines follow. The <span class=\"tex-span\"><i>i</i></span>-th of them contains the string <span class=\"tex-span\"><i>s</i><sub class=\"lower-index\"><i>i</i></sub></span> and its beauty <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> (<span class=\"tex-span\">-10000&le;<i>a</i><sub class=\"lower-index\"><i>i</i></sub>&le;10000</span>). The string consists of <span class=\"tex-span\"><i>n</i></span> lowercase English letters, and its beauty is integer. Some of strings may coincide. Also, equal strings can have different beauties.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>In the only line print the required maximum possible beauty.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>7 3<br/>abb 2<br/>aaa -3<br/>bba -1<br/>zyz -4<br/>abb 5<br/>aaa 7<br/>xyx 4<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>12<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>3 1<br/>a 1<br/>a 2<br/>a 3<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>6<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>2 5<br/>abcde 10000<br/>abcde 10000<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>0<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>In the first example Santa can obtain <span class=\"tex-font-style-tt\">abbaaaxyxaaabba</span> by concatenating strings <span class=\"tex-span\">5</span>, <span class=\"tex-span\">2</span>, <span class=\"tex-span\">7</span>, <span class=\"tex-span\">6</span> and <span class=\"tex-span\">3</span> (in this order).</p></div></div><p> </p></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}