{"title": "Cleaner Robot", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">J. Cleaner Robot</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>512 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Masha has recently bought a cleaner robot, it can clean a floor without anybody's assistance. </p><p>Schematically Masha's room is a rectangle, consisting of <span class=\"tex-span\"><i>w</i>&times;<i>h</i></span> square cells of size <span class=\"tex-span\">1&times;1</span>. Each cell of the room is either empty (represented by character '<span class=\"tex-font-style-tt\">.</span>'), or occupied by furniture (represented by character '<span class=\"tex-font-style-tt\">*</span>').</p><p>A cleaner robot fully occupies one free cell. Also the robot has a current direction (one of four options), we will say that it looks in this direction. </p><p>The algorithm for the robot to move and clean the floor in the room is as follows:</p><ol> <li> clean the current cell which a cleaner robot is in; </li><li> if the side-adjacent cell in the direction where the robot is looking exists and is empty, move to it and go to step 1; </li><li> otherwise turn 90 degrees clockwise (to the right relative to its current direction) and move to step 2. </li></ol><p>The cleaner robot will follow this algorithm until Masha switches it off.</p><p>You know the position of furniture in Masha's room, the initial position and the direction of the cleaner robot. Can you calculate the total area of the room that the robot will clean if it works infinitely? </p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line of the input contains two integers, <span class=\"tex-span\"><i>w</i></span> and <span class=\"tex-span\"><i>h</i></span> <span class=\"tex-span\">(1&le;<i>w</i>,<i>h</i>&le;10)</span>&minus; the sizes of Masha's room.</p><p>Next <span class=\"tex-span\"><i>w</i></span> lines contain <span class=\"tex-span\"><i>h</i></span> characters each&minus; the description of the room. If a cell of a room is empty, then the corresponding character equals '<span class=\"tex-font-style-tt\">.</span>'. If a cell of a room is occupied by furniture, then the corresponding character equals '<span class=\"tex-font-style-tt\">*</span>'. If a cell has the robot, then it is empty, and the corresponding character in the input equals '<span class=\"tex-font-style-tt\">U</span>', '<span class=\"tex-font-style-tt\">R</span>', '<span class=\"tex-font-style-tt\">D</span>' or '<span class=\"tex-font-style-tt\">L</span>', where the letter represents the direction of the cleaner robot. Letter '<span class=\"tex-font-style-tt\">U</span>' shows that the robot is looking up according to the scheme of the room, letter '<span class=\"tex-font-style-tt\">R</span>' means it is looking to the right, letter '<span class=\"tex-font-style-tt\">D</span>' means it is looking down and letter '<span class=\"tex-font-style-tt\">L</span>' means it is looking to the left.</p><p>It is guaranteed that in the given <span class=\"tex-span\"><i>w</i></span> lines letter '<span class=\"tex-font-style-tt\">U</span>', '<span class=\"tex-font-style-tt\">R</span>', '<span class=\"tex-font-style-tt\">D</span>' or '<span class=\"tex-font-style-tt\">L</span>' occurs exactly once. The cell where the robot initially stands is empty (doesn't have any furniture).</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>In the first line of the output print a single integer&minus; the total area of the room that the robot will clean if it works infinitely.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>2 3<br/>U..<br/>.*.<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>4<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>4 4<br/>R...<br/>.**.<br/>.**.<br/>....<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>12<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>3 4<br/>***D<br/>..*.<br/>*...<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>6<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>In the first sample the robot first tries to move upwards, it can't do it, so it turns right. Then it makes two steps to the right, meets a wall and turns downwards. It moves down, unfortunately tries moving left and locks itself moving from cell <span class=\"tex-span\">(1,3)</span> to cell <span class=\"tex-span\">(2,3)</span> and back. The cells visited by the robot are marked gray on the picture.</p><center> <img class=\"tex-graphics\" src=\"http://cf.hustoj.com:80/userfiles/image/bc035e58368063b1fcfe3fbc5f59734ceec1c71326.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> </center></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 512, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}