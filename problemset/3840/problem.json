{"title": "Little Elephant and Strings", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">E. Little Elephant and Strings</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>3 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>The Little Elephant loves strings very much. </p><p>He has an array <span class=\"tex-span\"><i>a</i></span> from <span class=\"tex-span\"><i>n</i></span> strings, consisting of lowercase English letters. Let's number the elements of the array from 1 to <span class=\"tex-span\"><i>n</i></span>, then let's denote the element number <span class=\"tex-span\"><i>i</i></span> as <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span>. For each string <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> <span class=\"tex-span\">(1&le;<i>i</i>&le;<i>n</i>)</span> the Little Elephant wants to find the number of pairs of integers <span class=\"tex-span\"><i>l</i></span> and <span class=\"tex-span\"><i>r</i></span> <span class=\"tex-span\">(1&le;<i>l</i>&le;<i>r</i>&le;|<i>a</i><sub class=\"lower-index\"><i>i</i></sub>|)</span> such that substring <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub>[<i>l</i>... <i>r</i>]</span> is a substring to at least <span class=\"tex-span\"><i>k</i></span> strings from array <span class=\"tex-span\"><i>a</i></span> (including the <span class=\"tex-span\"><i>i</i></span>-th string).</p><p>Help the Little Elephant solve this problem.</p><p>If you are not familiar with the basic notation in string problems, you can find the corresponding definitions in the notes.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains two space-separated integers &minus; <span class=\"tex-span\"><i>n</i></span> and <span class=\"tex-span\"><i>k</i></span> <span class=\"tex-span\">(1&le;<i>n</i>,<i>k</i>&le;10<sup class=\"upper-index\">5</sup>)</span>. Next <span class=\"tex-span\"><i>n</i></span> lines contain array <span class=\"tex-span\"><i>a</i></span>. The <span class=\"tex-span\"><i>i</i></span>-th line contains a non-empty string <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span>, consisting of lowercase English letter. The total length of all strings <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> does not exceed <span class=\"tex-span\">10<sup class=\"upper-index\">5</sup></span>.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>On a single line print <span class=\"tex-span\"><i>n</i></span> space-separated integers &minus; the <span class=\"tex-span\"><i>i</i></span>-th number is the answer for string <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span>.</p><p>Please, do not use the %lld specifier to read or write 64-bit integers in C++. It is preferred to use the cin, cout streams or the %I64d specifier.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>3 1<br/>abc<br/>a<br/>ab<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>6 1 3 <br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>7 4<br/>rubik<br/>furik<br/>abab<br/>baba<br/>aaabbbababa<br/>abababababa<br/>zero<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>1 0 9 9 21 30 0 <br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>Let's assume that you are given string <span class=\"tex-span\"><i>a</i>=<i>a</i><sub class=\"lower-index\">1</sub><i>a</i><sub class=\"lower-index\">2</sub>... <i>a</i><sub class=\"lower-index\">|<i>a</i>|</sub></span>, then let's denote the string's length as <span class=\"tex-span\">|<i>a</i>|</span> and the string's <span class=\"tex-span\"><i>i</i></span>-th character as <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span>.</p><p>A substring <span class=\"tex-span\"><i>a</i>[<i>l</i>... <i>r</i>]</span> <span class=\"tex-span\">(1&le;<i>l</i>&le;<i>r</i>&le;|<i>a</i>|)</span> of string <span class=\"tex-span\"><i>a</i></span> is string <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>l</i></sub><i>a</i><sub class=\"lower-index\"><i>l</i>+1</sub>... <i>a</i><sub class=\"lower-index\"><i>r</i></sub></span>.</p><p>String <span class=\"tex-span\"><i>a</i></span> is a substring of string <span class=\"tex-span\"><i>b</i></span>, if there exists such pair of integers <span class=\"tex-span\"><i>l</i></span> and <span class=\"tex-span\"><i>r</i></span> <span class=\"tex-span\">(1&le;<i>l</i>&le;<i>r</i>&le;|<i>b</i>|)</span>, that <span class=\"tex-span\"><i>b</i>[<i>l</i>... <i>r</i>]=<i>a</i></span>.</p></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 3000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}