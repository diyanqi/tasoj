{"title": "Lucky Pair", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">D. Lucky Pair</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p><span class=\"tex-font-style-it\">Petya loves lucky numbers very much. Everybody knows that lucky numbers are positive integers whose decimal record contains only the lucky digits <span class=\"tex-font-style-bf\">4</span> and <span class=\"tex-font-style-bf\">7</span>. For example, numbers <span class=\"tex-font-style-bf\">47</span>, <span class=\"tex-font-style-bf\">744</span>, <span class=\"tex-font-style-bf\">4</span> are lucky and <span class=\"tex-font-style-bf\">5</span>, <span class=\"tex-font-style-bf\">17</span>, <span class=\"tex-font-style-bf\">467</span> are not.</span></p><p>Petya has an array <span class=\"tex-span\"><i>a</i></span> of <span class=\"tex-span\"><i>n</i></span> integers. The numbers in the array are numbered starting from <span class=\"tex-span\">1</span>. Unfortunately, Petya has been misbehaving and so, his parents don't allow him play with arrays that have many lucky numbers. It is guaranteed that no more than <span class=\"tex-span\">1000</span> elements in the array <span class=\"tex-span\"><i>a</i></span> are lucky numbers. </p><p>Petya needs to find the number of pairs of non-intersecting segments <span class=\"tex-span\">[<i>l</i><sub class=\"lower-index\">1</sub>;<i>r</i><sub class=\"lower-index\">1</sub>]</span> and <span class=\"tex-span\">[<i>l</i><sub class=\"lower-index\">2</sub>;<i>r</i><sub class=\"lower-index\">2</sub>]</span> (<span class=\"tex-span\">1&le;<i>l</i><sub class=\"lower-index\">1</sub>&le;<i>r</i><sub class=\"lower-index\">1</sub>&lt;<i>l</i><sub class=\"lower-index\">2</sub>&le;<i>r</i><sub class=\"lower-index\">2</sub>&le;<i>n</i></span>, all four numbers are integers) such that there's no such lucky number that occurs simultaneously in the subarray <span class=\"tex-span\"><i>a</i>[<i>l</i><sub class=\"lower-index\">1</sub>..<i>r</i><sub class=\"lower-index\">1</sub>]</span> and in the subarray <span class=\"tex-span\"><i>a</i>[<i>l</i><sub class=\"lower-index\">2</sub>..<i>r</i><sub class=\"lower-index\">2</sub>]</span>. Help Petya count the number of such pairs.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains an integer <span class=\"tex-span\"><i>n</i></span> <span class=\"tex-span\">(2&le;<i>n</i>&le;10<sup class=\"upper-index\">5</sup>)</span> &minus; the size of the array <span class=\"tex-span\"><i>a</i></span>. The second line contains <span class=\"tex-span\"><i>n</i></span> space-separated integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> (<span class=\"tex-span\">1&le;<i>a</i><sub class=\"lower-index\"><i>i</i></sub>&le;10<sup class=\"upper-index\">9</sup></span>) &minus; array <span class=\"tex-span\"><i>a</i></span>. It is guaranteed that no more than <span class=\"tex-span\">1000</span> elements in the array <span class=\"tex-span\"><i>a</i></span> are lucky numbers. </p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>On the single line print the only number &minus; the answer to the problem.</p><p>Please do not use the <span class=\"tex-font-style-tt\">%lld</span> specificator to read or write 64-bit integers in C++. It is preferred to use the <span class=\"tex-font-style-tt\">cin</span>, <span class=\"tex-font-style-tt\">cout</span> streams or the <span class=\"tex-font-style-tt\">%I64d</span> specificator.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>4<br/>1 4 2 4<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>9<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>2<br/>4 7<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>1<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>4<br/>4 4 7 7<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>9<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>The subarray <span class=\"tex-span\"><i>a</i>[<i>l</i>..<i>r</i>]</span> is an array that consists of elements <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>l</i></sub></span>, <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>l</i>+1</sub></span>, ..., <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>r</i></sub></span>.</p><p>In the first sample there are <span class=\"tex-span\">9</span> possible pairs that satisfy the condition: <span class=\"tex-span\">[1,1]</span> and <span class=\"tex-span\">[2,2]</span>, <span class=\"tex-span\">[1,1]</span> and <span class=\"tex-span\">[2,3]</span>, <span class=\"tex-span\">[1,1]</span> and <span class=\"tex-span\">[2,4]</span>, <span class=\"tex-span\">[1,1]</span> and <span class=\"tex-span\">[3,3]</span>, <span class=\"tex-span\">[1,1]</span> and <span class=\"tex-span\">[3,4]</span>, <span class=\"tex-span\">[1,1]</span> and <span class=\"tex-span\">[4,4]</span>, <span class=\"tex-span\">[1,2]</span> and <span class=\"tex-span\">[3,3]</span>, <span class=\"tex-span\">[2,2]</span> and <span class=\"tex-span\">[3,3]</span>, <span class=\"tex-span\">[3,3]</span> and <span class=\"tex-span\">[4,4]</span>.</p><p>In the second sample there is only one pair of segments &minus; <span class=\"tex-span\">[1;1]</span> and <span class=\"tex-span\">[2;2]</span> and it satisfies the condition.</p></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}