{"title": "Little Girl and Problem on Trees", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">E. Little Girl and Problem on Trees</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>A little girl loves problems on trees very much. Here's one of them.</p><p>A tree is an undirected connected graph, not containing cycles. The degree of node <span class=\"tex-span\"><i>x</i></span> in the tree is the number of nodes <span class=\"tex-span\"><i>y</i></span> of the tree, such that each of them is connected with node <span class=\"tex-span\"><i>x</i></span> by some edge of the tree. </p><p>Let's consider a tree that consists of <span class=\"tex-span\"><i>n</i></span> nodes. We'll consider the tree's nodes indexed from 1 to <span class=\"tex-span\"><i>n</i></span>. The cosidered tree has the following property: each node except for node number 1 has the degree of at most 2.</p><p>Initially, each node of the tree contains number 0. Your task is to quickly process the requests of two types:</p><ul> <li> Request of form: <span class=\"tex-span\">0</span> <span class=\"tex-span\"><i>v</i></span> <span class=\"tex-span\"><i>x</i></span> <span class=\"tex-span\"><i>d</i></span>. In reply to the request you should add <span class=\"tex-span\"><i>x</i></span> to all numbers that are written in the nodes that are located at the distance of at most <span class=\"tex-span\"><i>d</i></span> from node <span class=\"tex-span\"><i>v</i></span>. The distance between two nodes is the number of edges on the shortest path between them. </li><li> Request of form: <span class=\"tex-span\">1</span> <span class=\"tex-span\"><i>v</i></span>. In reply to the request you should print the current number that is written in node <span class=\"tex-span\"><i>v</i></span>. </li></ul></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains integers <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">2&le;<i>n</i>&le;10<sup class=\"upper-index\">5</sup></span>) and <span class=\"tex-span\"><i>q</i></span> (<span class=\"tex-span\">1&le;<i>q</i>&le;10<sup class=\"upper-index\">5</sup></span>) &minus; the number of tree nodes and the number of requests, correspondingly.</p><p>Each of the next <span class=\"tex-span\"><i>n</i>-1</span> lines contains two integers <span class=\"tex-span\"><i>u</i><sub class=\"lower-index\"><i>i</i></sub></span> and <span class=\"tex-span\"><i>v</i><sub class=\"lower-index\"><i>i</i></sub></span> (<span class=\"tex-span\">1&le;<i>u</i><sub class=\"lower-index\"><i>i</i></sub>,<i>v</i><sub class=\"lower-index\"><i>i</i></sub>&le;<i>n</i></span>, <span class=\"tex-span\"><i>u</i><sub class=\"lower-index\"><i>i</i></sub>&ne;<i>v</i><sub class=\"lower-index\"><i>i</i></sub></span>), that show that there is an edge between nodes <span class=\"tex-span\"><i>u</i><sub class=\"lower-index\"><i>i</i></sub></span> and <span class=\"tex-span\"><i>v</i><sub class=\"lower-index\"><i>i</i></sub></span>. Each edge's description occurs in the input exactly once. It is guaranteed that the given graph is a tree that has the property that is described in the statement.</p><p>Next <span class=\"tex-span\"><i>q</i></span> lines describe the requests.</p><ul> <li> The request to add has the following format: <span class=\"tex-span\">0</span> <span class=\"tex-span\"><i>v</i></span> <span class=\"tex-span\"><i>x</i></span> <span class=\"tex-span\"><i>d</i></span> (<span class=\"tex-span\">1&le;<i>v</i>&le;<i>n</i></span>, <span class=\"tex-span\">1&le;<i>x</i>&le;10<sup class=\"upper-index\">4</sup></span>, <span class=\"tex-span\">1&le;<i>d</i>&lt;<i>n</i></span>). </li><li> The request to print the node value has the following format: <span class=\"tex-span\">1</span> <span class=\"tex-span\"><i>v</i></span> (<span class=\"tex-span\">1&le;<i>v</i>&le;<i>n</i></span>). </li></ul><p>The numbers in the lines are separated by single spaces.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>For each request to print the node value print an integer &minus; the reply to the request.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>3 6<br/>1 2<br/>1 3<br/>0 3 1 2<br/>0 2 3 1<br/>0 1 5 2<br/>1 1<br/>1 2<br/>1 3<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>9<br/>9<br/>6<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>6 11<br/>1 2<br/>2 5<br/>5 4<br/>1 6<br/>1 3<br/>0 3 1 3<br/>0 3 4 5<br/>0 2 1 4<br/>0 1 5 5<br/>0 4 6 2<br/>1 1<br/>1 2<br/>1 3<br/>1 4<br/>1 5<br/>1 6<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>11<br/>17<br/>11<br/>16<br/>17<br/>11<br/></pre></div></div></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}