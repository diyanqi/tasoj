{"title": "Resort", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">B. Resort</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Valera's finally decided to go on holiday! He packed up and headed for a ski resort.</p><p>Valera's fancied a ski trip but he soon realized that he could get lost in this new place. Somebody gave him a useful hint: the resort has <span class=\"tex-span\"><i>n</i></span> objects (we will consider the objects indexed in some way by integers from <span class=\"tex-span\">1</span> to <span class=\"tex-span\"><i>n</i></span>), each object is either a hotel or a mountain.</p><p>Valera has also found out that the ski resort had multiple ski tracks. Specifically, for each object <span class=\"tex-span\"><i>v</i></span>, the resort has at most one object <span class=\"tex-span\"><i>u</i></span>, such that there is a ski track built from object <span class=\"tex-span\"><i>u</i></span> to object <span class=\"tex-span\"><i>v</i></span>. We also know that no hotel has got a ski track leading from the hotel to some object.</p><p>Valera is afraid of getting lost on the resort. So he wants you to come up with a path he would walk along. The path must consist of objects <span class=\"tex-span\"><i>v</i><sub class=\"lower-index\">1</sub>,<i>v</i><sub class=\"lower-index\">2</sub>,...,<i>v</i><sub class=\"lower-index\"><i>k</i></sub></span> (<span class=\"tex-span\"><i>k</i>&ge;1</span>) and meet the following conditions:</p><ol> <li> Objects with numbers <span class=\"tex-span\"><i>v</i><sub class=\"lower-index\">1</sub>,<i>v</i><sub class=\"lower-index\">2</sub>,...,<i>v</i><sub class=\"lower-index\"><i>k</i>-1</sub></span> are mountains and the object with number <span class=\"tex-span\"><i>v</i><sub class=\"lower-index\"><i>k</i></sub></span> is the hotel. </li><li> For any integer <span class=\"tex-span\"><i>i</i></span> <span class=\"tex-span\">(1&le;<i>i</i>&lt;<i>k</i>)</span>, there is <span class=\"tex-font-style-bf\">exactly one</span> ski track leading from object <span class=\"tex-span\"><i>v</i><sub class=\"lower-index\"><i>i</i></sub></span>. This track goes to object <span class=\"tex-span\"><i>v</i><sub class=\"lower-index\"><i>i</i>+1</sub></span>. </li><li> The path contains as many objects as possible (<span class=\"tex-span\"><i>k</i></span> is maximal). </li></ol><p>Help Valera. Find such path that meets all the criteria of our hero!</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains integer <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">1&le;<i>n</i>&le;10<sup class=\"upper-index\">5</sup></span>) &minus; the number of objects.</p><p>The second line contains <span class=\"tex-span\"><i>n</i></span> space-separated integers <span class=\"tex-span\"><i>type</i><sub class=\"lower-index\">1</sub>,<i>type</i><sub class=\"lower-index\">2</sub>,...,<i>type</i><sub class=\"lower-index\"><i>n</i></sub></span> &minus; the types of the objects. If <span class=\"tex-span\"><i>type</i><sub class=\"lower-index\"><i>i</i></sub></span> equals zero, then the <span class=\"tex-span\"><i>i</i></span>-th object is the mountain. If <span class=\"tex-span\"><i>type</i><sub class=\"lower-index\"><i>i</i></sub></span> equals one, then the <span class=\"tex-span\"><i>i</i></span>-th object is the hotel. It is guaranteed that at least one object is a hotel.</p><p>The third line of the input contains <span class=\"tex-span\"><i>n</i></span> space-separated integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">1</sub>,<i>a</i><sub class=\"lower-index\">2</sub>,...,<i>a</i><sub class=\"lower-index\"><i>n</i></sub></span> (<span class=\"tex-span\">0&le;<i>a</i><sub class=\"lower-index\"><i>i</i></sub>&le;<i>n</i></span>) &minus; the description of the ski tracks. If number <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> equals zero, then there is no such object <span class=\"tex-span\"><i>v</i></span>, that has a ski track built from <span class=\"tex-span\"><i>v</i></span> to <span class=\"tex-span\"><i>i</i></span>. If number <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> doesn't equal zero, that means that there is a track built from object <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> to object <span class=\"tex-span\"><i>i</i></span>.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>In the first line print <span class=\"tex-span\"><i>k</i></span> &minus; the maximum possible path length for Valera. In the second line print <span class=\"tex-span\"><i>k</i></span> integers <span class=\"tex-span\"><i>v</i><sub class=\"lower-index\">1</sub>,<i>v</i><sub class=\"lower-index\">2</sub>,...,<i>v</i><sub class=\"lower-index\"><i>k</i></sub></span> &minus; the path. If there are multiple solutions, you can print any of them.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>5<br/>0 0 0 0 1<br/>0 1 2 3 4<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>5<br/>1 2 3 4 5<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>5<br/>0 0 1 0 1<br/>0 1 2 2 4<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>2<br/>4 5<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>4<br/>1 0 0 0<br/>2 3 4 2<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>1<br/>1<br/></pre></div></div></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}