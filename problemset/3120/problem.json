{"title": "Upgrading Array", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">D. Upgrading Array</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>1 second</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>You have an array of positive integers <span class=\"tex-span\"><i>a</i>[1],<i>a</i>[2],...,<i>a</i>[<i>n</i>]</span> and a set of <span class=\"tex-font-style-it\">bad</span> prime numbers <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\">1</sub>,<i>b</i><sub class=\"lower-index\">2</sub>,...,<i>b</i><sub class=\"lower-index\"><i>m</i></sub></span>. The prime numbers that do not occur in the set <span class=\"tex-span\"><i>b</i></span> are considered <span class=\"tex-font-style-it\">good</span>. The <span class=\"tex-font-style-it\">beauty</span> of array <span class=\"tex-span\"><i>a</i></span> is the sum <img align=\"middle\" class=\"tex-formula\" src=\"http://cf.hustoj.com:80/userfiles/image/a514948233910e08bd4e7245aa382480a684b2796.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/>, where function <span class=\"tex-span\"><i>f</i>(<i>s</i>)</span> is determined as follows:</p><ul> <li> <span class=\"tex-span\"><i>f</i>(1)=0</span>; </li><li> Let's assume that <span class=\"tex-span\"><i>p</i></span> is the minimum prime divisor of <span class=\"tex-span\"><i>s</i></span>. If <span class=\"tex-span\"><i>p</i></span> is a good prime, then <img align=\"middle\" class=\"tex-formula\" src=\"http://cf.hustoj.com:80/userfiles/image/8c7b0d19533c27add0752e807090e31c81aa7c9f6.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/>, otherwise <img align=\"middle\" class=\"tex-formula\" src=\"http://cf.hustoj.com:80/userfiles/image/7b7793f5f9c2d83b354fbdc77dfda635b2fb56f96.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/>. </li></ul><p>You are allowed to perform an arbitrary (probably zero) number of operations to improve array <span class=\"tex-span\"><i>a</i></span>. The <span class=\"tex-font-style-it\">operation of improvement</span> is the following sequence of actions:</p><ul> <li> Choose some number <span class=\"tex-span\"><i>r</i></span> (<span class=\"tex-span\">1&le;<i>r</i>&le;<i>n</i></span>) and calculate the value <span class=\"tex-span\"><i>g</i></span> = GCD(<span class=\"tex-span\"><i>a</i>[1],<i>a</i>[2],...,<i>a</i>[<i>r</i>]</span>). </li><li> Apply the assignments: <img align=\"middle\" class=\"tex-formula\" src=\"http://cf.hustoj.com:80/userfiles/image/92f2bf420899dc2f57def318977fd64c9930c0ba6.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/>, <img align=\"middle\" class=\"tex-formula\" src=\"http://cf.hustoj.com:80/userfiles/image/3aa844ec77368657dc93f6cf18ebea66905323726.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/>, <span class=\"tex-span\">...</span>, <img align=\"middle\" class=\"tex-formula\" src=\"http://cf.hustoj.com:80/userfiles/image/b40ccc1037a6a312c07c1a049341fc21af329b326.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/>. </li></ul><p>What is the maximum beauty of the array you can get? </p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains two integers <span class=\"tex-span\"><i>n</i></span> and <span class=\"tex-span\"><i>m</i></span> (<span class=\"tex-span\">1&le;<i>n</i>,<i>m</i>&le;5000</span>) showing how many numbers are in the array and how many bad prime numbers there are.</p><p>The second line contains <span class=\"tex-span\"><i>n</i></span> space-separated integers <span class=\"tex-span\"><i>a</i>[1],<i>a</i>[2],...,<i>a</i>[<i>n</i>]</span> (<span class=\"tex-span\">1&le;<i>a</i>[<i>i</i>]&le;10<sup class=\"upper-index\">9</sup></span>) &minus; array <span class=\"tex-span\"><i>a</i></span>. The third line contains <span class=\"tex-span\"><i>m</i></span> space-separated integers <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\">1</sub>,<i>b</i><sub class=\"lower-index\">2</sub>,...,<i>b</i><sub class=\"lower-index\"><i>m</i></sub></span> (<span class=\"tex-span\">2&le;<i>b</i><sub class=\"lower-index\">1</sub>&lt;<i>b</i><sub class=\"lower-index\">2</sub>&lt;...&lt;<i>b</i><sub class=\"lower-index\"><i>m</i></sub>&le;10<sup class=\"upper-index\">9</sup></span>) &minus; the set of bad prime numbers.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print a single integer &minus; the answer to the problem.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>5 2<br/>4 20 34 10 10<br/>2 5<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>-2<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>4 5<br/>2 4 8 16<br/>3 5 7 11 17<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>10<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>Note that the answer to the problem can be negative.</p><p>The GCD(<span class=\"tex-span\"><i>x</i><sub class=\"lower-index\">1</sub></span>, <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\">2</sub></span>, ..., <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\"><i>k</i></sub></span>) is the maximum positive integer that divides each <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\"><i>i</i></sub></span>.</p></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 1000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}