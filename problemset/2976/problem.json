{"title": "DZY Loves Modification", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">B. DZY Loves Modification</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>As we know, DZY loves playing games. One day DZY decided to play with a <span class=\"tex-span\"><i>n</i>&times;<i>m</i></span> matrix. To be more precise, he decided to modify the matrix with exactly <span class=\"tex-span\"><i>k</i></span> operations.</p><p>Each modification is one of the following:</p><ol> <li> Pick some row of the matrix and decrease each element of the row by <span class=\"tex-span\"><i>p</i></span>. This operation brings to DZY the value of pleasure equal to the sum of elements of the row before the decreasing. </li><li> Pick some column of the matrix and decrease each element of the column by <span class=\"tex-span\"><i>p</i></span>. This operation brings to DZY the value of pleasure equal to the sum of elements of the column before the decreasing. </li></ol><p>DZY wants to know: what is the largest total value of pleasure he could get after performing exactly <span class=\"tex-span\"><i>k</i></span> modifications? Please, help him to calculate this value.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains four space-separated integers <span class=\"tex-span\"><i>n</i>,<i>m</i>,<i>k</i></span> and <span class=\"tex-span\"><i>p</i></span> <span class=\"tex-span\">(1&le;<i>n</i>,<i>m</i>&le;10<sup class=\"upper-index\">3</sup>;1&le;<i>k</i>&le;10<sup class=\"upper-index\">6</sup>;1&le;<i>p</i>&le;100)</span>.</p><p>Then <span class=\"tex-span\"><i>n</i></span> lines follow. Each of them contains <span class=\"tex-span\"><i>m</i></span> integers representing <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>ij</i></sub>(1&le;<i>a</i><sub class=\"lower-index\"><i>ij</i></sub>&le;10<sup class=\"upper-index\">3</sup>)</span> &minus; the elements of the current row of the matrix.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Output a single integer &minus; the maximum possible total pleasure value DZY could get.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>2 2 2 2<br/>1 3<br/>2 4<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>11<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>2 2 5 2<br/>1 3<br/>2 4<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>11<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>For the first sample test, we can modify: column 2, row 2. After that the matrix becomes:</p><pre><br/>1 1<br/>0 0<br/><br/></pre><p>For the second sample test, we can modify: column 2, row 2, row 1, column 1, column 2. After that the matrix becomes:</p><pre><br/>-3 -3<br/>-2 -2<br/><br/></pre></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}