{"title": "Board Game", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">C. Board Game</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>1 second</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Polycarp and Vasiliy love simple logical games. Today they play a game with infinite chessboard and one pawn for each player. Polycarp and Vasiliy move in turns, Polycarp starts. In each turn Polycarp can move his pawn from cell <span class=\"tex-span\">(<i>x</i>,<i>y</i>)</span> to <span class=\"tex-span\">(<i>x</i>-1,<i>y</i>)</span> or <span class=\"tex-span\">(<i>x</i>,<i>y</i>-1)</span>. Vasiliy can move his pawn from <span class=\"tex-span\">(<i>x</i>,<i>y</i>)</span> to one of cells: <span class=\"tex-span\">(<i>x</i>-1,<i>y</i>),(<i>x</i>-1,<i>y</i>-1)</span> and <span class=\"tex-span\">(<i>x</i>,<i>y</i>-1)</span>. <span class=\"tex-font-style-bf\">Both players</span> are also allowed to skip move. </p><p>There are some additional restrictions &minus; a player is forbidden to move his pawn to a cell with negative <span class=\"tex-span\"><i>x</i></span>-coordinate or <span class=\"tex-span\"><i>y</i></span>-coordinate or to the cell containing opponent's pawn The winner is the first person to reach cell <span class=\"tex-span\">(0,0)</span>. </p><p>You are given the starting coordinates of both pawns. Determine who will win if both of them play optimally well.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains four integers: <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\"><i>p</i></sub>,<i>y</i><sub class=\"lower-index\"><i>p</i></sub>,<i>x</i><sub class=\"lower-index\"><i>v</i></sub>,<i>y</i><sub class=\"lower-index\"><i>v</i></sub></span> (<span class=\"tex-span\">0&le;<i>x</i><sub class=\"lower-index\"><i>p</i></sub>,<i>y</i><sub class=\"lower-index\"><i>p</i></sub>,<i>x</i><sub class=\"lower-index\"><i>v</i></sub>,<i>y</i><sub class=\"lower-index\"><i>v</i></sub>&le;10<sup class=\"upper-index\">5</sup>)</span> &minus; Polycarp's and Vasiliy's starting coordinates.</p><p>It is guaranteed that in the beginning the pawns are in different cells and none of them is in the cell <span class=\"tex-span\">(0,0)</span>.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Output the name of the winner: \"<span class=\"tex-font-style-tt\">Polycarp</span>\" or \"<span class=\"tex-font-style-tt\">Vasiliy</span>\".</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>2 1 2 2<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>Polycarp<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>4 7 7 4<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>Vasiliy<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>In the first sample test Polycarp starts in <span class=\"tex-span\">(2,1)</span> and will move to <span class=\"tex-span\">(1,1)</span> in the first turn. No matter what his opponent is doing, in the second turn Polycarp can move to <span class=\"tex-span\">(1,0)</span> and finally to <span class=\"tex-span\">(0,0)</span> in the third turn.</p></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 1000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}