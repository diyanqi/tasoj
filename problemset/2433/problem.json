{"title": "Cutting the Line", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">E. Cutting the Line</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>You are given a non-empty line <span class=\"tex-span\"><i>s</i></span> and an integer <span class=\"tex-span\"><i>k</i></span>. The following operation is performed with this line exactly once:</p><ul> <li> A line is split into <span class=\"tex-font-style-bf\">at most</span> <span class=\"tex-span\"><i>k</i></span> non-empty substrings, i.e. string <span class=\"tex-span\"><i>s</i></span> is represented as a concatenation of a set of strings <span class=\"tex-span\"><i>s</i>=<i>t</i><sub class=\"lower-index\">1</sub>+<i>t</i><sub class=\"lower-index\">2</sub>+...+<i>t</i><sub class=\"lower-index\"><i>m</i></sub></span>, <span class=\"tex-span\">1&le;<i>m</i>&le;<i>k</i></span>. </li><li> Some of strings <span class=\"tex-span\"><i>t</i><sub class=\"lower-index\"><i>i</i></sub></span> are replaced by strings <span class=\"tex-span\"><i>t</i><sub class=\"lower-index\"><i>i</i></sub><sup class=\"upper-index\"><i>r</i></sup></span>, that is, their record from right to left. </li><li> The lines are concatenated back in the same order, we get string <span class=\"tex-span\"><i>s</i>'=<i>t</i>'<sub class=\"lower-index\">1</sub><i>t</i>'<sub class=\"lower-index\">2</sub>... <i>t</i>'<sub class=\"lower-index\"><i>m</i></sub></span>, where <span class=\"tex-span\"><i>t</i>'<sub class=\"lower-index\"><i>i</i></sub></span> equals <span class=\"tex-span\"><i>t</i><sub class=\"lower-index\"><i>i</i></sub></span> or <span class=\"tex-span\"><i>t</i><sub class=\"lower-index\"><i>i</i></sub><sup class=\"upper-index\"><i>r</i></sup></span>. </li></ul><p>Your task is to determine the lexicographically smallest string that could be the result of applying the given operation to the string <span class=\"tex-span\"><i>s</i></span>.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line of the input contains string <span class=\"tex-span\"><i>s</i></span> (<span class=\"tex-span\">1&le;|<i>s</i>|&le;5000000</span>), consisting of lowercase English letters. The second line contains integer <span class=\"tex-span\"><i>k</i></span> (<span class=\"tex-span\">1&le;<i>k</i>&le;|<i>s</i>|</span>)&minus; the maximum number of parts in the partition.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>In the single line print the lexicographically minimum string <span class=\"tex-span\"><i>s</i>'</span> which can be obtained as a result of performing the described operation. </p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>aba<br/>2<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>aab<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>aaaabacaba<br/>2<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>aaaaabacab<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>bababa<br/>1<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>ababab<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>abacabadabacaba<br/>4<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>aababacabacabad<br/></pre></div></div></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}