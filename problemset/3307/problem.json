{"title": "Dima and Text Messages", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">B. Dima and Text Messages</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Seryozha has a very changeable character. This time he refused to leave the room to Dima and his girlfriend (her hame is Inna, by the way). However, the two lovebirds can always find a way to communicate. Today they are writing text messages to each other.</p><p>Dima and Inna are using a secret code in their text messages. When Dima wants to send Inna some sentence, he writes out all words, inserting a heart before each word and after the last word. A heart is a sequence of two characters: the \"less\" characters (<span class=\"tex-font-style-tt\">&lt;</span>) and the digit three (<span class=\"tex-font-style-tt\">3</span>). After applying the code, a test message looks like that: &lt;3<span class=\"tex-span\"><i>word</i><sub class=\"lower-index\">1</sub></span>&lt;3<span class=\"tex-span\"><i>word</i><sub class=\"lower-index\">2</sub></span>&lt;3 ... <span class=\"tex-span\"><i>word</i><sub class=\"lower-index\"><i>n</i></sub></span>&lt;3.</p><p>Encoding doesn't end here. Then Dima inserts a random number of small English characters, digits, signs \"more\" and \"less\" into any places of the message.</p><p>Inna knows Dima perfectly well, so she knows what phrase Dima is going to send her beforehand. Inna has just got a text message. Help her find out if Dima encoded the message correctly. In other words, find out if a text message could have been received by encoding in the manner that is described above.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains integer <span class=\"tex-span\"><i>n</i></span> <span class=\"tex-span\">(1&le;<i>n</i>&le;10<sup class=\"upper-index\">5</sup>)</span> &minus; the number of words in Dima's message. Next <span class=\"tex-span\"><i>n</i></span> lines contain non-empty words, one word per line. The words only consist of small English letters. The total length of all words doesn't exceed <span class=\"tex-span\">10<sup class=\"upper-index\">5</sup></span>. </p><p>The last line contains non-empty text message that Inna has got. The number of characters in the text message doesn't exceed <span class=\"tex-span\">10<sup class=\"upper-index\">5</sup></span>. A text message can contain only small English letters, digits and signs more and less.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>In a single line, print \"<span class=\"tex-font-style-tt\">yes</span>\" (without the quotes), if Dima decoded the text message correctly, and \"<span class=\"tex-font-style-tt\">no</span>\" (without the quotes) otherwise.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>3<br/>i<br/>love<br/>you<br/>&lt;3i&lt;3love&lt;23you&lt;3<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>yes<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>7<br/>i<br/>am<br/>not<br/>main<br/>in<br/>the<br/>family<br/>&lt;3i&lt;&gt;3am&lt;3the&lt;3&lt;main&lt;3in&lt;3the&lt;3&gt;&lt;3family&lt;3<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>no<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>Please note that Dima got a good old kick in the pants for the second sample from the statement.</p></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}