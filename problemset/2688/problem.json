{"title": "Reposts", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">A. Reposts</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>1 second</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>One day Polycarp published a funny picture in a social network making a poll about the color of his handle. Many of his friends started reposting Polycarp's joke to their news feed. Some of them reposted the reposts and so on.</p><p>These events are given as a sequence of strings \"<span class=\"tex-font-style-it\">name1</span> <span class=\"tex-font-style-tt\">reposted</span> <span class=\"tex-font-style-it\">name2</span>\", where <span class=\"tex-font-style-it\">name1</span> is the name of the person who reposted the joke, and <span class=\"tex-font-style-it\">name2</span> is the name of the person from whose news feed the joke was reposted. It is guaranteed that for each string \"<span class=\"tex-font-style-it\">name1</span> <span class=\"tex-font-style-tt\">reposted</span> <span class=\"tex-font-style-it\">name2</span>\" user \"<span class=\"tex-font-style-it\">name1</span>\" didn't have the joke in his feed yet, and \"<span class=\"tex-font-style-it\">name2</span>\" already had it in his feed by the moment of repost. Polycarp was registered as \"<span class=\"tex-font-style-tt\">Polycarp</span>\" and initially the joke was only in his feed.</p><p>Polycarp measures the popularity of the joke as the length of the largest repost chain. Print the popularity of Polycarp's joke.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line of the input contains integer <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">1&le;<i>n</i>&le;200</span>) &minus; the number of reposts. Next follow the reposts in the order they were made. Each of them is written on a single line and looks as \"<span class=\"tex-font-style-it\">name1</span> <span class=\"tex-font-style-tt\">reposted</span> <span class=\"tex-font-style-it\">name2</span>\". All the names in the input consist of lowercase or uppercase English letters and/or digits and have lengths from 2 to 24 characters, inclusive.</p><p>We know that the user names are case-insensitive, that is, two names that only differ in the letter case correspond to the same social network user.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print a single integer &minus; the maximum length of a repost chain.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>5<br/>tourist reposted Polycarp<br/>Petr reposted Tourist<br/>WJMZBMR reposted Petr<br/>sdya reposted wjmzbmr<br/>vepifanov reposted sdya<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>6<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>6<br/>Mike reposted Polycarp<br/>Max reposted Polycarp<br/>EveryOne reposted Polycarp<br/>111 reposted Polycarp<br/>VkCup reposted Polycarp<br/>Codeforces reposted Polycarp<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>2<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>1<br/>SoMeStRaNgEgUe reposted PoLyCaRp<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>2<br/></pre></div></div></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 1000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}