{"title": "Xenia and Hamming", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">B. Xenia and Hamming</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>1 second</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Xenia is an amateur programmer. Today on the IT lesson she learned about the Hamming distance.</p><p>The Hamming distance between two strings <span class=\"tex-span\"><i>s</i>=<i>s</i><sub class=\"lower-index\">1</sub><i>s</i><sub class=\"lower-index\">2</sub>... <i>s</i><sub class=\"lower-index\"><i>n</i></sub></span> and <span class=\"tex-span\"><i>t</i>=<i>t</i><sub class=\"lower-index\">1</sub><i>t</i><sub class=\"lower-index\">2</sub>... <i>t</i><sub class=\"lower-index\"><i>n</i></sub></span> of equal length <span class=\"tex-span\"><i>n</i></span> is value <img align=\"middle\" class=\"tex-formula\" src=\"http://cf.hustoj.com:80/userfiles/image/19197422a1ab1c7f41739fe47a217fec449884b72.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/>. Record <span class=\"tex-span\">[<i>s</i><sub class=\"lower-index\"><i>i</i></sub>&ne;<i>t</i><sub class=\"lower-index\"><i>i</i></sub>]</span> is the Iverson notation and represents the following: if <span class=\"tex-span\"><i>s</i><sub class=\"lower-index\"><i>i</i></sub>&ne;<i>t</i><sub class=\"lower-index\"><i>i</i></sub></span>, it is one, otherwise &minus; zero.</p><p>Now Xenia wants to calculate the Hamming distance between two long strings <span class=\"tex-span\"><i>a</i></span> and <span class=\"tex-span\"><i>b</i></span>. The first string <span class=\"tex-span\"><i>a</i></span> is the concatenation of <span class=\"tex-span\"><i>n</i></span> copies of string <span class=\"tex-span\"><i>x</i></span>, that is, <img align=\"middle\" class=\"tex-formula\" src=\"http://cf.hustoj.com:80/userfiles/image/800dd83f94d52415344e8d9ea907ef8be39ec7912.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/>. The second string <span class=\"tex-span\"><i>b</i></span> is the concatenation of <span class=\"tex-span\"><i>m</i></span> copies of string <span class=\"tex-span\"><i>y</i></span>. </p><p>Help Xenia, calculate the required Hamming distance, given <span class=\"tex-span\"><i>n</i>,<i>x</i>,<i>m</i>,<i>y</i></span>.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains two integers <span class=\"tex-span\"><i>n</i></span> and <span class=\"tex-span\"><i>m</i></span> <span class=\"tex-span\">(1&le;<i>n</i>,<i>m</i>&le;10<sup class=\"upper-index\">12</sup>)</span>. The second line contains a non-empty string <span class=\"tex-span\"><i>x</i></span>. The third line contains a non-empty string <span class=\"tex-span\"><i>y</i></span>. Both strings consist of at most <span class=\"tex-span\">10<sup class=\"upper-index\">6</sup></span> lowercase English letters.</p><p>It is guaranteed that strings <span class=\"tex-span\"><i>a</i></span> and <span class=\"tex-span\"><i>b</i></span> that you obtain from the input have the same length.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print a single integer &minus; the required Hamming distance.</p><p>Please, do not use the <span class=\"tex-font-style-tt\">%lld</span> specifier to read or write 64-bit integers in C++. It is preferred to use the <span class=\"tex-font-style-tt\">cin</span>, <span class=\"tex-font-style-tt\">cout</span> streams or the <span class=\"tex-font-style-tt\">%I64d</span> specifier.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>100 10<br/>a<br/>aaaaaaaaaa<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>0<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>1 1<br/>abacaba<br/>abzczzz<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>4<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>2 3<br/>rzr<br/>az<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>5<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>In the first test case string <span class=\"tex-span\"><i>a</i></span> is the same as string <span class=\"tex-span\"><i>b</i></span> and equals 100 letters <span class=\"tex-font-style-tt\">a</span>. As both strings are equal, the Hamming distance between them is zero.</p><p>In the second test case strings <span class=\"tex-span\"><i>a</i></span> and <span class=\"tex-span\"><i>b</i></span> differ in their 3-rd, 5-th, 6-th and 7-th characters. Thus, the Hamming distance equals 4.</p><p>In the third test case string <span class=\"tex-span\"><i>a</i></span> is <span class=\"tex-font-style-tt\">rzrrzr</span> and string <span class=\"tex-span\"><i>b</i></span> is <span class=\"tex-font-style-tt\">azazaz</span>. The strings differ in all characters apart for the second one, the Hamming distance between them equals 5.</p></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 1000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}