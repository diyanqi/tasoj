{"title": "Training with Doors", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">E. Training with Doors</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>4 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>512 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Col. Sheffard is going to make a training for Cpt. Plice. The colonel has a polygon containing infinite number of closed doors placed one by one in a row. Initially Cpt. Plice stands in front of the first door. The captain is able to perform the following two commands:</p><ul> <li> open the first closed door and go to the front of the next closed door (mark this command as '<span class=\"tex-font-style-tt\">(</span>' ), </li><li> go to the front of the last of currently opened doors and close it (mark this command as '<span class=\"tex-font-style-tt\">)</span>' ). </li></ul><p>A sequence of commands is valid if the following conditions are met: </p><ul> <li> there is at least one opened door when the command '<span class=\"tex-font-style-tt\">)</span>' should be performed (in particular, the first command shouldn't be '<span class=\"tex-font-style-tt\">)</span>'), </li><li> all the doors are closed after performing all commands from the sequence (the captain stands in front of the first door). </li></ul><p>Col. Sheffard received a template &minus; a rectangular grid with <span class=\"tex-span\"><i>n</i></span> rows and <span class=\"tex-span\"><i>m</i></span> columns where each cell contains one of the commands, i.e. '<span class=\"tex-font-style-tt\">(</span>' or '<span class=\"tex-font-style-tt\">)</span>'. The colonel has to choose a training plan for the captain &minus; select a non-empty rectangle from the grid, each row of the rectangle will be an independent training for the captain. The training plan is valid, if <span class=\"tex-font-style-it\">each</span> row of the selected rectangle is a valid sequence of commands.</p><p>You are to find the number of ways to select a valid training plan for a given grid. The selected rectangle should be continuous, i.e. without holes. Plans are different if they have different positions of their corners even if their contents are the same.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains two integers <span class=\"tex-span\"><i>n</i></span> and <span class=\"tex-span\"><i>m</i></span> (<span class=\"tex-span\">1&le;<i>n</i>,<i>m</i>&le;50000</span>) &minus; number of rows and number of columns in the template respectively. Each of the following <span class=\"tex-span\"><i>n</i></span> lines contains a string with <span class=\"tex-span\"><i>m</i></span> symbols '<span class=\"tex-font-style-tt\">(</span>' or '<span class=\"tex-font-style-tt\">)</span>' &minus; commands of the template. The total number of elements in the template doesn't exceed <span class=\"tex-span\">10<sup class=\"upper-index\">6</sup></span>.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Output a single integer &minus; the number of rectangles on the template, corresponding to a valid training plan. Two rectangles with equal content but different positions of corners should be counted both.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>1 5<br/>(()()<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>3<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>3 2<br/>()<br/>()<br/>()<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>6<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>4 4<br/>()()<br/>()()<br/>)()(<br/>()()<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>13<br/></pre></div></div></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 4000, "memory_limit": 512, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}