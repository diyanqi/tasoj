{"title": "Vanya and Treasure", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">D. Vanya and Treasure</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>1.5 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Vanya is in the palace that can be represented as a grid <span class=\"tex-span\"><i>n</i>&times;<i>m</i></span>. Each room contains a single chest, an the room located in the <span class=\"tex-span\"><i>i</i></span>-th row and <span class=\"tex-span\"><i>j</i></span>-th columns contains the chest of type <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>ij</i></sub></span>. Each chest of type <span class=\"tex-span\"><i>x</i>&le;<i>p</i>-1</span> contains a key that can open any chest of type <span class=\"tex-span\"><i>x</i>+1</span>, and all chests of type <span class=\"tex-span\">1</span> are not locked. There is exactly one chest of type <span class=\"tex-span\"><i>p</i></span> and it contains a treasure.</p><p>Vanya starts in cell <span class=\"tex-span\">(1,1)</span> (top left corner). What is the minimum total distance Vanya has to walk in order to get the treasure? Consider the distance between cell <span class=\"tex-span\">(<i>r</i><sub class=\"lower-index\">1</sub>,<i>c</i><sub class=\"lower-index\">1</sub>)</span> (the cell in the row <span class=\"tex-span\"><i>r</i><sub class=\"lower-index\">1</sub></span> and column <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\">1</sub></span>) and <span class=\"tex-span\">(<i>r</i><sub class=\"lower-index\">2</sub>,<i>c</i><sub class=\"lower-index\">2</sub>)</span> is equal to <span class=\"tex-span\">|<i>r</i><sub class=\"lower-index\">1</sub>-<i>r</i><sub class=\"lower-index\">2</sub>|+|<i>c</i><sub class=\"lower-index\">1</sub>-<i>c</i><sub class=\"lower-index\">2</sub>|</span>.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line of the input contains three integers <span class=\"tex-span\"><i>n</i></span>, <span class=\"tex-span\"><i>m</i></span> and <span class=\"tex-span\"><i>p</i></span> (<span class=\"tex-span\">1&le;<i>n</i>,<i>m</i>&le;300,1&le;<i>p</i>&le;<i>n</i>&middot;<i>m</i></span>)&minus; the number of rows and columns in the table representing the palace and the number of different types of the chests, respectively.</p><p>Each of the following <span class=\"tex-span\"><i>n</i></span> lines contains <span class=\"tex-span\"><i>m</i></span> integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>ij</i></sub></span> (<span class=\"tex-span\">1&le;<i>a</i><sub class=\"lower-index\"><i>ij</i></sub>&le;<i>p</i></span>)&minus; the types of the chests in corresponding rooms. It's guaranteed that for each <span class=\"tex-span\"><i>x</i></span> from <span class=\"tex-span\">1</span> to <span class=\"tex-span\"><i>p</i></span> there is at least one chest of this type (that is, there exists a pair of <span class=\"tex-span\"><i>r</i></span> and <span class=\"tex-span\"><i>c</i></span>, such that <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>rc</i></sub>=<i>x</i></span>). Also, it's guaranteed that there is exactly one chest of type <span class=\"tex-span\"><i>p</i></span>.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print one integer&minus; the minimum possible total distance Vanya has to walk in order to get the treasure from the chest of type <span class=\"tex-span\"><i>p</i></span>.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>3 4 3<br/>2 1 1 1<br/>1 1 1 1<br/>2 1 1 3<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>5<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>3 3 9<br/>1 3 5<br/>8 9 7<br/>4 6 2<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>22<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>3 4 12<br/>1 2 3 4<br/>8 7 6 5<br/>9 10 11 12<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>11<br/></pre></div></div></div></div><p> </p></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 1500, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}