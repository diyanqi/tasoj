{"title": "Restore a Number", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">F. Restore a Number</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Vasya decided to pass a very large integer <span class=\"tex-span\"><i>n</i></span> to Kate. First, he wrote that number as a string, then he appended to the right integer <span class=\"tex-span\"><i>k</i></span>&minus; the number of digits in <span class=\"tex-span\"><i>n</i></span>. </p><p>Magically, all the numbers were shuffled in arbitrary order while this note was passed to Kate. The only thing that Vasya remembers, is a non-empty substring of <span class=\"tex-span\"><i>n</i></span> (a substring of <span class=\"tex-span\"><i>n</i></span> is a sequence of consecutive digits of the number <span class=\"tex-span\"><i>n</i></span>).</p><p>Vasya knows that there may be more than one way to restore the number <span class=\"tex-span\"><i>n</i></span>. Your task is to find the smallest possible initial integer <span class=\"tex-span\"><i>n</i></span>. Note that decimal representation of number <span class=\"tex-span\"><i>n</i></span> contained no leading zeroes, except the case the integer <span class=\"tex-span\"><i>n</i></span> was equal to zero itself (in this case a single digit <span class=\"tex-font-style-tt\">0</span> was used).</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line of the input contains the string received by Kate. The number of digits in this string does not exceed <span class=\"tex-span\">1000000</span>.</p><p>The second line contains the substring of <span class=\"tex-span\"><i>n</i></span> which Vasya remembers. This string can contain leading zeroes. </p><p>It is guaranteed that the input data is correct, and the answer always exists.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print the smalles integer <span class=\"tex-span\"><i>n</i></span> which Vasya could pass to Kate.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>003512<br/>021<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>30021<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>199966633300<br/>63<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>3036366999<br/></pre></div></div></div></div><p> </p></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}