{"title": "Malek Dance Club", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">A. Malek Dance Club</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>1 second</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>As a tradition, every year before IOI all the members of Natalia Fan Club are invited to Malek Dance Club to have a fun night together. Malek Dance Club has <span class=\"tex-span\">2<sup class=\"upper-index\"><i>n</i></sup></span> members and coincidentally Natalia Fan Club also has <span class=\"tex-span\">2<sup class=\"upper-index\"><i>n</i></sup></span> members. Each member of MDC is assigned a unique id <span class=\"tex-span\"><i>i</i></span> from <span class=\"tex-span\">0</span> to <span class=\"tex-span\">2<sup class=\"upper-index\"><i>n</i></sup>-1</span>. The same holds for each member of NFC.</p><p>One of the parts of this tradition is one by one dance, where each member of MDC dances with a member of NFC. A dance pair is a pair of numbers <span class=\"tex-span\">(<i>a</i>,<i>b</i>)</span> such that member <span class=\"tex-span\"><i>a</i></span> from MDC dances with member <span class=\"tex-span\"><i>b</i></span> from NFC.</p><p>The complexity of a pairs' assignment is the number of pairs of dancing pairs <span class=\"tex-span\">(<i>a</i>,<i>b</i>)</span> and <span class=\"tex-span\">(<i>c</i>,<i>d</i>)</span> such that <span class=\"tex-span\"><i>a</i>&lt;<i>c</i></span> and <span class=\"tex-span\"><i>b</i>&gt;<i>d</i></span>.</p><p>You are given a binary number of length <span class=\"tex-span\"><i>n</i></span> named <span class=\"tex-span\"><i>x</i></span>. We know that member <span class=\"tex-span\"><i>i</i></span> from MDC dances with member <img align=\"middle\" class=\"tex-formula\" src=\"http://cf.hustoj.com:80/userfiles/image/7c381293ba0383fef1a4a87866cec550a45764f859.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> from NFC. Your task is to calculate the complexity of this assignment modulo <span class=\"tex-span\">1000000007</span> <span class=\"tex-span\">(10<sup class=\"upper-index\">9</sup>+7)</span>.</p><p>Expression <img align=\"middle\" class=\"tex-formula\" src=\"http://cf.hustoj.com:80/userfiles/image/6414d574a1ee8301d86f2c5d15396d8dc43283135959.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> denotes applying &laquo;XOR&raquo; to numbers <span class=\"tex-span\"><i>x</i></span> and <span class=\"tex-span\"><i>y</i></span>. This operation exists in all modern programming languages, for example, in <span class=\"tex-font-style-it\">C++</span> and <span class=\"tex-font-style-it\">Java</span> it denotes as &laquo;<span class=\"tex-font-style-tt\">^</span>&raquo;, in <span class=\"tex-font-style-it\">Pascal</span> &minus; &laquo;<span class=\"tex-font-style-tt\">xor</span>&raquo;.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line of input contains a binary number <span class=\"tex-span\"><i>x</i></span> of lenght <span class=\"tex-span\"><i>n</i></span>, <span class=\"tex-span\">(1&le;<i>n</i>&le;100)</span>.</p><p>This number may contain leading zeros.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print the complexity of the given dance assignent modulo <span class=\"tex-span\">1000000007</span> <span class=\"tex-span\">(10<sup class=\"upper-index\">9</sup>+7)</span>.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>11<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>6<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>01<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>2<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>1<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>1<br/></pre></div></div></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 1000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}