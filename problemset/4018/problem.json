{"title": "Edges in MST", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">D. Edges in MST</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>You are given a connected weighted undirected graph without any loops and multiple edges. </p><p>Let us remind you that a graph's <span class=\"tex-font-style-it\">spanning tree</span> is defined as an acyclic connected subgraph of the given graph that includes all of the graph's vertexes. The <span class=\"tex-font-style-it\">weight</span> of a tree is defined as the sum of weights of the edges that the given tree contains. The <span class=\"tex-font-style-it\">minimum spanning tree</span> (<span class=\"tex-font-style-bf\">MST</span>) of a graph is defined as the graph's spanning tree having the minimum possible weight. For any connected graph obviously exists the minimum spanning tree, but in the general case, a graph's minimum spanning tree is not unique.</p><p>Your task is to determine the following for each edge of the given graph: whether it is either included in <span class=\"tex-font-style-bf\">any</span> MST, or included <span class=\"tex-font-style-bf\">at least in one</span> MST, or <span class=\"tex-font-style-bf\">not included in any</span> MST.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains two integers <span class=\"tex-span\"><i>n</i></span> and <span class=\"tex-span\"><i>m</i></span> (<span class=\"tex-span\">2&le;<i>n</i>&le;10<sup class=\"upper-index\">5</sup></span>, <img align=\"middle\" class=\"tex-formula\" src=\"http://cf.hustoj.com:80/userfiles/image/8cd9f117ae47041ae69b146dd06a9d80c3353c3b45.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/>) &minus; the number of the graph's vertexes and edges, correspondingly. Then follow <span class=\"tex-span\"><i>m</i></span> lines, each of them contains three integers &minus; the description of the graph's edges as \"<span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\"><i>i</i></sub></span> <span class=\"tex-span\"><i>w</i><sub class=\"lower-index\"><i>i</i></sub></span>\" (<span class=\"tex-span\">1&le;<i>a</i><sub class=\"lower-index\"><i>i</i></sub>,<i>b</i><sub class=\"lower-index\"><i>i</i></sub>&le;<i>n</i>,1&le;<i>w</i><sub class=\"lower-index\"><i>i</i></sub>&le;10<sup class=\"upper-index\">6</sup>,<i>a</i><sub class=\"lower-index\"><i>i</i></sub>&ne;<i>b</i><sub class=\"lower-index\"><i>i</i></sub></span>), where <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> and <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\"><i>i</i></sub></span> are the numbers of vertexes connected by the <span class=\"tex-span\"><i>i</i></span>-th edge, <span class=\"tex-span\"><i>w</i><sub class=\"lower-index\"><i>i</i></sub></span> is the edge's weight. It is guaranteed that the graph is connected and doesn't contain loops or multiple edges.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print <span class=\"tex-span\"><i>m</i></span> lines &minus; the answers for all edges. If the <span class=\"tex-span\"><i>i</i></span>-th edge is included in any MST, print \"<span class=\"tex-font-style-tt\">any</span>\"; if the <span class=\"tex-span\"><i>i</i></span>-th edge is included at least in one MST, print \"<span class=\"tex-font-style-tt\">at least one</span>\"; if the <span class=\"tex-span\"><i>i</i></span>-th edge isn't included in any MST, print \"<span class=\"tex-font-style-tt\">none</span>\". Print the answers for the edges in the order in which the edges are specified in the input.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>4 5<br/>1 2 101<br/>1 3 100<br/>2 3 2<br/>2 4 2<br/>3 4 1<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>none<br/>any<br/>at least one<br/>at least one<br/>any<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>3 3<br/>1 2 1<br/>2 3 1<br/>1 3 2<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>any<br/>any<br/>none<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>3 3<br/>1 2 1<br/>2 3 1<br/>1 3 1<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>at least one<br/>at least one<br/>at least one<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>In the second sample the MST is unique for the given graph: it contains two first edges.</p><p>In the third sample any two edges form the MST for the given graph. That means that each edge is included at least in one MST.</p></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}