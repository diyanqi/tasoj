{"title": "Hexagons!", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">D. Hexagons!</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>0.5 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>64 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>After a probationary period in the game development company of IT City Petya was included in a group of the programmers that develops a new turn-based strategy game resembling the well known \"Heroes of Might &amp; Magic\". A part of the game is turn-based fights of big squadrons of enemies on infinite fields where every cell is in form of a hexagon.</p><p>Some of magic effects are able to affect several field cells at once, cells that are situated not farther than <span class=\"tex-span\"><i>n</i></span> cells away from the cell in which the effect was applied. The distance between cells is the minimum number of cell border crosses on a path from one cell to another.</p><p>It is easy to see that the number of cells affected by a magic effect grows rapidly when <span class=\"tex-span\"><i>n</i></span> increases, so it can adversely affect the game performance. That's why Petya decided to write a program that can, given <span class=\"tex-span\"><i>n</i></span>, determine the number of cells that should be repainted after effect application, so that game designers can balance scale of the effects and the game performance. Help him to do it. Find the number of hexagons situated not farther than <span class=\"tex-span\"><i>n</i></span> cells away from a given cell.</p><center> <img class=\"tex-graphics\" src=\"http://cf.hustoj.com:80/userfiles/image/ac2ac560c01da0448913a2def8ccd952f86d855931.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> </center></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The only line of the input contains one integer <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">0&le;<i>n</i>&le;10<sup class=\"upper-index\">9</sup></span>).</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Output one integer &minus; the number of hexagons situated not farther than <span class=\"tex-span\"><i>n</i></span> cells away from a given cell.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>2<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>19</pre></div></div></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 500, "memory_limit": 64, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}