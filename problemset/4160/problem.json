{"title": "Lucky Substring", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">B. Lucky Substring</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p><span class=\"tex-font-style-it\">Petya loves lucky numbers. Everybody knows that lucky numbers are positive integers whose decimal representation contains only the lucky digits <span class=\"tex-font-style-bf\">4</span> and <span class=\"tex-font-style-bf\">7</span>. For example, numbers <span class=\"tex-font-style-bf\">47</span>, <span class=\"tex-font-style-bf\">744</span>, <span class=\"tex-font-style-bf\">4</span> are lucky and <span class=\"tex-font-style-bf\">5</span>, <span class=\"tex-font-style-bf\">17</span>, <span class=\"tex-font-style-bf\">467</span> are not.</span></p><p>One day Petya was delivered a string <span class=\"tex-span\"><i>s</i></span>, containing only digits. He needs to find a string that</p><ul><li> represents a lucky number without leading zeroes,</li><li> is not empty,</li><li> is contained in <span class=\"tex-span\"><i>s</i></span> as a substring the maximum number of times.</li></ul><p>Among all the strings for which the three conditions given above are fulfilled, Petya only needs the lexicographically minimum one. Find this string for Petya.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The single line contains a non-empty string <span class=\"tex-span\"><i>s</i></span> whose length can range from <span class=\"tex-span\">1</span> to <span class=\"tex-span\">50</span>, inclusive. The string only contains digits. The string can contain leading zeroes.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>In the only line print the answer to Petya's problem. If the sought string does not exist, print \"-1\" (without quotes).</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>047<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>4<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>16<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>-1<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>472747<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>7<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>The lexicographical comparison of strings is performed by the &lt; operator in the modern programming languages. String <span class=\"tex-span\"><i>x</i></span> is lexicographically less than string <span class=\"tex-span\"><i>y</i></span> either if <span class=\"tex-span\"><i>x</i></span> is a prefix of <span class=\"tex-span\"><i>y</i></span>, or exists such <span class=\"tex-span\"><i>i</i></span> (<span class=\"tex-span\">1&le;<i>i</i>&le;<i>min</i>(|<i>x</i>|,|<i>y</i>|)</span>), that <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\"><i>i</i></sub>&lt;<i>y</i><sub class=\"lower-index\"><i>i</i></sub></span> and for any <span class=\"tex-span\"><i>j</i></span> (<span class=\"tex-span\">1&le;<i>j</i>&lt;<i>i</i></span>) <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\"><i>j</i></sub>=<i>y</i><sub class=\"lower-index\"><i>j</i></sub></span>. Here <span class=\"tex-span\">|<i>a</i>|</span> denotes the length of string <span class=\"tex-span\"><i>a</i></span>.</p><p>In the first sample three conditions are fulfilled for strings \"<span class=\"tex-font-style-tt\">4</span>\", \"<span class=\"tex-font-style-tt\">7</span>\" and \"<span class=\"tex-font-style-tt\">47</span>\". The lexicographically minimum one is \"<span class=\"tex-font-style-tt\">4</span>\".</p><p>In the second sample <span class=\"tex-span\"><i>s</i></span> has no substrings which are lucky numbers.</p><p>In the third sample the three conditions are only fulfilled for string \"<span class=\"tex-font-style-tt\">7</span>\".</p></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}