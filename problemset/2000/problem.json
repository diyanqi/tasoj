{"title": "Professor's task", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">D. Professor's task</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>1 second</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Once a walrus professor Plato asked his programming students to perform the following practical task. </p><p>The students had to implement such a data structure that would support a convex hull on some set of points <span class=\"tex-span\"><i>S</i></span>. The input to the program had <span class=\"tex-span\"><i>q</i></span> queries of two types: </p><p>1. Add a point with coordinates <span class=\"tex-span\">(<i>x</i>,<i>y</i>)</span> into the set <span class=\"tex-span\"><i>S</i></span>. Note that in this case the convex hull of <span class=\"tex-span\"><i>S</i></span> could have changed, and could have remained the same. </p><p>2. Say whether a point with coordinates <span class=\"tex-span\">(<i>x</i>,<i>y</i>)</span> belongs to an area limited by the convex hull, including the border. </p><p>All the students coped with the task. What about you?</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains an integer <span class=\"tex-span\"><i>q</i></span> (<span class=\"tex-span\">4&le;<i>q</i>&le;10<sup class=\"upper-index\">5</sup></span>). </p><p>Then follow <span class=\"tex-span\"><i>q</i></span> lines in the following way: \"<span class=\"tex-span\"><i>t</i></span> <span class=\"tex-span\"><i>x</i></span> <span class=\"tex-span\"><i>y</i></span>\", where <span class=\"tex-span\"><i>t</i></span> is the query type (1 or 2), and <span class=\"tex-span\">(<i>x</i>,<i>y</i>)</span> are the coordinates of the point (<span class=\"tex-span\">-10<sup class=\"upper-index\">6</sup>&le;<i>x</i>,<i>y</i>&le;10<sup class=\"upper-index\">6</sup></span>, <span class=\"tex-span\"><i>x</i></span> and <span class=\"tex-span\"><i>y</i></span> are integers). </p><p>There is at least one query of type 2.</p><p>It is guaranteed that the three queries of the first type follow first and the points given in the queries form a non-degenerative triangle. Also all the points added in <span class=\"tex-span\"><i>S</i></span> are distinct.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>For each query of the second type print one string containing \"<span class=\"tex-font-style-tt\">YES</span>\", if the point lies inside the convex hull or on its border. Otherwise, print \"<span class=\"tex-font-style-tt\">NO</span>\".</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>8<br/>1 0 0<br/>1 2 0<br/>1 2 2<br/>2 1 0<br/>1 0 2<br/>2 1 1<br/>2 2 1<br/>2 20 -1<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>YES<br/>YES<br/>YES<br/>NO<br/></pre></div></div></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 1000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}