{"title": "MEX Queries", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">F. MEX Queries</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>You are given a set of integer numbers, initially it is empty. You should perform <span class=\"tex-span\"><i>n</i></span> queries.</p><p>There are three different types of queries: </p><ul> <li> <span class=\"tex-font-style-tt\">1</span> <span class=\"tex-span\"><i>l</i></span> <span class=\"tex-span\"><i>r</i></span> &minus; Add all missing numbers from the interval <span class=\"tex-span\">[<i>l</i>,<i>r</i>]</span> </li><li> <span class=\"tex-font-style-tt\">2</span> <span class=\"tex-span\"><i>l</i></span> <span class=\"tex-span\"><i>r</i></span> &minus; Remove all present numbers from the interval <span class=\"tex-span\">[<i>l</i>,<i>r</i>]</span> </li><li> <span class=\"tex-font-style-tt\">3</span> <span class=\"tex-span\"><i>l</i></span> <span class=\"tex-span\"><i>r</i></span> &minus; Invert the interval <span class=\"tex-span\">[<i>l</i>,<i>r</i>]</span> &minus; add all missing and remove all present numbers from the interval <span class=\"tex-span\">[<i>l</i>,<i>r</i>]</span> </li></ul><p>After each query you should output <span class=\"tex-font-style-it\">MEX</span> of the set &minus; the smallest positive (<span class=\"tex-font-style-it\">MEX</span> <span class=\"tex-span\">&ge;1</span>) integer number which is not presented in the set.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains one integer number <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">1&le;<i>n</i>&le;10<sup class=\"upper-index\">5</sup></span>).</p><p>Next <span class=\"tex-span\"><i>n</i></span> lines contain three integer numbers <span class=\"tex-span\"><i>t</i>,<i>l</i>,<i>r</i></span> (<span class=\"tex-span\">1&le;<i>t</i>&le;3,1&le;<i>l</i>&le;<i>r</i>&le;10<sup class=\"upper-index\">18</sup></span>) &minus; type of the query, left and right bounds.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print <span class=\"tex-font-style-it\">MEX</span> of the set after each query.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>3<br/>1 3 4<br/>3 1 6<br/>2 1 3<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>1<br/>3<br/>1<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>4<br/>1 1 3<br/>3 5 6<br/>2 4 4<br/>3 1 6<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>4<br/>4<br/>4<br/>1<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>Here are contents of the set after each query in the first example:</p><ol> <li> <span class=\"tex-span\">{3,4}</span> &minus; the interval <span class=\"tex-span\">[3,4]</span> is added </li><li> <span class=\"tex-span\">{1,2,5,6}</span> &minus; numbers <span class=\"tex-span\">{3,4}</span> from the interval <span class=\"tex-span\">[1,6]</span> got deleted and all the others are added </li><li> <span class=\"tex-span\">{5,6}</span> &minus; numbers <span class=\"tex-span\">{1,2}</span> got deleted </li></ol></div></div><p> </p></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}