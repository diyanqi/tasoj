{"title": "Batch Sort", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">B. Batch Sort</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>You are given a table consisting of <span class=\"tex-span\"><i>n</i></span> rows and <span class=\"tex-span\"><i>m</i></span> columns.</p><p>Numbers in each row form a permutation of integers from <span class=\"tex-span\">1</span> to <span class=\"tex-span\"><i>m</i></span>.</p><p>You are allowed to pick two elements in one row and swap them, but <span class=\"tex-font-style-bf\">no more than once</span> for each row. Also, <span class=\"tex-font-style-bf\">no more than once</span> you are allowed to pick two columns and swap them. Thus, you are allowed to perform from <span class=\"tex-span\">0</span> to <span class=\"tex-span\"><i>n</i>+1</span> actions in total. <span class=\"tex-font-style-bf\">Operations can be performed in any order</span>.</p><p>You have to check whether it's possible to obtain the identity permutation <span class=\"tex-span\">1,2,...,<i>m</i></span> in each row. In other words, check if one can perform some of the operation following the given rules and make each row sorted in increasing order.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line of the input contains two integers <span class=\"tex-span\"><i>n</i></span> and <span class=\"tex-span\"><i>m</i></span> (<span class=\"tex-span\">1&le;<i>n</i>,<i>m</i>&le;20</span>)&minus; the number of rows and the number of columns in the given table. </p><p>Each of next <span class=\"tex-span\"><i>n</i></span> lines contains <span class=\"tex-span\"><i>m</i></span> integers&minus; elements of the table. It's guaranteed that numbers in each line form a permutation of integers from <span class=\"tex-span\">1</span> to <span class=\"tex-span\"><i>m</i></span>.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>If there is a way to obtain the identity permutation in each row by following the given rules, print \"<span class=\"tex-font-style-tt\">YES</span>\" (without quotes) in the only line of the output. Otherwise, print \"<span class=\"tex-font-style-tt\">NO</span>\" (without quotes).</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>2 4<br/>1 3 2 4<br/>1 3 4 2<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>YES<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>4 4<br/>1 2 3 4<br/>2 3 4 1<br/>3 4 1 2<br/>4 1 2 3<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>NO<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>3 6<br/>2 1 3 4 5 6<br/>1 2 4 3 5 6<br/>1 2 3 4 6 5<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>YES<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>In the first sample, one can act in the following way: </p><ol> <li> Swap second and third columns. Now the table is <center class=\"tex-equation\"><span class=\"tex-span\">1234</span></center> <center class=\"tex-equation\"><span class=\"tex-span\">1432</span></center> </li><li> In the second row, swap the second and the fourth elements. Now the table is <center class=\"tex-equation\"><span class=\"tex-span\">1234</span></center> <center class=\"tex-equation\"><span class=\"tex-span\">1234</span></center> </li></ol></div></div><p> </p></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}