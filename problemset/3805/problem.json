{"title": "Periodical Numbers", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">E. Periodical Numbers</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>A non-empty string <span class=\"tex-span\"><i>s</i></span> is called <span class=\"tex-font-style-it\">binary</span>, if it consists only of characters \"<span class=\"tex-font-style-tt\">0</span>\" and \"<span class=\"tex-font-style-tt\">1</span>\". Let's number the characters of binary string <span class=\"tex-span\"><i>s</i></span> from 1 to the string's length and let's denote the <span class=\"tex-span\"><i>i</i></span>-th character in string <span class=\"tex-span\"><i>s</i></span> as <span class=\"tex-span\"><i>s</i><sub class=\"lower-index\"><i>i</i></sub></span>.</p><p>Binary string <span class=\"tex-span\"><i>s</i></span> with length <span class=\"tex-span\"><i>n</i></span> is <span class=\"tex-font-style-it\">periodical</span>, if there is an integer <span class=\"tex-span\">1&le;<i>k</i>&lt;<i>n</i></span> such that: </p><ul> <li> <span class=\"tex-span\"><i>k</i></span> is a divisor of number <span class=\"tex-span\"><i>n</i></span> </li><li> for all <span class=\"tex-span\">1&le;<i>i</i>&le;<i>n</i>-<i>k</i></span>, the following condition fulfills: <span class=\"tex-span\"><i>s</i><sub class=\"lower-index\"><i>i</i></sub>=<i>s</i><sub class=\"lower-index\"><i>i</i>+<i>k</i></sub></span> </li></ul><p>For example, binary strings \"101010\" and \"11\" are periodical and \"10\" and \"10010\" are not.</p><p>A positive integer <span class=\"tex-span\"><i>x</i></span> is <span class=\"tex-font-style-it\">periodical</span>, if its binary representation (without leading zeroes) is a periodic string.</p><p>Your task is to calculate, how many periodic numbers are in the interval from <span class=\"tex-span\"><i>l</i></span> to <span class=\"tex-span\"><i>r</i></span> (both ends are included).</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The single input line contains two integers <span class=\"tex-span\"><i>l</i></span> and <span class=\"tex-span\"><i>r</i></span> (<span class=\"tex-span\">1&le;<i>l</i>&le;<i>r</i>&le;10<sup class=\"upper-index\">18</sup></span>). The numbers are separated by a space.</p><p>Please, do not use the <span class=\"tex-font-style-tt\">%lld</span> specifier to read or write 64-bit integers in C++. It is preferred to use the cin, cout streams or the <span class=\"tex-font-style-tt\">%I64d</span> specifier.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print a single integer, showing how many periodic numbers are in the interval from <span class=\"tex-span\"><i>l</i></span> to <span class=\"tex-span\"><i>r</i></span> (both ends are included).</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>1 10<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>3<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>25 38<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>2<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>In the first sample periodic numbers are <span class=\"tex-span\">3</span>, <span class=\"tex-span\">7</span> and <span class=\"tex-span\">10</span>.</p><p>In the second sample periodic numbers are <span class=\"tex-span\">31</span> and <span class=\"tex-span\">36</span>.</p></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}