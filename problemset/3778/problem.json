{"title": "Cosmic Tables", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">B. Cosmic Tables</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>3 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>The Free Meteor Association (FMA) has got a problem: as meteors are moving, the Universal Cosmic Descriptive Humorous Program (UCDHP) needs to add a special module that would analyze this movement. </p><p>UCDHP stores some secret information about meteors as an <span class=\"tex-span\"><i>n</i>&times;<i>m</i></span> table with integers in its cells. The order of meteors in the Universe is changing. That's why the main UCDHP module receives the following queries:</p><ul> <li> The query to swap two table rows; </li><li> The query to swap two table columns; </li><li> The query to obtain a secret number in a particular table cell. </li></ul><p>As the main UCDHP module is critical, writing the functional of working with the table has been commissioned to you.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains three space-separated integers <span class=\"tex-span\"><i>n</i></span>, <span class=\"tex-span\"><i>m</i></span> and <span class=\"tex-span\"><i>k</i></span> (<span class=\"tex-span\">1&le;<i>n</i>,<i>m</i>&le;1000</span>, <span class=\"tex-span\">1&le;<i>k</i>&le;500000</span>) &minus; the number of table columns and rows and the number of queries, correspondingly.</p><p>Next <span class=\"tex-span\"><i>n</i></span> lines contain <span class=\"tex-span\"><i>m</i></span> space-separated numbers each &minus; the initial state of the table. Each number <span class=\"tex-span\"><i>p</i></span> in the table is an integer and satisfies the inequality <span class=\"tex-span\">0&le;<i>p</i>&le;10<sup class=\"upper-index\">6</sup></span>.</p><p>Next <span class=\"tex-span\"><i>k</i></span> lines contain queries in the format \"<span class=\"tex-span\"><i>s</i><sub class=\"lower-index\"><i>i</i></sub></span> <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\"><i>i</i></sub></span> <span class=\"tex-span\"><i>y</i><sub class=\"lower-index\"><i>i</i></sub></span>\", where <span class=\"tex-span\"><i>s</i><sub class=\"lower-index\"><i>i</i></sub></span> is one of the characters \"<span class=\"tex-font-style-tt\">c</span>\", \"<span class=\"tex-font-style-tt\">r</span>\" or \"<span class=\"tex-font-style-tt\">g</span>\", and <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\"><i>i</i></sub></span>, <span class=\"tex-span\"><i>y</i><sub class=\"lower-index\"><i>i</i></sub></span> are two integers.</p><ul> <li> If <span class=\"tex-span\"><i>s</i><sub class=\"lower-index\"><i>i</i></sub></span> = \"<span class=\"tex-font-style-tt\">c</span>\", then the current query is the query to swap columns with indexes <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\"><i>i</i></sub></span> and <span class=\"tex-span\"><i>y</i><sub class=\"lower-index\"><i>i</i></sub></span> (<span class=\"tex-span\">1&le;<i>x</i>,<i>y</i>&le;<i>m</i>,<i>x</i>&ne;<i>y</i></span>); </li><li> If <span class=\"tex-span\"><i>s</i><sub class=\"lower-index\"><i>i</i></sub></span> = \"<span class=\"tex-font-style-tt\">r</span>\", then the current query is the query to swap rows with indexes <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\"><i>i</i></sub></span> and <span class=\"tex-span\"><i>y</i><sub class=\"lower-index\"><i>i</i></sub></span> (<span class=\"tex-span\">1&le;<i>x</i>,<i>y</i>&le;<i>n</i>,<i>x</i>&ne;<i>y</i></span>); </li><li> If <span class=\"tex-span\"><i>s</i><sub class=\"lower-index\"><i>i</i></sub></span> = \"<span class=\"tex-font-style-tt\">g</span>\", then the current query is the query to obtain the number that located in the <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\"><i>i</i></sub></span>-th row and in the <span class=\"tex-span\"><i>y</i><sub class=\"lower-index\"><i>i</i></sub></span>-th column (<span class=\"tex-span\">1&le;<i>x</i>&le;<i>n</i>,1&le;<i>y</i>&le;<i>m</i></span>). </li></ul><p>The table rows are considered to be indexed from top to bottom from 1 to <span class=\"tex-span\"><i>n</i></span>, and the table columns &minus; from left to right from 1 to <span class=\"tex-span\"><i>m</i></span>.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>For each query to obtain a number (<span class=\"tex-span\"><i>s</i><sub class=\"lower-index\"><i>i</i></sub></span> = \"<span class=\"tex-font-style-tt\">g</span>\") print the required number. Print the answers to the queries in the order of the queries in the input.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>3 3 5<br/>1 2 3<br/>4 5 6<br/>7 8 9<br/>g 3 2<br/>r 3 2<br/>c 2 3<br/>g 2 2<br/>g 3 2<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>8<br/>9<br/>6<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>2 3 3<br/>1 2 4<br/>3 1 5<br/>c 2 1<br/>r 1 2<br/>g 1 3<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>5<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>Let's see how the table changes in the second test case.</p><p>After the first operation is fulfilled, the table looks like that:</p><p>2 1 4</p><p>1 3 5</p><p>After the second operation is fulfilled, the table looks like that:</p><p>1 3 5</p><p>2 1 4</p><p>So the answer to the third query (the number located in the first row and in the third column) will be 5.</p></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 3000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}