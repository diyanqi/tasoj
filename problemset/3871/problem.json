{"title": "The Next Good String", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">D. The Next Good String</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>In problems on strings one often has to find a string with some particular properties. The problem authors were reluctant to waste time on thinking of a name for some string so they called it <span class=\"tex-font-style-it\">good</span>. A string is good if it doesn't have palindrome substrings longer than or equal to <span class=\"tex-span\"><i>d</i></span>. </p><p>You are given string <span class=\"tex-span\"><i>s</i></span>, consisting only of lowercase English letters. Find a good string <span class=\"tex-span\"><i>t</i></span> with length <span class=\"tex-span\">|<i>s</i>|</span>, consisting of lowercase English letters, which is lexicographically larger than <span class=\"tex-span\"><i>s</i></span>. Of all such strings string <span class=\"tex-span\"><i>t</i></span> must be lexicographically minimum.</p><p>We will call a non-empty string <span class=\"tex-span\"><i>s</i>[<i>a</i>...<i>b</i>]=<i>s</i><sub class=\"lower-index\"><i>a</i></sub><i>s</i><sub class=\"lower-index\"><i>a</i>+1</sub>... <i>s</i><sub class=\"lower-index\"><i>b</i></sub></span> <span class=\"tex-span\">(1&le;<i>a</i>&le;<i>b</i>&le;|<i>s</i>|)</span> a <span class=\"tex-font-style-it\">substring</span> of string <span class=\"tex-span\"><i>s</i>=<i>s</i><sub class=\"lower-index\">1</sub><i>s</i><sub class=\"lower-index\">2</sub>... <i>s</i><sub class=\"lower-index\">|<i>s</i>|</sub></span>.</p><p>A non-empty string <span class=\"tex-span\"><i>s</i>=<i>s</i><sub class=\"lower-index\">1</sub><i>s</i><sub class=\"lower-index\">2</sub>... <i>s</i><sub class=\"lower-index\"><i>n</i></sub></span> is called <span class=\"tex-font-style-it\">a palindrome</span> if for all <span class=\"tex-span\"><i>i</i></span> from <span class=\"tex-span\">1</span> to <span class=\"tex-span\"><i>n</i></span> the following fulfills: <span class=\"tex-span\"><i>s</i><sub class=\"lower-index\"><i>i</i></sub>=<i>s</i><sub class=\"lower-index\"><i>n</i>-<i>i</i>+1</sub></span>. In other words, palindrome read the same in both directions.</p><p>String <span class=\"tex-span\"><i>x</i>=<i>x</i><sub class=\"lower-index\">1</sub><i>x</i><sub class=\"lower-index\">2</sub>... <i>x</i><sub class=\"lower-index\">|<i>x</i>|</sub></span> is <span class=\"tex-font-style-it\">lexicographically larger</span> than string <span class=\"tex-span\"><i>y</i>=<i>y</i><sub class=\"lower-index\">1</sub><i>y</i><sub class=\"lower-index\">2</sub>... <i>y</i><sub class=\"lower-index\">|<i>y</i>|</sub></span>, if either <span class=\"tex-span\">|<i>x</i>|&gt;|<i>y</i>|</span> and <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\">1</sub>=<i>y</i><sub class=\"lower-index\">1</sub>,<i>x</i><sub class=\"lower-index\">2</sub>=<i>y</i><sub class=\"lower-index\">2</sub>,... ,<i>x</i><sub class=\"lower-index\">|<i>y</i>|</sub>=<i>y</i><sub class=\"lower-index\">|<i>y</i>|</sub></span>, or there exists such number <span class=\"tex-span\"><i>r</i></span> <span class=\"tex-span\">(<i>r</i>&lt;|<i>x</i>|,<i>r</i>&lt;|<i>y</i>|)</span>, that <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\">1</sub>=<i>y</i><sub class=\"lower-index\">1</sub>,<i>x</i><sub class=\"lower-index\">2</sub>=<i>y</i><sub class=\"lower-index\">2</sub>,... ,<i>x</i><sub class=\"lower-index\"><i>r</i></sub>=<i>y</i><sub class=\"lower-index\"><i>r</i></sub></span> and <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\"><i>r</i>+1</sub>&gt;<i>y</i><sub class=\"lower-index\"><i>r</i>+1</sub></span>. Characters in such strings are compared like their ASCII codes.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains integer <span class=\"tex-span\"><i>d</i></span> (<span class=\"tex-span\">1&le;<i>d</i>&le;|<i>s</i>|</span>).</p><p>The second line contains a non-empty string <span class=\"tex-span\"><i>s</i></span>, its length is no more than <span class=\"tex-span\">4&middot;10<sup class=\"upper-index\">5</sup></span> characters. The string consists of lowercase English letters.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print the good string that lexicographically follows <span class=\"tex-span\"><i>s</i></span>, has the same length and consists of only lowercase English letters. If such string does not exist, print \"<span class=\"tex-font-style-tt\">Impossible</span>\" (without the quotes).</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>3<br/>aaaaaaa<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>aabbcaa<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>3<br/>zzyzzzz<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>Impossible<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>4<br/>abbabbbabbb<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>abbbcaaabab<br/></pre></div></div></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}