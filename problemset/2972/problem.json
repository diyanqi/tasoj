{"title": "DZY Loves Strings", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">B. DZY Loves Strings</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>1 second</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>DZY loves collecting special strings which only contain lowercase letters. For each lowercase letter <span class=\"tex-span\"><i>c</i></span> DZY knows its value <span class=\"tex-span\"><i>w</i><sub class=\"lower-index\"><i>c</i></sub></span>. For each special string <span class=\"tex-span\"><i>s</i>=<i>s</i><sub class=\"lower-index\">1</sub><i>s</i><sub class=\"lower-index\">2</sub>... <i>s</i><sub class=\"lower-index\">|<i>s</i>|</sub></span> (<span class=\"tex-span\">|<i>s</i>|</span> is the length of the string) he represents its value with a function <span class=\"tex-span\"><i>f</i>(<i>s</i>)</span>, where </p><center class=\"tex-equation\"><img align=\"middle\" class=\"tex-formula\" src=\"http://cf.hustoj.com:80/userfiles/image/cef8bf3f871fc8a92c8bf2b55d271657effc513310.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/></center><p>Now DZY has a string <span class=\"tex-span\"><i>s</i></span>. He wants to insert <span class=\"tex-span\"><i>k</i></span> lowercase letters into this string in order to get the largest possible value of the resulting string. Can you help him calculate the largest possible value he could get? </p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains a single string <span class=\"tex-span\"><i>s</i>(1&le;|<i>s</i>|&le;10<sup class=\"upper-index\">3</sup>)</span>.</p><p>The second line contains a single integer <span class=\"tex-span\"><i>k</i>(0&le;<i>k</i>&le;10<sup class=\"upper-index\">3</sup>)</span>.</p><p>The third line contains twenty-six integers from <span class=\"tex-span\"><i>w</i><sub class=\"lower-index\"><i>a</i></sub></span> to <span class=\"tex-span\"><i>w</i><sub class=\"lower-index\"><i>z</i></sub></span>. Each such number is non-negative and doesn't exceed <span class=\"tex-span\">1000</span>.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print a single integer &minus; the largest possible value of the resulting string DZY could get.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>abc<br/>3<br/>1 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>41<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>In the test sample DZY can obtain \"<span class=\"tex-font-style-tt\">abcbbc</span>\", <span class=\"tex-span\"><i>value</i>=1&middot;1+2&middot;2+3&middot;2+4&middot;2+5&middot;2+6&middot;2=41</span>.</p></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 1000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}