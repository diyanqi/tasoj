{"title": "Genetic engineering", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">C. Genetic engineering</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>\"Multidimensional spaces are completely out of style these days, unlike genetics problems\" &minus; thought physicist Woll and changed his subject of study to bioinformatics. Analysing results of sequencing he faced the following problem concerning DNA sequences. We will further think of a DNA sequence as an arbitrary string of uppercase letters \"<span class=\"tex-font-style-tt\">A</span>\", \"<span class=\"tex-font-style-tt\">C</span>\", \"<span class=\"tex-font-style-tt\">G</span>\" and \"<span class=\"tex-font-style-tt\">T</span>\" (of course, this is a simplified interpretation).</p><p>Let <span class=\"tex-span\"><i>w</i></span> be a long DNA sequence and <span class=\"tex-span\"><i>s</i><sub class=\"lower-index\">1</sub>,<i>s</i><sub class=\"lower-index\">2</sub>,...,<i>s</i><sub class=\"lower-index\"><i>m</i></sub></span> &minus; collection of short DNA sequences. Let us say that the collection <span class=\"tex-font-style-it\">filters</span> <span class=\"tex-span\"><i>w</i></span> iff <span class=\"tex-span\"><i>w</i></span> can be covered with the sequences from the collection. Certainly, substrings corresponding to the different positions of the string may intersect or even cover each other. More formally: denote by <span class=\"tex-span\">|<i>w</i>|</span> the length of <span class=\"tex-span\"><i>w</i></span>, let symbols of <span class=\"tex-span\"><i>w</i></span> be numbered from <span class=\"tex-span\">1</span> to <span class=\"tex-span\">|<i>w</i>|</span>. Then for each position <span class=\"tex-span\"><i>i</i></span> in <span class=\"tex-span\"><i>w</i></span> there exist pair of indices <span class=\"tex-span\"><i>l</i>,<i>r</i></span> (<span class=\"tex-span\">1&le;<i>l</i>&le;<i>i</i>&le;<i>r</i>&le;|<i>w</i>|</span>) such that the substring <span class=\"tex-span\"><i>w</i>[<i>l</i>...<i>r</i>]</span> equals one of the elements <span class=\"tex-span\"><i>s</i><sub class=\"lower-index\">1</sub>,<i>s</i><sub class=\"lower-index\">2</sub>,...,<i>s</i><sub class=\"lower-index\"><i>m</i></sub></span> of the collection.</p><p>Woll wants to calculate the number of DNA sequences of a given length filtered by a given collection, but he doesn't know how to deal with it. Help him! Your task is to find the number of different DNA sequences of length <span class=\"tex-span\"><i>n</i></span> filtered by the collection <span class=\"tex-span\">{<i>s</i><sub class=\"lower-index\"><i>i</i></sub>}</span>.</p><p>Answer may appear very large, so output it modulo <span class=\"tex-span\">1000000009</span>.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>First line contains two integer numbers <span class=\"tex-span\"><i>n</i></span> and <span class=\"tex-span\"><i>m</i></span> (<span class=\"tex-span\">1&le;<i>n</i>&le;1000,1&le;<i>m</i>&le;10</span>) &minus; the length of the string and the number of sequences in the collection correspondently. </p><p>Next <span class=\"tex-span\"><i>m</i></span> lines contain the collection sequences <span class=\"tex-span\"><i>s</i><sub class=\"lower-index\"><i>i</i></sub></span>, one per line. Each <span class=\"tex-span\"><i>s</i><sub class=\"lower-index\"><i>i</i></sub></span> is a nonempty string of length not greater than <span class=\"tex-span\">10</span>. All the strings consist of uppercase letters \"<span class=\"tex-font-style-tt\">A</span>\", \"<span class=\"tex-font-style-tt\">C</span>\", \"<span class=\"tex-font-style-tt\">G</span>\", \"<span class=\"tex-font-style-tt\">T</span>\". The collection may contain identical strings.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Output should contain a single integer &minus; the number of strings filtered by the collection modulo <span class=\"tex-span\">1000000009</span> (<span class=\"tex-span\">10<sup class=\"upper-index\">9</sup>+9</span>).</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>2 1<br>A<br/></br></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>1<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>6 2<br/>CAT<br/>TACT<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>2<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>In the first sample, a string has to be filtered by \"<span class=\"tex-font-style-tt\">A</span>\". Clearly, there is only one such string: \"<span class=\"tex-font-style-tt\">AA</span>\".</p><p>In the second sample, there exist exactly two different strings satisfying the condition (see the pictures below).</p><center> <img class=\"tex-graphics\" src=\"http://cf.hustoj.com:80/userfiles/image/be1be58769f48be9bd4e32f281481719eed89b585353.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> </center><center> <img class=\"tex-graphics\" src=\"http://cf.hustoj.com:80/userfiles/image/c288d8783f4f5c3dcc43f26bd80d1d044b5676485353.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> </center></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}