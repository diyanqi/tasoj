{"title": "Kolya and Tandem Repeat", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">B. Kolya and Tandem Repeat</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Kolya got string <span class=\"tex-span\"><i>s</i></span> for his birthday, the string consists of small English letters. He immediately added <span class=\"tex-span\"><i>k</i></span> more characters to the right of the string.</p><p>Then Borya came and said that the new string contained a <span class=\"tex-font-style-it\">tandem repeat</span> of length <span class=\"tex-span\"><i>l</i></span> as a substring. How large could <span class=\"tex-span\"><i>l</i></span> be?</p><p>See notes for definition of a <span class=\"tex-font-style-it\">tandem repeat</span>.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains <span class=\"tex-span\"><i>s</i></span> (<span class=\"tex-span\">1&le;|<i>s</i>|&le;200</span>). This string contains only small English letters. The second line contains number <span class=\"tex-span\"><i>k</i></span> (<span class=\"tex-span\">1&le;<i>k</i>&le;200</span>) &minus; the number of the added characters.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print a single number &minus; the maximum length of the tandem repeat that could have occurred in the new string.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>aaba<br/>2<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>6<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>aaabbbb<br/>2<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>6<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>abracadabra<br/>10<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>20<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>A tandem repeat of length <span class=\"tex-span\">2<i>n</i></span> is string <span class=\"tex-span\"><i>s</i></span>, where for any position <span class=\"tex-span\"><i>i</i></span> (<span class=\"tex-span\">1&le;<i>i</i>&le;<i>n</i></span>) the following condition fulfills: <span class=\"tex-span\"><i>s</i><sub class=\"lower-index\"><i>i</i></sub>=<i>s</i><sub class=\"lower-index\"><i>i</i>+<i>n</i></sub></span>.</p><p>In the first sample Kolya could obtain a string <span class=\"tex-font-style-tt\">aabaab</span>, in the second &minus; <span class=\"tex-font-style-tt\">aaabbbbbb</span>, in the third &minus; <span class=\"tex-font-style-bf\">abracadabrabracadabra</span>.</p></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}