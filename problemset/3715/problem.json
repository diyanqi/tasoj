{"title": "TorCoder", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">F. TorCoder</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>3 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>input.txt</div><div class=\"output-file\"><div class=\"property-title\">output</div>output.txt</div></div><div><p>A boy named Leo doesn't miss a single TorCoder contest round. On the last TorCoder round number 100666 Leo stumbled over the following problem. He was given a string <span class=\"tex-span\"><i>s</i></span>, consisting of <span class=\"tex-span\"><i>n</i></span> lowercase English letters, and <span class=\"tex-span\"><i>m</i></span> queries. Each query is characterised by a pair of integers <span class=\"tex-span\"><i>l</i><sub class=\"lower-index\"><i>i</i></sub>,<i>r</i><sub class=\"lower-index\"><i>i</i></sub></span> <span class=\"tex-span\">(1&le;<i>l</i><sub class=\"lower-index\"><i>i</i></sub>&le;<i>r</i><sub class=\"lower-index\"><i>i</i></sub>&le;<i>n</i>)</span>. </p><p>We'll consider the letters in the string numbered from 1 to <span class=\"tex-span\"><i>n</i></span> from left to right, that is, <span class=\"tex-span\"><i>s</i>=<i>s</i><sub class=\"lower-index\">1</sub><i>s</i><sub class=\"lower-index\">2</sub>... <i>s</i><sub class=\"lower-index\"><i>n</i></sub></span>. </p><p>After each query he must swap letters with indexes from <span class=\"tex-span\"><i>l</i><sub class=\"lower-index\"><i>i</i></sub></span> to <span class=\"tex-span\"><i>r</i><sub class=\"lower-index\"><i>i</i></sub></span> inclusive in string <span class=\"tex-span\"><i>s</i></span> so as to make substring <span class=\"tex-span\">(<i>l</i><sub class=\"lower-index\"><i>i</i></sub>,<i>r</i><sub class=\"lower-index\"><i>i</i></sub>)</span> a palindrome. If there are multiple such letter permutations, you should choose the one where string <span class=\"tex-span\">(<i>l</i><sub class=\"lower-index\"><i>i</i></sub>,<i>r</i><sub class=\"lower-index\"><i>i</i></sub>)</span> will be lexicographically minimum. If no such permutation exists, you should ignore the query (that is, not change string <span class=\"tex-span\"><i>s</i></span>).</p><p>Everybody knows that on TorCoder rounds input line and array size limits never exceed <span class=\"tex-span\">60</span>, so Leo solved this problem easily. Your task is to solve the problem on a little bit larger limits. Given string <span class=\"tex-span\"><i>s</i></span> and <span class=\"tex-span\"><i>m</i></span> queries, print the string that results after applying all <span class=\"tex-span\"><i>m</i></span> queries to string <span class=\"tex-span\"><i>s</i></span>.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first input line contains two integers <span class=\"tex-span\"><i>n</i></span> and <span class=\"tex-span\"><i>m</i></span> <span class=\"tex-span\">(1&le;<i>n</i>,<i>m</i>&le;10<sup class=\"upper-index\">5</sup>)</span> &minus; the string length and the number of the queries.</p><p>The second line contains string <span class=\"tex-span\"><i>s</i></span>, consisting of <span class=\"tex-span\"><i>n</i></span> lowercase Latin letters.</p><p>Each of the next <span class=\"tex-span\"><i>m</i></span> lines contains a pair of integers <span class=\"tex-span\"><i>l</i><sub class=\"lower-index\"><i>i</i></sub>,<i>r</i><sub class=\"lower-index\"><i>i</i></sub></span> (<span class=\"tex-span\">1&le;<i>l</i><sub class=\"lower-index\"><i>i</i></sub>&le;<i>r</i><sub class=\"lower-index\"><i>i</i></sub>&le;<i>n</i></span>) &minus; a query to apply to the string. </p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>In a single line print the result of applying <span class=\"tex-span\"><i>m</i></span> queries to string <span class=\"tex-span\"><i>s</i></span>. Print the queries in the order in which they are given in the input.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>7 2<br/>aabcbaa<br/>1 3<br/>5 7<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>abacaba<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>3 2<br/>abc<br/>1 2<br/>2 3<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>abc<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>A <span class=\"tex-font-style-it\">substring</span> <span class=\"tex-span\">(<i>l</i><sub class=\"lower-index\"><i>i</i></sub>,<i>r</i><sub class=\"lower-index\"><i>i</i></sub>)</span> <span class=\"tex-span\">1&le;<i>l</i><sub class=\"lower-index\"><i>i</i></sub>&le;<i>r</i><sub class=\"lower-index\"><i>i</i></sub>&le;<i>n</i>)</span> of string <span class=\"tex-span\"><i>s</i>=<i>s</i><sub class=\"lower-index\">1</sub><i>s</i><sub class=\"lower-index\">2</sub>... <i>s</i><sub class=\"lower-index\"><i>n</i></sub></span> of length <span class=\"tex-span\"><i>n</i></span> is a sequence of characters <span class=\"tex-span\"><i>s</i><sub class=\"lower-index\"><i>l</i><sub class=\"lower-index\"><i>i</i></sub></sub><i>s</i><sub class=\"lower-index\"><i>l</i><sub class=\"lower-index\"><i>i</i>+1</sub></sub>...<i>s</i><sub class=\"lower-index\"><i>r</i><sub class=\"lower-index\"><i>i</i></sub></sub></span>.</p><p>A string is a <span class=\"tex-font-style-it\">palindrome</span>, if it reads the same from left to right and from right to left.</p><p>String <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\">1</sub><i>x</i><sub class=\"lower-index\">2</sub>... <i>x</i><sub class=\"lower-index\"><i>p</i></sub></span> is <span class=\"tex-font-style-it\">lexicographically smaller</span> than string <span class=\"tex-span\"><i>y</i><sub class=\"lower-index\">1</sub><i>y</i><sub class=\"lower-index\">2</sub>... <i>y</i><sub class=\"lower-index\"><i>q</i></sub></span>, if either <span class=\"tex-span\"><i>p</i>&lt;<i>q</i></span> and <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\">1</sub>=<i>y</i><sub class=\"lower-index\">1</sub>,<i>x</i><sub class=\"lower-index\">2</sub>=<i>y</i><sub class=\"lower-index\">2</sub>,... ,<i>x</i><sub class=\"lower-index\"><i>p</i></sub>=<i>y</i><sub class=\"lower-index\"><i>p</i></sub></span>, or exists such number <span class=\"tex-span\"><i>r</i></span> <span class=\"tex-span\">(<i>r</i>&lt;<i>p</i>,<i>r</i>&lt;<i>q</i>)</span>, that <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\">1</sub>=<i>y</i><sub class=\"lower-index\">1</sub>,<i>x</i><sub class=\"lower-index\">2</sub>=<i>y</i><sub class=\"lower-index\">2</sub>,... ,<i>x</i><sub class=\"lower-index\"><i>r</i></sub>=<i>y</i><sub class=\"lower-index\"><i>r</i></sub></span> and <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\"><i>r</i>+1</sub>&lt;<i>y</i><sub class=\"lower-index\"><i>r</i>+1</sub></span>.</p></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 3000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}