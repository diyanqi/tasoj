{"title": "Bit++", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">A. Bit++</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>1 second</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>The classic programming language of Bitland is Bit++. This language is so peculiar and complicated.</p><p>The language is that peculiar as it has exactly one variable, called <span class=\"tex-span\"><i>x</i></span>. Also, there are two operations:</p><ul> <li> Operation <span class=\"tex-font-style-tt\">++</span> increases the value of variable <span class=\"tex-span\"><i>x</i></span> by 1. </li><li> Operation <span class=\"tex-font-style-tt\">--</span> decreases the value of variable <span class=\"tex-span\"><i>x</i></span> by 1. </li></ul><p>A statement in language Bit++ is a sequence, consisting of exactly one operation and one variable <span class=\"tex-span\"><i>x</i></span>. The statement is written without spaces, that is, it can only contain characters \"<span class=\"tex-font-style-tt\">+</span>\", \"<span class=\"tex-font-style-tt\">-</span>\", \"<span class=\"tex-font-style-tt\">X</span>\". Executing a statement means applying the operation it contains.</p><p>A programme in Bit++ is a sequence of statements, each of them needs to be executed. Executing a programme means executing all the statements it contains.</p><p>You're given a programme in language Bit++. The initial value of <span class=\"tex-span\"><i>x</i></span> is <span class=\"tex-span\">0</span>. Execute the programme and find its final value (the value of the variable when this programme is executed).</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains a single integer <span class=\"tex-span\"><i>n</i></span> <span class=\"tex-span\">(1&le;<i>n</i>&le;150)</span> &minus; the number of statements in the programme.</p><p>Next <span class=\"tex-span\"><i>n</i></span> lines contain a statement each. Each statement contains exactly one operation (<span class=\"tex-font-style-tt\">++</span> or <span class=\"tex-font-style-tt\">--</span>) and exactly one variable <span class=\"tex-span\"><i>x</i></span> (denoted as letter &laquo;<span class=\"tex-font-style-tt\">X</span>&raquo;). Thus, there are no empty statements. The operation and the variable can be written in any order.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print a single integer &minus; the final value of <span class=\"tex-span\"><i>x</i></span>.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>1<br/>++X<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>1<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>2<br/>X++<br/>--X<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>0<br/></pre></div></div></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 1000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}