{"title": "Ciel and Robot", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">A. Ciel and Robot</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>1 second</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Fox Ciel has a robot on a 2D plane. Initially it is located in (0, 0). Fox Ciel code a command to it. The command was represented by string <span class=\"tex-span\"><i>s</i></span>. Each character of <span class=\"tex-span\"><i>s</i></span> is one move operation. There are four move operations at all:</p><ul> <li> '<span class=\"tex-font-style-tt\">U</span>': go up, (x, y) <span class=\"tex-span\">&rarr;</span> (x, y+1); </li><li> '<span class=\"tex-font-style-tt\">D</span>': go down, (x, y) <span class=\"tex-span\">&rarr;</span> (x, y-1); </li><li> '<span class=\"tex-font-style-tt\">L</span>': go left, (x, y) <span class=\"tex-span\">&rarr;</span> (x-1, y); </li><li> '<span class=\"tex-font-style-tt\">R</span>': go right, (x, y) <span class=\"tex-span\">&rarr;</span> (x+1, y). </li></ul><p>The robot will do the operations in <span class=\"tex-span\"><i>s</i></span> from left to right, and repeat it infinite times. Help Fox Ciel to determine if after some steps the robot will located in <span class=\"tex-span\">(<i>a</i>,<i>b</i>)</span>.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains two integers <span class=\"tex-span\"><i>a</i></span> and <span class=\"tex-span\"><i>b</i></span>, (<span class=\"tex-span\">-10<sup class=\"upper-index\">9</sup>&le;<i>a</i>,<i>b</i>&le;10<sup class=\"upper-index\">9</sup></span>). The second line contains a string <span class=\"tex-span\"><i>s</i></span> (<span class=\"tex-span\">1&le;|<i>s</i>|&le;100</span>, <span class=\"tex-span\"><i>s</i></span> only contains characters '<span class=\"tex-font-style-tt\">U</span>', '<span class=\"tex-font-style-tt\">D</span>', '<span class=\"tex-font-style-tt\">L</span>', '<span class=\"tex-font-style-tt\">R</span>') &minus; the command.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print \"<span class=\"tex-font-style-tt\">Yes</span>\" if the robot will be located at <span class=\"tex-span\">(<i>a</i>,<i>b</i>)</span>, and \"<span class=\"tex-font-style-tt\">No</span>\" otherwise.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>2 2<br/>RU<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>Yes<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>1 2<br/>RU<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>No<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>-1 1000000000<br/>LRRLU<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>Yes<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>0 0<br/>D<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>Yes<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>In the first and second test case, command string is \"<span class=\"tex-font-style-tt\">RU</span>\", so the robot will go right, then go up, then right, and then up and so on.</p><p>The locations of its moves are (0, 0) <span class=\"tex-span\">&rarr;</span> (1, 0) <span class=\"tex-span\">&rarr;</span> (1, 1) <span class=\"tex-span\">&rarr;</span> (2, 1) <span class=\"tex-span\">&rarr;</span> (2, 2) <span class=\"tex-span\">&rarr;</span> <span class=\"tex-span\">...</span></p><p>So it can reach (2, 2) but not (1, 2).</p></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 1000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}