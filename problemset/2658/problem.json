{"title": "Circular RMQ", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">C. Circular RMQ</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>3 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>You are given circular array <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">0</sub>,<i>a</i><sub class=\"lower-index\">1</sub>,...,<i>a</i><sub class=\"lower-index\"><i>n</i>-1</sub></span>. There are two types of operations with it: </p><ul> <li> <span class=\"tex-span\"><i>inc</i>(<i>lf</i>,<i>rg</i>,<i>v</i>)</span> &minus; this operation increases each element on the segment <span class=\"tex-span\">[<i>lf</i>,<i>rg</i>]</span> (inclusively) by <span class=\"tex-span\"><i>v</i></span>; </li><li> <span class=\"tex-span\"><i>rmq</i>(<i>lf</i>,<i>rg</i>)</span> &minus; this operation returns minimal value on the segment <span class=\"tex-span\">[<i>lf</i>,<i>rg</i>]</span> (inclusively). </li></ul><p>Assume segments to be circular, so if <span class=\"tex-span\"><i>n</i>=5</span> and <span class=\"tex-span\"><i>lf</i>=3,<i>rg</i>=1</span>, it means the index sequence: <span class=\"tex-span\">3,4,0,1</span>.</p><p>Write program to process given sequence of operations.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains integer <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">1&le;<i>n</i>&le;200000</span>). The next line contains initial state of the array: <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">0</sub>,<i>a</i><sub class=\"lower-index\">1</sub>,...,<i>a</i><sub class=\"lower-index\"><i>n</i>-1</sub></span> (<span class=\"tex-span\">-10<sup class=\"upper-index\">6</sup>&le;<i>a</i><sub class=\"lower-index\"><i>i</i></sub>&le;10<sup class=\"upper-index\">6</sup></span>), <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> are integer. The third line contains integer <span class=\"tex-span\"><i>m</i></span> (<span class=\"tex-span\">0&le;<i>m</i>&le;200000</span>), <span class=\"tex-span\"><i>m</i></span> &minus; the number of operartons. Next <span class=\"tex-span\"><i>m</i></span> lines contain one operation each. If line contains two integer <span class=\"tex-span\"><i>lf</i>,<i>rg</i></span> (<span class=\"tex-span\">0&le;<i>lf</i>,<i>rg</i>&le;<i>n</i>-1</span>) it means <span class=\"tex-span\"><i>rmq</i></span> operation, it contains three integers <span class=\"tex-span\"><i>lf</i>,<i>rg</i>,<i>v</i></span> (<span class=\"tex-span\">0&le;<i>lf</i>,<i>rg</i>&le;<i>n</i>-1;-10<sup class=\"upper-index\">6</sup>&le;<i>v</i>&le;10<sup class=\"upper-index\">6</sup></span>) &minus; <span class=\"tex-span\"><i>inc</i></span> operation.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>For each <span class=\"tex-span\"><i>rmq</i></span> operation write result for it. Please, do not use <span class=\"tex-font-style-tt\">%lld</span> specificator to read or write 64-bit integers in C++. It is preffered to use <span class=\"tex-font-style-tt\">cout</span> (also you may use <span class=\"tex-font-style-tt\">%I64d</span>).</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>4<br/>1 2 3 4<br/>4<br/>3 0<br/>3 0 -1<br/>0 1<br/>2 1<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>1<br/>0<br/>0<br/></pre></div></div></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 3000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}