{"title": "Making Sequences is Fun", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">B. Making Sequences is Fun</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>We'll define <span class=\"tex-span\"><i>S</i>(<i>n</i>)</span> for positive integer <span class=\"tex-span\"><i>n</i></span> as follows: the number of the <span class=\"tex-span\"><i>n</i></span>'s digits in the decimal base. For example, <span class=\"tex-span\"><i>S</i>(893)=3</span>, <span class=\"tex-span\"><i>S</i>(114514)=6</span>.</p><p>You want to make a consecutive integer sequence starting from number <span class=\"tex-span\"><i>m</i></span> (<span class=\"tex-span\"><i>m</i>,<i>m</i>+1,...</span>). But you need to pay <span class=\"tex-span\"><i>S</i>(<i>n</i>)&middot;<i>k</i></span> to add the number <span class=\"tex-span\"><i>n</i></span> to the sequence.</p><p>You can spend a cost up to <span class=\"tex-span\"><i>w</i></span>, and you want to make the sequence as long as possible. Write a program that tells sequence's maximum length.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains three integers <span class=\"tex-span\"><i>w</i></span> (<span class=\"tex-span\">1&le;<i>w</i>&le;10<sup class=\"upper-index\">16</sup></span>), <span class=\"tex-span\"><i>m</i></span> (<span class=\"tex-span\">1&le;<i>m</i>&le;10<sup class=\"upper-index\">16</sup></span>), <span class=\"tex-span\"><i>k</i></span> (<span class=\"tex-span\">1&le;<i>k</i>&le;10<sup class=\"upper-index\">9</sup></span>).</p><p>Please, do not write the <span class=\"tex-font-style-tt\">%lld</span> specifier to read or write 64-bit integers in C++. It is preferred to use the <span class=\"tex-font-style-tt\">cin</span>, <span class=\"tex-font-style-tt\">cout</span> streams or the <span class=\"tex-font-style-tt\">%I64d</span> specifier.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>The first line should contain a single integer &minus; the answer to the problem.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>9 1 1<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>9<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>77 7 7<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>7<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>114 5 14<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>6<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>1 1 2<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>0<br/></pre></div></div></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}