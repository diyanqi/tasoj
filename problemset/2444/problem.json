{"title": "The Monster and the Squirrel", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">B. The Monster and the Squirrel</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>1 second</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Ari the monster always wakes up very early with the first ray of the sun and the first thing she does is feeding her squirrel.</p><p>Ari draws a regular convex polygon on the floor and numbers it's vertices <span class=\"tex-span\">1,2,...,<i>n</i></span> in clockwise order. Then starting from the vertex <span class=\"tex-span\">1</span> she draws a ray in the direction of each other vertex. The ray stops when it reaches a vertex or intersects with another ray drawn before. Ari repeats this process for vertex <span class=\"tex-span\">2,3,...,<i>n</i></span> (in this particular order). And then she puts a walnut in each region inside the polygon.</p><center> <img class=\"tex-graphics\" src=\"http://cf.hustoj.com:80/userfiles/image/1ea7e7d38376dc6521dbedc8aa3bbdd79967118c27.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> </center><p>Ada the squirrel wants to collect all the walnuts, but she is not allowed to step on the lines drawn by Ari. That means Ada have to perform a small jump if she wants to go from one region to another. Ada can jump from one region P to another region Q if and only if P and Q <span class=\"tex-font-style-bf\">share a side or a corner</span>.</p><p>Assuming that Ada starts from outside of the picture, what is the minimum number of jumps she has to perform in order to collect all the walnuts?</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first and only line of the input contains a single integer <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">3&le;<i>n</i>&le;54321</span>) - the number of vertices of the regular polygon drawn by Ari.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print the minimum number of jumps Ada should make to collect all the walnuts. Note, that she <span class=\"tex-font-style-bf\">doesn't need</span> to leave the polygon after.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>5<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>9<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>3<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>1<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>One of the possible solutions for the first sample is shown on the picture above.</p></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 1000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}