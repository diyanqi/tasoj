{"title": "Clear Symmetry", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">A. Clear Symmetry</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Consider some square matrix <span class=\"tex-span\"><i>A</i></span> with side <span class=\"tex-span\"><i>n</i></span> consisting of zeros and ones. There are <span class=\"tex-span\"><i>n</i></span> rows numbered from <span class=\"tex-span\">1</span> to <span class=\"tex-span\"><i>n</i></span> from top to bottom and <span class=\"tex-span\"><i>n</i></span> columns numbered from <span class=\"tex-span\">1</span> to <span class=\"tex-span\"><i>n</i></span> from left to right in this matrix. We'll denote the element of the matrix which is located at the intersection of the <span class=\"tex-span\"><i>i</i></span>-row and the <span class=\"tex-span\"><i>j</i></span>-th column as <span class=\"tex-span\"><i>A</i><sub class=\"lower-index\"><i>i</i>,<i>j</i></sub></span>.</p><p>Let's call matrix <span class=\"tex-span\"><i>A</i></span> <span class=\"tex-font-style-it\">clear</span> if no two cells containing ones have a common side.</p><p>Let's call matrix <span class=\"tex-span\"><i>A</i></span> <span class=\"tex-font-style-it\">symmetrical</span> if it matches the matrices formed from it by a horizontal and/or a vertical reflection. Formally, for each pair <span class=\"tex-span\">(<i>i</i>,<i>j</i>)</span> <span class=\"tex-span\">(1&le;<i>i</i>,<i>j</i>&le;<i>n</i>)</span> both of the following conditions must be met: <span class=\"tex-span\"><i>A</i><sub class=\"lower-index\"><i>i</i>,<i>j</i></sub>=<i>A</i><sub class=\"lower-index\"><i>n</i>-<i>i</i>+1,<i>j</i></sub></span> and <span class=\"tex-span\"><i>A</i><sub class=\"lower-index\"><i>i</i>,<i>j</i></sub>=<i>A</i><sub class=\"lower-index\"><i>i</i>,<i>n</i>-<i>j</i>+1</sub></span>.</p><p>Let's define the <span class=\"tex-font-style-it\">sharpness</span> of matrix <span class=\"tex-span\"><i>A</i></span> as the number of ones in it.</p><p>Given integer <span class=\"tex-span\"><i>x</i></span>, your task is to find the smallest positive integer <span class=\"tex-span\"><i>n</i></span> such that there exists a clear symmetrical matrix <span class=\"tex-span\"><i>A</i></span> with side <span class=\"tex-span\"><i>n</i></span> and sharpness <span class=\"tex-span\"><i>x</i></span>.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The only line contains a single integer <span class=\"tex-span\"><i>x</i></span> (<span class=\"tex-span\">1&le;<i>x</i>&le;100</span>) &minus; the required sharpness of the matrix.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print a single number &minus; the sought value of <span class=\"tex-span\"><i>n</i></span>.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>4<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>3<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>9<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>5<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>The figure below shows the matrices that correspond to the samples:</p><center> <img class=\"tex-graphics\" src=\"http://cf.hustoj.com:80/userfiles/image/b16395e6d9ee59d825cfac9dd6e4c33ff017430449.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> </center></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}