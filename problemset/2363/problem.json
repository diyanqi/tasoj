{"title": "New Year and Domino", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">C. New Year and Domino</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>3 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>They say \"<span class=\"tex-font-style-it\">years are like dominoes, tumbling one after the other</span>\". But would a year fit into a grid? I don't think so.</p><p>Limak is a little polar bear who loves to play. He has recently got a rectangular grid with <span class=\"tex-span\"><i>h</i></span> rows and <span class=\"tex-span\"><i>w</i></span> columns. Each cell is a square, either empty (denoted by '<span class=\"tex-font-style-tt\">.</span>') or forbidden (denoted by '<span class=\"tex-font-style-tt\">#</span>'). Rows are numbered <span class=\"tex-span\">1</span> through <span class=\"tex-span\"><i>h</i></span> from top to bottom. Columns are numbered <span class=\"tex-span\">1</span> through <span class=\"tex-span\"><i>w</i></span> from left to right.</p><p>Also, Limak has a single domino. He wants to put it somewhere in a grid. A domino will occupy exactly two adjacent cells, located either in one row or in one column. Both adjacent cells must be empty and must be inside a grid.</p><p>Limak needs more fun and thus he is going to consider some queries. In each query he chooses some rectangle and wonders, how many way are there to put a single domino inside of the chosen rectangle?</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line of the input contains two integers <span class=\"tex-span\"><i>h</i></span> and <span class=\"tex-span\"><i>w</i></span> (<span class=\"tex-span\">1&le;<i>h</i>,<i>w</i>&le;500</span>)&mdash; the number of rows and the number of columns, respectively.</p><p>The next <span class=\"tex-span\"><i>h</i></span> lines describe a grid. Each line contains a string of the length <span class=\"tex-span\"><i>w</i></span>. Each character is either '<span class=\"tex-font-style-tt\">.</span>' or '<span class=\"tex-font-style-tt\">#</span>'&minus; denoting an empty or forbidden cell, respectively.</p><p>The next line contains a single integer <span class=\"tex-span\"><i>q</i></span> (<span class=\"tex-span\">1&le;<i>q</i>&le;100000</span>)&minus; the number of queries.</p><p>Each of the next <span class=\"tex-span\"><i>q</i></span> lines contains four integers <span class=\"tex-span\"><i>r</i>1<sub class=\"lower-index\"><i>i</i></sub></span>, <span class=\"tex-span\"><i>c</i>1<sub class=\"lower-index\"><i>i</i></sub></span>, <span class=\"tex-span\"><i>r</i>2<sub class=\"lower-index\"><i>i</i></sub></span>, <span class=\"tex-span\"><i>c</i>2<sub class=\"lower-index\"><i>i</i></sub></span> (<span class=\"tex-span\">1&le;<i>r</i>1<sub class=\"lower-index\"><i>i</i></sub>&le;<i>r</i>2<sub class=\"lower-index\"><i>i</i></sub>&le;<i>h</i>,1&le;<i>c</i>1<sub class=\"lower-index\"><i>i</i></sub>&le;<i>c</i>2<sub class=\"lower-index\"><i>i</i></sub>&le;<i>w</i></span>)&minus; the <span class=\"tex-span\"><i>i</i></span>-th query. Numbers <span class=\"tex-span\"><i>r</i>1<sub class=\"lower-index\"><i>i</i></sub></span> and <span class=\"tex-span\"><i>c</i>1<sub class=\"lower-index\"><i>i</i></sub></span> denote the row and the column (respectively) of the upper left cell of the rectangle. Numbers <span class=\"tex-span\"><i>r</i>2<sub class=\"lower-index\"><i>i</i></sub></span> and <span class=\"tex-span\"><i>c</i>2<sub class=\"lower-index\"><i>i</i></sub></span> denote the row and the column (respectively) of the bottom right cell of the rectangle.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print <span class=\"tex-span\"><i>q</i></span> integers, <span class=\"tex-span\"><i>i</i></span>-th should be equal to the number of ways to put a single domino inside the <span class=\"tex-span\"><i>i</i></span>-th rectangle.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>5 8<br/>....#..#<br/>.#......<br/>##.#....<br/>##..#.##<br/>........<br/>4<br/>1 1 2 3<br/>4 1 4 1<br/>1 2 4 5<br/>2 5 5 8<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>4<br/>0<br/>10<br/>15<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>7 39<br/>.......................................<br/>.###..###..#..###.....###..###..#..###.<br/>...#..#.#..#..#.........#..#.#..#..#...<br/>.###..#.#..#..###.....###..#.#..#..###.<br/>.#....#.#..#....#.....#....#.#..#..#.#.<br/>.###..###..#..###.....###..###..#..###.<br/>.......................................<br/>6<br/>1 1 3 20<br/>2 10 6 30<br/>2 10 7 30<br/>2 2 7 7<br/>1 7 7 7<br/>1 8 7 8<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>53<br/>89<br/>120<br/>23<br/>0<br/>2<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>A red frame below corresponds to the first query of the first sample. A domino can be placed in 4 possible ways.</p><center> <img class=\"tex-graphics\" src=\"http://cf.hustoj.com:80/userfiles/image/839d99c4e83dadd0600d71c9fc34a79512d6e70029.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> </center></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 3000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}