{"title": "Jeopardy!", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">C. Jeopardy!</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>1 second</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>'Jeopardy!' is an intellectual game where players answer questions and earn points. Company Q conducts a simplified 'Jeopardy!' tournament among the best IT companies. By a lucky coincidence, the old rivals made it to the finals: company R1 and company R2. </p><p>The finals will have <span class=\"tex-span\"><i>n</i></span> questions, <span class=\"tex-span\"><i>m</i></span> of them are auction questions and <span class=\"tex-span\"><i>n</i>-<i>m</i></span> of them are regular questions. Each question has a price. The price of the <span class=\"tex-span\"><i>i</i></span>-th question is <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> points. During the game the players chose the questions. At that, if the question is an auction, then the player who chose it can change the price if the number of his current points is strictly larger than the price of the question. The new price of the question cannot be less than the original price and cannot be greater than the current number of points of the player who chose the question. The correct answer brings the player the points equal to the price of the question. The wrong answer to the question reduces the number of the player's points by the value of the question price.</p><p>The game will go as follows. First, the R2 company selects a question, then the questions are chosen by the one who answered the previous question correctly. If no one answered the question, then the person who chose last chooses again.</p><p>All R2 employees support their team. They want to calculate what maximum possible number of points the R2 team can get if luck is on their side during the whole game (they will always be the first to correctly answer questions). Perhaps you are not going to be surprised, but this problem was again entrusted for you to solve.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains two space-separated integers <span class=\"tex-span\"><i>n</i></span> and <span class=\"tex-span\"><i>m</i></span> <span class=\"tex-span\">(1&le;<i>n</i>,<i>m</i>&le;100;<i>m</i>&le;<i>min</i>(<i>n</i>,30))</span> &minus; the total number of questions and the number of auction questions, correspondingly. The second line contains <span class=\"tex-span\"><i>n</i></span> space-separated integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">1</sub>,<i>a</i><sub class=\"lower-index\">2</sub>,...,<i>a</i><sub class=\"lower-index\"><i>n</i></sub></span> <span class=\"tex-span\">(1&le;<i>a</i><sub class=\"lower-index\"><i>i</i></sub>&le;10<sup class=\"upper-index\">7</sup>)</span> &minus; the prices of the questions. The third line contains <span class=\"tex-span\"><i>m</i></span> distinct integers <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\"><i>i</i></sub></span> <span class=\"tex-span\">(1&le;<i>b</i><sub class=\"lower-index\"><i>i</i></sub>&le;<i>n</i>)</span> &minus; the numbers of auction questions. Assume that the questions are numbered from <span class=\"tex-span\">1</span> to <span class=\"tex-span\"><i>n</i></span>.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>In the single line, print the answer to the problem &minus; the maximum points the R2 company can get if it plays optimally well. It is guaranteed that the answer fits into the integer 64-bit signed type.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>4 1<br/>1 3 7 5<br/>3<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>18<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>3 2<br/>10 3 8<br/>2 3<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>40<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>2 2<br/>100 200<br/>1 2<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>400<br/></pre></div></div></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 1000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}