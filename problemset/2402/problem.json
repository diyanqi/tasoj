{"title": "The Two Routes", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">A. The Two Routes</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>In Absurdistan, there are <span class=\"tex-span\"><i>n</i></span> towns (numbered <span class=\"tex-span\">1</span> through <span class=\"tex-span\"><i>n</i></span>) and <span class=\"tex-span\"><i>m</i></span> bidirectional railways. There is also an absurdly simple road network&minus; for each pair of different towns <span class=\"tex-span\"><i>x</i></span> and <span class=\"tex-span\"><i>y</i></span>, there is a bidirectional road between towns <span class=\"tex-span\"><i>x</i></span> and <span class=\"tex-span\"><i>y</i></span> <span class=\"tex-font-style-bf\">if and only if</span> there is no railway between them. Travelling to a different town using one railway or one road always takes exactly one hour.</p><p>A train and a bus leave town <span class=\"tex-span\">1</span> at the same time. They both have the same destination, town <span class=\"tex-span\"><i>n</i></span>, and don't make any stops on the way (but they can wait in town <span class=\"tex-span\"><i>n</i></span>). The train can move only along railways and the bus can move only along roads.</p><p>You've been asked to plan out routes for the vehicles; each route can use any road/railway multiple times. One of the most important aspects to consider is safety&minus; in order to avoid accidents at railway crossings, the train and the bus must not arrive at the same town (except town <span class=\"tex-span\"><i>n</i></span>) simultaneously.</p><p>Under these constraints, what is the minimum number of hours needed for both vehicles to reach town <span class=\"tex-span\"><i>n</i></span> (the maximum of arrival times of the bus and the train)? Note, that bus and train are not required to arrive to the town <span class=\"tex-span\"><i>n</i></span> at the same moment of time, but are allowed to do so.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line of the input contains two integers <span class=\"tex-span\"><i>n</i></span> and <span class=\"tex-span\"><i>m</i></span> (<span class=\"tex-span\">2&le;<i>n</i>&le;400</span>, <span class=\"tex-span\">0&le;<i>m</i>&le;<i>n</i>(<i>n</i>-1)/2</span>)&minus; the number of towns and the number of railways respectively.</p><p>Each of the next <span class=\"tex-span\"><i>m</i></span> lines contains two integers <span class=\"tex-span\"><i>u</i></span> and <span class=\"tex-span\"><i>v</i></span>, denoting a railway between towns <span class=\"tex-span\"><i>u</i></span> and <span class=\"tex-span\"><i>v</i></span> (<span class=\"tex-span\">1&le;<i>u</i>,<i>v</i>&le;<i>n</i></span>, <span class=\"tex-span\"><i>u</i>&ne;<i>v</i></span>).</p><p>You may assume that there is at most one railway connecting any two towns.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Output one integer&minus; the smallest possible time of the later vehicle's arrival in town <span class=\"tex-span\"><i>n</i></span>. If it's impossible for at least one of the vehicles to reach town <span class=\"tex-span\"><i>n</i></span>, output <span class=\"tex-span\">-1</span>.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>4 2<br/>1 3<br/>3 4<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>2<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>4 6<br/>1 2<br/>1 3<br/>1 4<br/>2 3<br/>2 4<br/>3 4<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>-1<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>5 5<br/>4 2<br/>3 5<br/>4 5<br/>5 1<br/>1 2<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>3<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>In the first sample, the train can take the route <img align=\"middle\" class=\"tex-formula\" src=\"http://cf.hustoj.com:80/userfiles/image/45307ea441d2996b4e3db04de8169f660020229728.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> and the bus can take the route <img align=\"middle\" class=\"tex-formula\" src=\"http://cf.hustoj.com:80/userfiles/image/17348a86f2090cbcfe747091924a85e6176e16c028.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/>. Note that they can arrive at town <span class=\"tex-span\">4</span> at the same time.</p><p>In the second sample, Absurdistan is ruled by railwaymen. There are no roads, so there's no way for the bus to reach town <span class=\"tex-span\">4</span>.</p></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}