{"title": "Xenia and Tree", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">E. Xenia and Tree</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>5 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Xenia the programmer has a tree consisting of <span class=\"tex-span\"><i>n</i></span> nodes. We will consider the tree nodes indexed from 1 to <span class=\"tex-span\"><i>n</i></span>. We will also consider the first node to be initially painted red, and the other nodes &minus; to be painted blue.</p><p>The <span class=\"tex-font-style-it\">distance</span> between two tree nodes <span class=\"tex-span\"><i>v</i></span> and <span class=\"tex-span\"><i>u</i></span> is the number of edges in the shortest path between <span class=\"tex-span\"><i>v</i></span> and <span class=\"tex-span\"><i>u</i></span>.</p><p>Xenia needs to learn how to quickly execute queries of two types:</p><ol> <li> paint a specified blue node in red; </li><li> calculate which red node is the closest to the given one and print the shortest distance to the closest red node. </li></ol><p>Your task is to write a program which will execute the described queries.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains two integers <span class=\"tex-span\"><i>n</i></span> and <span class=\"tex-span\"><i>m</i></span> <span class=\"tex-span\">(2&le;<i>n</i>&le;10<sup class=\"upper-index\">5</sup>,1&le;<i>m</i>&le;10<sup class=\"upper-index\">5</sup>)</span> &minus; the number of nodes in the tree and the number of queries. Next <span class=\"tex-span\"><i>n</i>-1</span> lines contain the tree edges, the <span class=\"tex-span\"><i>i</i></span>-th line contains a pair of integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub>,<i>b</i><sub class=\"lower-index\"><i>i</i></sub></span> <span class=\"tex-span\">(1&le;<i>a</i><sub class=\"lower-index\"><i>i</i></sub>,<i>b</i><sub class=\"lower-index\"><i>i</i></sub>&le;<i>n</i>,<i>a</i><sub class=\"lower-index\"><i>i</i></sub>&ne;<i>b</i><sub class=\"lower-index\"><i>i</i></sub>)</span> &minus; an edge of the tree.</p><p>Next <span class=\"tex-span\"><i>m</i></span> lines contain queries. Each query is specified as a pair of integers <span class=\"tex-span\"><i>t</i><sub class=\"lower-index\"><i>i</i></sub>,<i>v</i><sub class=\"lower-index\"><i>i</i></sub></span> <span class=\"tex-span\">(1&le;<i>t</i><sub class=\"lower-index\"><i>i</i></sub>&le;2,1&le;<i>v</i><sub class=\"lower-index\"><i>i</i></sub>&le;<i>n</i>)</span>. If <span class=\"tex-span\"><i>t</i><sub class=\"lower-index\"><i>i</i></sub>=1</span>, then as a reply to the query we need to paint a blue node <span class=\"tex-span\"><i>v</i><sub class=\"lower-index\"><i>i</i></sub></span> in red. If <span class=\"tex-span\"><i>t</i><sub class=\"lower-index\"><i>i</i></sub>=2</span>, then we should reply to the query by printing the shortest distance from some red node to node <span class=\"tex-span\"><i>v</i><sub class=\"lower-index\"><i>i</i></sub></span>.</p><p>It is guaranteed that the given graph is a tree and that all queries are correct.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>For each second type query print the reply in a single line.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>5 4<br/>1 2<br/>2 3<br/>2 4<br/>4 5<br/>2 1<br/>2 5<br/>1 2<br/>2 5<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>0<br/>3<br/>2<br/></pre></div></div></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 5000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}