{"title": "Journey", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">C. Journey</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>3 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Recently Irina arrived to one of the most famous cities of Berland&minus; the Berlatov city. There are <span class=\"tex-span\"><i>n</i></span> showplaces in the city, numbered from <span class=\"tex-span\">1</span> to <span class=\"tex-span\"><i>n</i></span>, and some of them are connected by one-directional roads. The roads in Berlatov are designed in a way such that there <span class=\"tex-font-style-bf\">are no</span> cyclic routes between showplaces.</p><p>Initially Irina stands at the showplace <span class=\"tex-span\">1</span>, and the endpoint of her journey is the showplace <span class=\"tex-span\"><i>n</i></span>. Naturally, Irina wants to visit as much showplaces as she can during her journey. However, Irina's stay in Berlatov is limited and she can't be there for more than <span class=\"tex-span\"><i>T</i></span> time units.</p><p>Help Irina determine how many showplaces she may visit during her journey from showplace <span class=\"tex-span\">1</span> to showplace <span class=\"tex-span\"><i>n</i></span> within a time not exceeding <span class=\"tex-span\"><i>T</i></span>. It is guaranteed that there is at least one route from showplace <span class=\"tex-span\">1</span> to showplace <span class=\"tex-span\"><i>n</i></span> such that Irina will spend no more than <span class=\"tex-span\"><i>T</i></span> time units passing it.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line of the input contains three integers <span class=\"tex-span\"><i>n</i>,<i>m</i></span> and <span class=\"tex-span\"><i>T</i></span> (<span class=\"tex-span\">2&le;<i>n</i>&le;5000,1&le;<i>m</i>&le;5000,1&le;<i>T</i>&le;10<sup class=\"upper-index\">9</sup></span>)&minus; the number of showplaces, the number of roads between them and the time of Irina's stay in Berlatov respectively.</p><p>The next <span class=\"tex-span\"><i>m</i></span> lines describes roads in Berlatov. <span class=\"tex-span\"><i>i</i></span>-th of them contains <span class=\"tex-span\">3</span> integers <span class=\"tex-span\"><i>u</i><sub class=\"lower-index\"><i>i</i></sub>,<i>v</i><sub class=\"lower-index\"><i>i</i></sub>,<i>t</i><sub class=\"lower-index\"><i>i</i></sub></span> (<span class=\"tex-span\">1&le;<i>u</i><sub class=\"lower-index\"><i>i</i></sub>,<i>v</i><sub class=\"lower-index\"><i>i</i></sub>&le;<i>n</i>,<i>u</i><sub class=\"lower-index\"><i>i</i></sub>&ne;<i>v</i><sub class=\"lower-index\"><i>i</i></sub>,1&le;<i>t</i><sub class=\"lower-index\"><i>i</i></sub>&le;10<sup class=\"upper-index\">9</sup></span>), meaning that there is a road starting from showplace <span class=\"tex-span\"><i>u</i><sub class=\"lower-index\"><i>i</i></sub></span> and leading to showplace <span class=\"tex-span\"><i>v</i><sub class=\"lower-index\"><i>i</i></sub></span>, and Irina spends <span class=\"tex-span\"><i>t</i><sub class=\"lower-index\"><i>i</i></sub></span> time units to pass it. It is guaranteed that the roads do not form cyclic routes.</p><p><span class=\"tex-font-style-bf\">It is guaranteed, that there is at most one road between each pair of showplaces.</span></p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print the single integer <span class=\"tex-span\"><i>k</i></span> (<span class=\"tex-span\">2&le;<i>k</i>&le;<i>n</i></span>)&minus; the maximum number of showplaces that Irina can visit during her journey from showplace <span class=\"tex-span\">1</span> to showplace <span class=\"tex-span\"><i>n</i></span> within time not exceeding <span class=\"tex-span\"><i>T</i></span>, in the first line.</p><p>Print <span class=\"tex-span\"><i>k</i></span> distinct integers in the second line&minus; indices of showplaces that Irina will visit on her route, in the order of encountering them.</p><p>If there are multiple answers, print any of them.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>4 3 13<br/>1 2 5<br/>2 3 7<br/>2 4 8<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>3<br/>1 2 4 <br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>6 6 7<br/>1 2 2<br/>1 3 3<br/>3 6 3<br/>2 4 2<br/>4 6 2<br/>6 5 1<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>4<br/>1 2 4 6 <br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>5 5 6<br/>1 3 3<br/>3 5 3<br/>1 2 2<br/>2 4 3<br/>4 5 2<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>3<br/>1 3 5 <br/></pre></div></div></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 3000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}