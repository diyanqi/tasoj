{"title": "Pavel and barbecue", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">A. Pavel and barbecue</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Pavel cooks barbecue. There are <span class=\"tex-span\"><i>n</i></span> skewers, they lay on a brazier in a row, each on one of <span class=\"tex-span\"><i>n</i></span> positions. Pavel wants each skewer to be cooked some time in every of <span class=\"tex-span\"><i>n</i></span> positions in two directions: in the one it was directed originally and in the reversed direction.</p><p>Pavel has a plan: a permutation <span class=\"tex-span\"><i>p</i></span> and a sequence <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\">1</sub>,<i>b</i><sub class=\"lower-index\">2</sub>,...,<i>b</i><sub class=\"lower-index\"><i>n</i></sub></span>, consisting of zeros and ones. Each second Pavel move skewer on position <span class=\"tex-span\"><i>i</i></span> to position <span class=\"tex-span\"><i>p</i><sub class=\"lower-index\"><i>i</i></sub></span>, and if <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\"><i>i</i></sub></span> equals <span class=\"tex-span\">1</span> then he reverses it. So he hope that every skewer will visit every position in both directions.</p><p>Unfortunately, not every pair of permutation <span class=\"tex-span\"><i>p</i></span> and sequence <span class=\"tex-span\"><i>b</i></span> suits Pavel. What is the minimum total number of elements in the given permutation <span class=\"tex-span\"><i>p</i></span> and the given sequence <span class=\"tex-span\"><i>b</i></span> he needs to change so that every skewer will visit each of <span class=\"tex-span\">2<i>n</i></span> placements? Note that after changing the permutation should remain a permutation as well.</p><p>There is no problem for Pavel, if some skewer visits some of the placements several times before he ends to cook. In other words, a permutation <span class=\"tex-span\"><i>p</i></span> and a sequence <span class=\"tex-span\"><i>b</i></span> suit him if there is an integer <span class=\"tex-span\"><i>k</i></span> (<span class=\"tex-span\"><i>k</i>&ge;2<i>n</i></span>), so that after <span class=\"tex-span\"><i>k</i></span> seconds each skewer visits each of the <span class=\"tex-span\">2<i>n</i></span> placements.</p><p>It can be shown that some suitable pair of permutation <span class=\"tex-span\"><i>p</i></span> and sequence <span class=\"tex-span\"><i>b</i></span> exists for any <span class=\"tex-span\"><i>n</i></span>.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contain the integer <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">1&le;<i>n</i>&le;2&middot;10<sup class=\"upper-index\">5</sup></span>)&minus; the number of skewers.</p><p>The second line contains a sequence of integers <span class=\"tex-span\"><i>p</i><sub class=\"lower-index\">1</sub>,<i>p</i><sub class=\"lower-index\">2</sub>,...,<i>p</i><sub class=\"lower-index\"><i>n</i></sub></span> (<span class=\"tex-span\">1&le;<i>p</i><sub class=\"lower-index\"><i>i</i></sub>&le;<i>n</i></span>)&minus; the permutation, according to which Pavel wants to move the skewers.</p><p>The third line contains a sequence <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\">1</sub>,<i>b</i><sub class=\"lower-index\">2</sub>,...,<i>b</i><sub class=\"lower-index\"><i>n</i></sub></span> consisting of zeros and ones, according to which Pavel wants to reverse the skewers.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print single integer&minus; the minimum total number of elements in the given permutation <span class=\"tex-span\"><i>p</i></span> and the given sequence <span class=\"tex-span\"><i>b</i></span> he needs to change so that every skewer will visit each of <span class=\"tex-span\">2<i>n</i></span> placements.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>4<br/>4 3 2 1<br/>0 1 1 1<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>2<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>3<br/>2 3 1<br/>0 0 0<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>1<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>In the first example Pavel can change the permutation to <span class=\"tex-span\">4,3,1,2</span>.</p><p>In the second example Pavel can change any element of <span class=\"tex-span\"><i>b</i></span> to <span class=\"tex-span\">1</span>.</p></div></div><p> </p></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}