{"title": "Yaroslav and Permutations", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">A. Yaroslav and Permutations</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Yaroslav has an array that consists of <span class=\"tex-span\"><i>n</i></span> integers. In one second Yaroslav can swap two neighboring array elements. Now Yaroslav is wondering if he can obtain an array where any two neighboring elements would be distinct in a finite time.</p><p>Help Yaroslav.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains integer <span class=\"tex-span\"><i>n</i></span> <span class=\"tex-span\">(1&le;<i>n</i>&le;100)</span> &minus; the number of elements in the array. The second line contains <span class=\"tex-span\"><i>n</i></span> integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">1</sub>,<i>a</i><sub class=\"lower-index\">2</sub>,...,<i>a</i><sub class=\"lower-index\"><i>n</i></sub></span> <span class=\"tex-span\">(1&le;<i>a</i><sub class=\"lower-index\"><i>i</i></sub>&le;1000)</span> &minus; the array elements.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>In the single line print \"<span class=\"tex-font-style-tt\">YES</span>\" (without the quotes) if Yaroslav can obtain the array he needs, and \"<span class=\"tex-font-style-tt\">NO</span>\" (without the quotes) otherwise.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>1<br/>1<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>YES<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>3<br/>1 1 2<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>YES<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>4<br/>7 7 7 7<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>NO<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>In the first sample the initial array fits well.</p><p>In the second sample Yaroslav can get array: <span class=\"tex-span\">1</span>, <span class=\"tex-span\">2</span>, <span class=\"tex-span\">1</span>. He can swap the last and the second last elements to obtain it.</p><p>In the third sample Yarosav can't get the array he needs.</p><p> </p><p> </p><p> </p><p> </p><p> </p><p> </p></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}