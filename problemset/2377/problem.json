{"title": "Minimum spanning tree for each edge", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">E. Minimum spanning tree for each edge</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Connected undirected weighted graph without self-loops and multiple edges is given. Graph contains <span class=\"tex-span\"><i>n</i></span> vertices and <span class=\"tex-span\"><i>m</i></span> edges.</p><p>For each edge <span class=\"tex-span\">(<i>u</i>,<i>v</i>)</span> find the minimal possible weight of the spanning tree that contains the edge <span class=\"tex-span\">(<i>u</i>,<i>v</i>)</span>.</p><p>The weight of the spanning tree is the sum of weights of all edges included in spanning tree.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>First line contains two integers <span class=\"tex-span\"><i>n</i></span> and <span class=\"tex-span\"><i>m</i></span> (<span class=\"tex-span\">1&le;<i>n</i>&le;2&middot;10<sup class=\"upper-index\">5</sup>,<i>n</i>-1&le;<i>m</i>&le;2&middot;10<sup class=\"upper-index\">5</sup></span>) &minus; the number of vertices and edges in graph.</p><p>Each of the next <span class=\"tex-span\"><i>m</i></span> lines contains three integers <span class=\"tex-span\"><i>u</i><sub class=\"lower-index\"><i>i</i></sub>,<i>v</i><sub class=\"lower-index\"><i>i</i></sub>,<i>w</i><sub class=\"lower-index\"><i>i</i></sub></span> (<span class=\"tex-span\">1&le;<i>u</i><sub class=\"lower-index\"><i>i</i></sub>,<i>v</i><sub class=\"lower-index\"><i>i</i></sub>&le;<i>n</i>,<i>u</i><sub class=\"lower-index\"><i>i</i></sub>&ne;<i>v</i><sub class=\"lower-index\"><i>i</i></sub>,1&le;<i>w</i><sub class=\"lower-index\"><i>i</i></sub>&le;10<sup class=\"upper-index\">9</sup></span>) &minus; the endpoints of the <span class=\"tex-span\"><i>i</i></span>-th edge and its weight.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print <span class=\"tex-span\"><i>m</i></span> lines. <span class=\"tex-span\"><i>i</i></span>-th line should contain the minimal possible weight of the spanning tree that contains <span class=\"tex-span\"><i>i</i></span>-th edge.</p><p>The edges are numbered from <span class=\"tex-span\">1</span> to <span class=\"tex-span\"><i>m</i></span> in order of their appearing in input.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>5 7<br/>1 2 3<br/>1 3 1<br/>1 4 5<br/>2 3 2<br/>2 5 3<br/>3 4 2<br/>4 5 4<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>9<br/>8<br/>11<br/>8<br/>8<br/>8<br/>9<br/></pre></div></div></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}