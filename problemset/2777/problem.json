{"title": "Traffic Jams in the Land", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">D. Traffic Jams in the Land</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Some country consists of <span class=\"tex-span\">(<i>n</i>+1)</span> cities, located along a straight highway. Let's number the cities with consecutive integers from <span class=\"tex-span\">1</span> to <span class=\"tex-span\"><i>n</i>+1</span> in the order they occur along the highway. Thus, the cities are connected by <span class=\"tex-span\"><i>n</i></span> segments of the highway, the <span class=\"tex-span\"><i>i</i></span>-th segment connects cities number <span class=\"tex-span\"><i>i</i></span> and <span class=\"tex-span\"><i>i</i>+1</span>. Every segment of the highway is associated with a positive integer <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub>&gt;1</span> &minus; the period of traffic jams appearance on it. </p><p>In order to get from city <span class=\"tex-span\"><i>x</i></span> to city <span class=\"tex-span\"><i>y</i></span> (<span class=\"tex-span\"><i>x</i>&lt;<i>y</i></span>), some drivers use the following tactics. </p><p>Initially the driver is in city <span class=\"tex-span\"><i>x</i></span> and the current time <span class=\"tex-span\"><i>t</i></span> equals zero. Until the driver arrives in city <span class=\"tex-span\"><i>y</i></span>, he perfors the following actions:</p><ul> <li> if the current time <span class=\"tex-span\"><i>t</i></span> is a multiple of <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>x</i></sub></span>, then the segment of the highway number <span class=\"tex-span\"><i>x</i></span> is now having traffic problems and the driver stays in the current city for one unit of time (formally speaking, we assign <span class=\"tex-span\"><i>t</i>=<i>t</i>+1</span>); </li><li> if the current time <span class=\"tex-span\"><i>t</i></span> is not a <span class=\"tex-font-style-bf\">multiple</span> of <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>x</i></sub></span>, then the segment of the highway number <span class=\"tex-span\"><i>x</i></span> is now clear and that's why the driver uses one unit of time to move to city <span class=\"tex-span\"><i>x</i>+1</span> (formally, we assign <span class=\"tex-span\"><i>t</i>=<i>t</i>+1</span> and <span class=\"tex-span\"><i>x</i>=<i>x</i>+1</span>). </li></ul><p>You are developing a new traffic control system. You want to consecutively process <span class=\"tex-span\"><i>q</i></span> queries of two types:</p><ol> <li> determine the final value of time <span class=\"tex-span\"><i>t</i></span> after the ride from city <span class=\"tex-span\"><i>x</i></span> to city <span class=\"tex-span\"><i>y</i></span> (<span class=\"tex-span\"><i>x</i>&lt;<i>y</i></span>) assuming that we apply the tactics that is described above. Note that for each query <span class=\"tex-span\"><i>t</i></span> is being reset to <span class=\"tex-span\">0</span>. </li><li> replace the period of traffic jams appearing on the segment number <span class=\"tex-span\"><i>x</i></span> by value <span class=\"tex-span\"><i>y</i></span> (formally, assign <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>x</i></sub>=<i>y</i></span>). </li></ol><p>Write a code that will effectively process the queries given above.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains a single integer <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">1&le;<i>n</i>&le;10<sup class=\"upper-index\">5</sup></span>) &minus; the number of highway segments that connect the <span class=\"tex-span\"><i>n</i>+1</span> cities.</p><p>The second line contains <span class=\"tex-span\"><i>n</i></span> integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">1</sub>,<i>a</i><sub class=\"lower-index\">2</sub>,...,<i>a</i><sub class=\"lower-index\"><i>n</i></sub></span> (<span class=\"tex-span\">2&le;<i>a</i><sub class=\"lower-index\"><i>i</i></sub>&le;6</span>) &minus; the periods of traffic jams appearance on segments of the highway.</p><p>The next line contains a single integer <span class=\"tex-span\"><i>q</i></span> (<span class=\"tex-span\">1&le;<i>q</i>&le;10<sup class=\"upper-index\">5</sup></span>) &minus; the number of queries to process.</p><p>The next <span class=\"tex-span\"><i>q</i></span> lines contain the descriptions of the queries in the format <span class=\"tex-span\"><i>c</i></span>, <span class=\"tex-span\"><i>x</i></span>, <span class=\"tex-span\"><i>y</i></span> (<span class=\"tex-span\"><i>c</i></span> &minus; the query type). </p><p>If <span class=\"tex-span\"><i>c</i></span> is character '<span class=\"tex-font-style-tt\">A</span>', then your task is to process a query of the first type. In this case the following constraints are satisfied: <span class=\"tex-span\">1&le;<i>x</i>&lt;<i>y</i>&le;<i>n</i>+1</span>.</p><p>If <span class=\"tex-span\"><i>c</i></span> is character '<span class=\"tex-font-style-tt\">C</span>', then you need to process a query of the second type. In such case, the following constraints are satisfied: <span class=\"tex-span\">1&le;<i>x</i>&le;<i>n</i></span>, <span class=\"tex-span\">2&le;<i>y</i>&le;6</span>.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>For each query of the first type output a single integer &minus; the final value of time <span class=\"tex-span\"><i>t</i></span> after driving from city <span class=\"tex-span\"><i>x</i></span> to city <span class=\"tex-span\"><i>y</i></span>. Process the queries in the order in which they are given in the input.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>10<br/>2 5 3 2 3 5 3 4 2 4<br/>10<br/>C 10 6<br/>A 2 6<br/>A 1 3<br/>C 3 4<br/>A 3 11<br/>A 4 9<br/>A 5 6<br/>C 7 3<br/>A 8 10<br/>A 2 5<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>5<br/>3<br/>14<br/>6<br/>2<br/>4<br/>4<br/></pre></div></div></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}