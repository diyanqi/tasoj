{"title": "Leha and another game about graph", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">B. Leha and another game about graph</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>3 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Leha plays a computer game, where is on each level is given a connected graph with <span class=\"tex-span\"><i>n</i></span> vertices and <span class=\"tex-span\"><i>m</i></span> edges. Graph can contain multiple edges, but can not contain self loops. Each vertex has an integer <span class=\"tex-span\"><i>d</i><sub class=\"lower-index\"><i>i</i></sub></span>, which can be equal to <span class=\"tex-span\">0</span>, <span class=\"tex-span\">1</span> or <span class=\"tex-span\">-1</span>. To pass the level, he needs to find a &laquo;good&raquo; subset of edges of the graph or say, that it doesn't exist. Subset is called &laquo;good&raquo;, if by by leaving only edges from this subset in the original graph, we obtain the following: for every vertex i, <span class=\"tex-span\"><i>d</i><sub class=\"lower-index\"><i>i</i></sub></span>=-1 or it's degree modulo 2 is equal to <span class=\"tex-span\"><i>d</i><sub class=\"lower-index\"><i>i</i></sub></span>. Leha wants to pass the game as soon as possible and ask you to help him. In case of multiple correct answers, print any of them.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains two integers <span class=\"tex-span\"><i>n</i></span>, <span class=\"tex-span\"><i>m</i></span> (<span class=\"tex-span\">1&le;<i>n</i>&le;3&middot;10<sup class=\"upper-index\">5</sup></span>, <span class=\"tex-span\"><i>n</i>-1&le;<i>m</i>&le;3&middot;10<sup class=\"upper-index\">5</sup></span>) &minus; number of vertices and edges.</p><p>The second line contains <span class=\"tex-span\"><i>n</i></span> integers <span class=\"tex-span\"><i>d</i><sub class=\"lower-index\">1</sub>,<i>d</i><sub class=\"lower-index\">2</sub>,...,<i>d</i><sub class=\"lower-index\"><i>n</i></sub></span> (<span class=\"tex-span\">-1&le;<i>d</i><sub class=\"lower-index\"><i>i</i></sub>&le;1</span>) &minus; numbers on the vertices.</p><p>Each of the next <span class=\"tex-span\"><i>m</i></span> lines contains two integers <span class=\"tex-span\"><i>u</i></span> and <span class=\"tex-span\"><i>v</i></span> (<span class=\"tex-span\">1&le;<i>u</i>,<i>v</i>&le;<i>n</i></span>) &minus; edges. It's guaranteed, that graph in the input is connected.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print <span class=\"tex-span\">-1</span> in a single line, if solution doesn't exist. Otherwise in the first line <span class=\"tex-span\"><i>k</i></span> &minus; number of edges in a subset. In the next <span class=\"tex-span\"><i>k</i></span> lines indexes of edges. Edges are numerated in order as they are given in the input, starting from <span class=\"tex-span\">1</span>.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>1 0<br/>1<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>-1<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>4 5<br/>0 0 0 -1<br/>1 2<br/>2 3<br/>3 4<br/>1 4<br/>2 4<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>0<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>2 1<br/>1 1<br/>1 2<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>1<br/>1<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>3 3<br/>0 -1 1<br/>1 2<br/>2 3<br/>1 3<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>1<br/>2<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>In the first sample we have single vertex without edges. It's degree is 0 and we can not get 1.</p></div></div><p> </p></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 3000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}