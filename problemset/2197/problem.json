{"title": "Paper task", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">F. Paper task</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>3 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>512 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Alex was programming while Valentina (his toddler daughter) got there and started asking many questions about the round brackets (or parenthesis) in the code. He explained her a bit and when she got it he gave her a task in order to finish his code on time.</p><p>For the purpose of this problem we consider only strings consisting of opening and closing round brackets, that is characters '<span class=\"tex-font-style-tt\">(</span>' and '<span class=\"tex-font-style-tt\">)</span>'.</p><p>The sequence of brackets is called <span class=\"tex-font-style-it\">correct</span> if: </p><ol> <li> it's empty; </li><li> it's a correct sequence of brackets, enclosed in a pair of opening and closing brackets; </li><li> it's a concatenation of two correct sequences of brackets. </li></ol><p>For example, the sequences \"<span class=\"tex-font-style-tt\">()()</span>\" and \"<span class=\"tex-font-style-tt\">((()))(())</span>\" are correct, while \"<span class=\"tex-font-style-tt\">)(()</span>\", \"<span class=\"tex-font-style-tt\">(((((</span>\" and \"<span class=\"tex-font-style-tt\">())</span>\" are not.</p><p>Alex took a piece of paper, wrote a string <span class=\"tex-span\"><i>s</i></span> consisting of brackets and asked Valentina to count the number of <span class=\"tex-font-style-bf\">distinct</span> non-empty substrings of <span class=\"tex-span\"><i>s</i></span> that are correct sequences of brackets. In other words, her task is to count the number of non-empty correct sequences of brackets that occur in a string <span class=\"tex-span\"><i>s</i></span> as a <span class=\"tex-font-style-bf\">substring</span> (don't mix up with subsequences).</p><p>When Valentina finished the task, Alex noticed he doesn't know the answer. Help him don't loose face in front of Valentina and solve the problem!</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line of the input contains an integer <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">1&le;<i>n</i>&le;500000</span>)&minus; the length of the string <span class=\"tex-span\"><i>s</i></span>.</p><p>The second line contains a string <span class=\"tex-span\"><i>s</i></span> of length <span class=\"tex-span\"><i>n</i></span> consisting of only '<span class=\"tex-font-style-tt\">(</span>' and '<span class=\"tex-font-style-tt\">)</span>'.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print the number of <span class=\"tex-font-style-bf\">distinct</span> non-empty correct sequences that occur in <span class=\"tex-span\"><i>s</i></span> as substring.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>10<br/>()()()()()<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>5<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>7<br/>)(())()<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>3<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>In the first sample, there are <span class=\"tex-span\">5</span> distinct substrings we should count: \"<span class=\"tex-font-style-tt\">()</span>\", \"<span class=\"tex-font-style-tt\">()()</span>\", \"<span class=\"tex-font-style-tt\">()()()</span>\", \"<span class=\"tex-font-style-tt\">()()()()</span>\" and \"<span class=\"tex-font-style-tt\">()()()()()</span>\".</p><p>In the second sample, there are <span class=\"tex-span\">3</span> distinct substrings we should count: \"<span class=\"tex-font-style-tt\">()</span>\", \"<span class=\"tex-font-style-tt\">(())</span>\" and \"<span class=\"tex-font-style-tt\">(())()</span>\".</p></div></div><p> </p></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 3000, "memory_limit": 512, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}