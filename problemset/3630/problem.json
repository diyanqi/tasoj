{"title": "Colorful Stones (Simplified Edition)", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">A. Colorful Stones (Simplified Edition)</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>There is a sequence of colorful stones. The color of each stone is one of red, green, or blue. You are given a string <span class=\"tex-span\"><i>s</i></span>. The <span class=\"tex-span\"><i>i</i></span>-th (1-based) character of <span class=\"tex-span\"><i>s</i></span> represents the color of the <span class=\"tex-span\"><i>i</i></span>-th stone. If the character is \"<span class=\"tex-font-style-tt\">R</span>\", \"<span class=\"tex-font-style-tt\">G</span>\", or \"<span class=\"tex-font-style-tt\">B</span>\", the color of the corresponding stone is red, green, or blue, respectively.</p><p>Initially Squirrel Liss is standing on the first stone. You perform instructions one or more times.</p><p>Each instruction is one of the three types: \"<span class=\"tex-font-style-tt\">RED</span>\", \"<span class=\"tex-font-style-tt\">GREEN</span>\", or \"<span class=\"tex-font-style-tt\">BLUE</span>\". After an instruction <span class=\"tex-span\"><i>c</i></span>, if Liss is standing on a stone whose colors is <span class=\"tex-span\"><i>c</i></span>, Liss will move one stone forward, else she will not move.</p><p>You are given a string <span class=\"tex-span\"><i>t</i></span>. The number of instructions is equal to the length of <span class=\"tex-span\"><i>t</i></span>, and the <span class=\"tex-span\"><i>i</i></span>-th character of <span class=\"tex-span\"><i>t</i></span> represents the <span class=\"tex-span\"><i>i</i></span>-th instruction.</p><p>Calculate the final position of Liss (the number of the stone she is going to stand on in the end) after performing all the instructions, and print its 1-based position. It is guaranteed that Liss don't move out of the sequence.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The input contains two lines. The first line contains the string <span class=\"tex-span\"><i>s</i></span> (<span class=\"tex-span\">1&le;|<i>s</i>|&le;50</span>). The second line contains the string <span class=\"tex-span\"><i>t</i></span> (<span class=\"tex-span\">1&le;|<i>t</i>|&le;50</span>). The characters of each string will be one of \"<span class=\"tex-font-style-tt\">R</span>\", \"<span class=\"tex-font-style-tt\">G</span>\", or \"<span class=\"tex-font-style-tt\">B</span>\". It is guaranteed that Liss don't move out of the sequence.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print the final 1-based position of Liss in a single line.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>RGB<br/>RRR<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>2<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>RRRBGBRBBB<br/>BBBRR<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>3<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>BRRBGBRGRBGRGRRGGBGBGBRGBRGRGGGRBRRRBRBBBGRRRGGBBB<br/>BBRBGGRGRGBBBRBGRBRBBBBRBRRRBGBBGBBRRBBGGRBRRBRGRB<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>15<br/></pre></div></div></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}