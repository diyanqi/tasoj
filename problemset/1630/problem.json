{"title": "Fake News (hard)", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">I. Fake News (hard)</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>5 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Now that you have proposed a fake post for the HC<span class=\"tex-span\"><sup class=\"upper-index\">2</sup></span> Facebook page, Heidi wants to measure the quality of the post before actually posting it. She recently came across a (possibly fake) article about the impact of fractal structure on multimedia messages and she is now trying to measure the self-similarity of the message, which is defined as</p><center class=\"tex-equation\"><img align=\"middle\" class=\"tex-formula\" src=\"http://cf.hustoj.com:80/userfiles/image/f173f444d72ecbeb318da0ee7db2707c9d7a75ef49.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/></center><p>where the sum is over all nonempty strings <span class=\"tex-span\"><i>p</i></span> and <img align=\"middle\" class=\"tex-formula\" src=\"http://cf.hustoj.com:80/userfiles/image/7f8e68bac4b8d1c823a4fa80324733b15ae54eed49.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> is the number of occurences of <span class=\"tex-span\"><i>p</i></span> in <span class=\"tex-span\"><i>s</i></span> as a <span class=\"tex-font-style-bf\">substring</span>. (Note that the sum is infinite, but it only has a finite number of nonzero summands.)</p><p>Heidi refuses to do anything else until she knows how to calculate this self-similarity. Could you please help her? (If you would like to instead convince Heidi that a finite string cannot be a fractal anyway &mdash; do not bother, we have already tried.)</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The input starts with a line indicating the number of test cases <span class=\"tex-span\"><i>T</i></span> (<span class=\"tex-span\">1&le;<i>T</i>&le;10</span>). After that, <span class=\"tex-span\"><i>T</i></span> test cases follow, each of which consists of one line containing a string <span class=\"tex-span\"><i>s</i></span> (<span class=\"tex-span\">1&le;|<i>s</i>|&le;100000</span>) composed of lowercase letters (<span class=\"tex-font-style-tt\">a</span>-<span class=\"tex-font-style-tt\">z</span>).</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Output <span class=\"tex-span\"><i>T</i></span> lines, every line containing one number &mdash; the answer to the corresponding test case.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Example</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>4<br/>aa<br/>abcd<br/>ccc<br/>abcc<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>5<br/>10<br/>14<br/>12<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>A string <span class=\"tex-span\"><i>s</i></span> contains another string <span class=\"tex-span\"><i>p</i></span> as a substring if <span class=\"tex-span\"><i>p</i></span> is a contiguous subsequence of <span class=\"tex-span\"><i>s</i></span>. For example, <span class=\"tex-font-style-tt\">ab</span> is a substring of <span class=\"tex-font-style-tt\">cab</span> but not of <span class=\"tex-font-style-tt\">acb</span>.</p></div></div><p> </p></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 5000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}