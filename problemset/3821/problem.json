{"title": "Multicolored Marbles", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">A. Multicolored Marbles</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Polycarpus plays with red and blue marbles. He put <span class=\"tex-span\"><i>n</i></span> marbles from the left to the right in a row. As it turned out, the marbles form a <span class=\"tex-font-style-it\">zebroid</span>.</p><p>A non-empty sequence of red and blue marbles is a <span class=\"tex-font-style-it\">zebroid</span>, if the colors of the marbles in this sequence alternate. For example, sequences (<span class=\"tex-font-style-tt\">red; blue; red</span>) and (<span class=\"tex-font-style-tt\">blue</span>) are zebroids and sequence (<span class=\"tex-font-style-tt\">red; red</span>) is not a zebroid.</p><p>Now Polycarpus wonders, how many ways there are to pick a zebroid <span class=\"tex-font-style-bf\">subsequence</span> from this sequence. Help him solve the problem, find the number of ways modulo <span class=\"tex-span\">1000000007</span> <span class=\"tex-span\">(10<sup class=\"upper-index\">9</sup>+7)</span>.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains a single integer <span class=\"tex-span\"><i>n</i></span> <span class=\"tex-span\">(1&le;<i>n</i>&le;10<sup class=\"upper-index\">6</sup>)</span> &minus; the number of marbles in Polycarpus's sequence.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print a single number &minus; the answer to the problem modulo <span class=\"tex-span\">1000000007</span> <span class=\"tex-span\">(10<sup class=\"upper-index\">9</sup>+7)</span>.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>3<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>6<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>4<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>11<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>Let's consider the first test sample. Let's assume that Polycarpus initially had sequence (<span class=\"tex-font-style-tt\">red; blue; red</span>), so there are six ways to pick a zebroid: </p><ul> <li> pick the first marble; </li><li> pick the second marble; </li><li> pick the third marble; </li><li> pick the first and second marbles; </li><li> pick the second and third marbles; </li><li> pick the first, second and third marbles. </li></ul><p>It can be proven that if Polycarpus picks (<span class=\"tex-font-style-tt\">blue; red; blue</span>) as the initial sequence, the number of ways won't change.</p></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}