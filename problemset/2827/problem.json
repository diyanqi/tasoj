{"title": "Valid Sets", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">D. Valid Sets</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>1 second</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>As you know, an undirected connected graph with <span class=\"tex-span\"><i>n</i></span> nodes and <span class=\"tex-span\"><i>n</i>-1</span> edges is called a <span class=\"tex-font-style-it\">tree</span>. You are given an integer <span class=\"tex-span\"><i>d</i></span> and a tree consisting of <span class=\"tex-span\"><i>n</i></span> nodes. Each node <span class=\"tex-span\"><i>i</i></span> has a value <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> associated with it.</p><p>We call a set <span class=\"tex-span\"><i>S</i></span> of tree nodes <span class=\"tex-font-style-it\">valid</span> if following conditions are satisfied:</p><ol><li> <span class=\"tex-span\"><i>S</i></span> is non-empty.</li><li> <span class=\"tex-span\"><i>S</i></span> is connected. In other words, if nodes <span class=\"tex-span\"><i>u</i></span> and <span class=\"tex-span\"><i>v</i></span> are in <span class=\"tex-span\"><i>S</i></span>, then all nodes lying on the simple path between <span class=\"tex-span\"><i>u</i></span> and <span class=\"tex-span\"><i>v</i></span> should also be presented in <span class=\"tex-span\"><i>S</i></span>.</li><li> <img align=\"middle\" class=\"tex-formula\" src=\"http://cf.hustoj.com:80/userfiles/image/016705d78c5bc6bb194c21d8c0a840850d53641515.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/>.</li></ol><p>Your task is to count the number of valid sets. Since the result can be very large, you must print its remainder modulo <span class=\"tex-span\">1000000007</span> (<span class=\"tex-span\">10<sup class=\"upper-index\">9</sup>+7</span>).</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains two space-separated integers <span class=\"tex-span\"><i>d</i></span> (<span class=\"tex-span\">0&le;<i>d</i>&le;2000</span>) and <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">1&le;<i>n</i>&le;2000</span>).</p><p>The second line contains <span class=\"tex-span\"><i>n</i></span> space-separated positive integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">1</sub>,<i>a</i><sub class=\"lower-index\">2</sub>,...,<i>a</i><sub class=\"lower-index\"><i>n</i></sub></span>(<span class=\"tex-span\">1&le;<i>a</i><sub class=\"lower-index\"><i>i</i></sub>&le;2000</span>).</p><p>Then the next <span class=\"tex-span\"><i>n</i>-1</span> line each contain pair of integers <span class=\"tex-span\"><i>u</i></span> and <span class=\"tex-span\"><i>v</i></span> (<span class=\"tex-span\">1&le;<i>u</i>,<i>v</i>&le;<i>n</i></span>) denoting that there is an edge between <span class=\"tex-span\"><i>u</i></span> and <span class=\"tex-span\"><i>v</i></span>. It is guaranteed that these edges form a tree.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print the number of valid sets modulo <span class=\"tex-span\">1000000007</span>.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>1 4<br/>2 1 3 2<br/>1 2<br/>1 3<br/>3 4<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>8<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>0 3<br/>1 2 3<br/>1 2<br/>2 3<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>3<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>4 8<br/>7 8 7 5 4 6 4 10<br/>1 6<br/>1 2<br/>5 8<br/>1 3<br/>3 5<br/>6 7<br/>3 4<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>41<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>In the first sample, there are exactly 8 valid sets: <span class=\"tex-span\">{1},{2},{3},{4},{1,2},{1,3},{3,4}</span> and <span class=\"tex-span\">{1,3,4}</span>. Set <span class=\"tex-span\">{1,2,3,4}</span> is not valid, because the third condition isn't satisfied. Set <span class=\"tex-span\">{1,4}</span> satisfies the third condition, but conflicts with the second condition.</p></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 1000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}