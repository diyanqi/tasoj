{"title": "Case of Matryoshkas", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">A. Case of Matryoshkas</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Andrewid the Android is a galaxy-famous detective. He is now investigating the case of vandalism at the exhibition of contemporary art.</p><p>The main exhibit is a construction of <span class=\"tex-span\"><i>n</i></span> matryoshka dolls that can be nested one into another. The matryoshka dolls are numbered from <span class=\"tex-span\">1</span> to <span class=\"tex-span\"><i>n</i></span>. A matryoshka with a smaller number can be nested in a matryoshka with a higher number, two matryoshkas can not be directly nested in the same doll, but there may be chain nestings, for example, <span class=\"tex-span\">1&rarr;2&rarr;4&rarr;5</span>. </p><p>In one second, you can perform one of the two following operations:</p><ul> <li> Having a matryoshka <span class=\"tex-span\"><i>a</i></span> that isn't nested in any other matryoshka and a matryoshka <span class=\"tex-span\"><i>b</i></span>, such that <span class=\"tex-span\"><i>b</i></span> doesn't contain any other matryoshka and is not nested in any other matryoshka, you may put <span class=\"tex-span\"><i>a</i></span> in <span class=\"tex-span\"><i>b</i></span>; </li><li> Having a matryoshka <span class=\"tex-span\"><i>a</i></span> directly contained in matryoshka <span class=\"tex-span\"><i>b</i></span>, such that <span class=\"tex-span\"><i>b</i></span> is not nested in any other matryoshka, you may get <span class=\"tex-span\"><i>a</i></span> out of <span class=\"tex-span\"><i>b</i></span>. </li></ul><p>According to the modern aesthetic norms the matryoshka dolls on display were assembled in a specific configuration, i.e. as several separate chains of nested matryoshkas, but the criminal, following the mysterious plan, took out all the dolls and assembled them into a single large chain (<span class=\"tex-span\">1&rarr;2&rarr;...&rarr;<i>n</i></span>). In order to continue the investigation Andrewid needs to know in what minimum time it is possible to perform this action.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains integers <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">1&le;<i>n</i>&le;10<sup class=\"upper-index\">5</sup></span>) and <span class=\"tex-span\"><i>k</i></span> (<span class=\"tex-span\">1&le;<i>k</i>&le;10<sup class=\"upper-index\">5</sup></span>) &minus; the number of matryoshkas and matryoshka chains in the initial configuration.</p><p>The next <span class=\"tex-span\"><i>k</i></span> lines contain the descriptions of the chains: the <span class=\"tex-span\"><i>i</i></span>-th line first contains number <span class=\"tex-span\"><i>m</i><sub class=\"lower-index\"><i>i</i></sub></span> (<span class=\"tex-span\">1&le;<i>m</i><sub class=\"lower-index\"><i>i</i></sub>&le;<i>n</i></span>), and then <span class=\"tex-span\"><i>m</i><sub class=\"lower-index\"><i>i</i></sub></span> numbers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i>1</sub>,<i>a</i><sub class=\"lower-index\"><i>i</i>2</sub>,...,<i>a</i><sub class=\"lower-index\"><i>im</i><sub class=\"lower-index\"><i>i</i></sub></sub></span> &minus; the numbers of matryoshkas in the chain (matryoshka <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i>1</sub></span> is nested into matryoshka <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i>2</sub></span>, that is nested into matryoshka <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i>3</sub></span>, and so on till the matryoshka <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>im</i><sub class=\"lower-index\"><i>i</i></sub></sub></span> that isn't nested into any other matryoshka).</p><p>It is guaranteed that <span class=\"tex-span\"><i>m</i><sub class=\"lower-index\">1</sub>+<i>m</i><sub class=\"lower-index\">2</sub>+...+<i>m</i><sub class=\"lower-index\"><i>k</i></sub>=<i>n</i></span>, the numbers of matryoshkas in all the chains are distinct, in each chain the numbers of matryoshkas follow in the ascending order.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>In the single line print the minimum number of seconds needed to assemble one large chain from the initial configuration.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>3 2<br/>2 1 2<br/>1 3<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>1<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>7 3<br/>3 1 3 7<br/>2 2 5<br/>2 4 6<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>10<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>In the first sample test there are two chains: <span class=\"tex-span\">1&rarr;2</span> and <span class=\"tex-span\">3</span>. In one second you can nest the first chain into the second one and get <span class=\"tex-span\">1&rarr;2&rarr;3</span>.</p><p>In the second sample test you need to disassemble all the three chains into individual matryoshkas in 2 + 1 + 1 = 4 seconds and then assemble one big chain in 6 seconds.</p></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}