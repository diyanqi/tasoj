{"title": "Bash Plays with Functions", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">E. Bash Plays with Functions</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>3 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Bash got tired on his journey to become the greatest Pokemon master. So he decides to take a break and play with functions.</p><p>Bash defines a function <span class=\"tex-span\"><i>f</i><sub class=\"lower-index\">0</sub>(<i>n</i>)</span>, which denotes the number of ways of factoring <span class=\"tex-span\"><i>n</i></span> into two factors <span class=\"tex-span\"><i>p</i></span> and <span class=\"tex-span\"><i>q</i></span> such that <span class=\"tex-span\"><i>gcd</i>(<i>p</i>,<i>q</i>)=1</span>. In other words, <span class=\"tex-span\"><i>f</i><sub class=\"lower-index\">0</sub>(<i>n</i>)</span> is the number of ordered pairs of positive integers <span class=\"tex-span\">(<i>p</i>,<i>q</i>)</span> such that <span class=\"tex-span\"><i>p</i>&middot;<i>q</i>=<i>n</i></span> and <span class=\"tex-span\"><i>gcd</i>(<i>p</i>,<i>q</i>)=1</span>.</p><p>But Bash felt that it was too easy to calculate this function. So he defined a series of functions, where <span class=\"tex-span\"><i>f</i><sub class=\"lower-index\"><i>r</i>+1</sub></span> is defined as:</p><center class=\"tex-equation\"><img align=\"middle\" class=\"tex-formula\" src=\"http://cf.hustoj.com:80/userfiles/image/e7e119e8b4161c17fb9b8c8068d7edfe4390410d4343.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/></center><p>Where <span class=\"tex-span\">(<i>u</i>,<i>v</i>)</span> is any ordered pair of positive integers, they need not to be co-prime.</p><p>Now Bash wants to know the value of <span class=\"tex-span\"><i>f</i><sub class=\"lower-index\"><i>r</i></sub>(<i>n</i>)</span> for different <span class=\"tex-span\"><i>r</i></span> and <span class=\"tex-span\"><i>n</i></span>. Since the value could be huge, he would like to know the value modulo <span class=\"tex-span\">10<sup class=\"upper-index\">9</sup>+7</span>. Help him!</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains an integer <span class=\"tex-span\"><i>q</i></span> (<span class=\"tex-span\">1&le;<i>q</i>&le;10<sup class=\"upper-index\">6</sup></span>)&minus; the number of values Bash wants to know.</p><p>Each of the next <span class=\"tex-span\"><i>q</i></span> lines contain two integers <span class=\"tex-span\"><i>r</i></span> and <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">0&le;<i>r</i>&le;10<sup class=\"upper-index\">6</sup></span>, <span class=\"tex-span\">1&le;<i>n</i>&le;10<sup class=\"upper-index\">6</sup></span>), which denote Bash wants to know the value <span class=\"tex-span\"><i>f</i><sub class=\"lower-index\"><i>r</i></sub>(<i>n</i>)</span>.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print <span class=\"tex-span\"><i>q</i></span> integers. For each pair of <span class=\"tex-span\"><i>r</i></span> and <span class=\"tex-span\"><i>n</i></span> given, print <span class=\"tex-span\"><i>f</i><sub class=\"lower-index\"><i>r</i></sub>(<i>n</i>)</span> modulo <span class=\"tex-span\">10<sup class=\"upper-index\">9</sup>+7</span> on a separate line.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Example</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>5<br/>0 30<br/>1 25<br/>3 65<br/>2 5<br/>4 48<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>8<br/>5<br/>25<br/>4<br/>630<br/></pre></div></div></div></div><p> </p></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 3000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}