{"title": "Roads in the Kingdom", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">F. Roads in the Kingdom</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>In the Kingdom K., there are <span class=\"tex-span\"><i>n</i></span> towns numbered with integers from <span class=\"tex-span\">1</span> to <span class=\"tex-span\"><i>n</i></span>. The towns are connected by <span class=\"tex-span\"><i>n</i></span> bi-directional roads numbered with integers from <span class=\"tex-span\">1</span> to <span class=\"tex-span\"><i>n</i></span>. The <span class=\"tex-span\"><i>i</i></span>-th road connects the towns <span class=\"tex-span\"><i>u</i><sub class=\"lower-index\"><i>i</i></sub></span> and <span class=\"tex-span\"><i>v</i><sub class=\"lower-index\"><i>i</i></sub></span> and its length is <span class=\"tex-span\"><i>l</i><sub class=\"lower-index\"><i>i</i></sub></span>. There is no more than one road between two towns. Also, there are no roads that connect the towns with itself.</p><p>Let's call the inconvenience of the roads the maximum of the shortest distances between all pairs of towns.</p><p>Because of lack of money, it was decided to close down one of the roads so that after its removal it is still possible to reach any town from any other. You have to find the minimum possible inconvenience of the roads after closing down one of the roads.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains the integer <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">3&le;<i>n</i>&le;2&middot;10<sup class=\"upper-index\">5</sup></span>)&minus; the number of towns and roads.</p><p>The next <span class=\"tex-span\"><i>n</i></span> lines contain the roads description. The <span class=\"tex-span\"><i>i</i></span>-th from these lines contains three integers <span class=\"tex-span\"><i>u</i><sub class=\"lower-index\"><i>i</i></sub></span>, <span class=\"tex-span\"><i>v</i><sub class=\"lower-index\"><i>i</i></sub></span>, <span class=\"tex-span\"><i>l</i><sub class=\"lower-index\"><i>i</i></sub></span> (<span class=\"tex-span\">1&le;<i>u</i><sub class=\"lower-index\"><i>i</i></sub>,<i>v</i><sub class=\"lower-index\"><i>i</i></sub>&le;<i>n</i></span>, <span class=\"tex-span\">1&le;<i>l</i><sub class=\"lower-index\"><i>i</i></sub>&le;10<sup class=\"upper-index\">9</sup></span>)&minus; the numbers of towns connected by the <span class=\"tex-span\"><i>i</i></span>-th road and the length of the <span class=\"tex-span\"><i>i</i></span>-th road. No road connects a town to itself, no two roads connect the same towns.</p><p><span class=\"tex-font-style-it\">It's guaranteed that it's always possible to close down one of the roads so that all the towns are still reachable from each other.</span></p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print a single integer&minus; the minimum possible inconvenience of the roads after the refusal from one of the roads.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>3<br/>1 2 4<br/>2 3 5<br/>1 3 1<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>5<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>5<br/>2 3 7<br/>3 1 9<br/>4 1 8<br/>3 5 4<br/>4 5 5<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>18<br/></pre></div></div></div></div><p> </p></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}