{"title": "Petya and Staircases", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">B. Petya and Staircases</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>1 second</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Little boy Petya loves stairs very much. But he is bored from simple going up and down them &minus; he loves jumping over several stairs at a time. As he stands on some stair, he can either jump to the next one or jump over one or two stairs at a time. But some stairs are too dirty and Petya doesn't want to step on them.</p><p>Now Petya is on the first stair of the staircase, consisting of <span class=\"tex-span\"><i>n</i></span> stairs. He also knows the numbers of the dirty stairs of this staircase. Help Petya find out if he can jump through the entire staircase and reach the last stair number <span class=\"tex-span\"><i>n</i></span> without touching a dirty stair once.</p><p>One has to note that anyway Petya should step on the first and last stairs, so if the first or the last stair is dirty, then Petya cannot choose a path with clean steps only.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains two integers <span class=\"tex-span\"><i>n</i></span> and <span class=\"tex-span\"><i>m</i></span> (<span class=\"tex-span\">1&le;<i>n</i>&le;10<sup class=\"upper-index\">9</sup></span>, <span class=\"tex-span\">0&le;<i>m</i>&le;3000</span>) &minus; the number of stairs in the staircase and the number of dirty stairs, correspondingly. The second line contains <span class=\"tex-span\"><i>m</i></span> <span class=\"tex-font-style-bf\">different</span> space-separated integers <span class=\"tex-span\"><i>d</i><sub class=\"lower-index\">1</sub>,<i>d</i><sub class=\"lower-index\">2</sub>,...,<i>d</i><sub class=\"lower-index\"><i>m</i></sub></span> (<span class=\"tex-span\">1&le;<i>d</i><sub class=\"lower-index\"><i>i</i></sub>&le;<i>n</i></span>) &minus; the numbers of the dirty stairs (in an arbitrary order).</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print \"<span class=\"tex-font-style-tt\">YES</span>\" if Petya can reach stair number <span class=\"tex-span\"><i>n</i></span>, stepping only on the clean stairs. Otherwise print \"<span class=\"tex-font-style-tt\">NO</span>\".</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>10 5<br/>2 4 8 3 6<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>NO</pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>10 5<br/>2 4 5 7 9<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>YES</pre></div></div></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 1000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}