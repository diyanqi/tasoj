{"title": "Clique Problem", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">D. Clique Problem</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>The clique problem is one of the most well-known NP-complete problems. Under some simplification it can be formulated as follows. Consider an undirected graph <span class=\"tex-span\"><i>G</i></span>. It is required to find a subset of vertices <span class=\"tex-span\"><i>C</i></span> of the maximum size such that any two of them are connected by an edge in graph <span class=\"tex-span\"><i>G</i></span>. Sounds simple, doesn't it? Nobody yet knows an algorithm that finds a solution to this problem in polynomial time of the size of the graph. However, as with many other NP-complete problems, the clique problem is easier if you consider a specific type of a graph.</p><p>Consider <span class=\"tex-span\"><i>n</i></span> distinct points on a line. Let the <span class=\"tex-span\"><i>i</i></span>-th point have the coordinate <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\"><i>i</i></sub></span> and weight <span class=\"tex-span\"><i>w</i><sub class=\"lower-index\"><i>i</i></sub></span>. Let's form graph <span class=\"tex-span\"><i>G</i></span>, whose vertices are these points and edges connect exactly the pairs of points <span class=\"tex-span\">(<i>i</i>,<i>j</i>)</span>, such that the distance between them is not less than the sum of their weights, or more formally: <span class=\"tex-span\">|<i>x</i><sub class=\"lower-index\"><i>i</i></sub>-<i>x</i><sub class=\"lower-index\"><i>j</i></sub>|&ge;<i>w</i><sub class=\"lower-index\"><i>i</i></sub>+<i>w</i><sub class=\"lower-index\"><i>j</i></sub></span>.</p><p>Find the size of the maximum clique in such graph.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains the integer <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">1&le;<i>n</i>&le;200000</span>) &minus; the number of points.</p><p>Each of the next <span class=\"tex-span\"><i>n</i></span> lines contains two numbers <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\"><i>i</i></sub></span>, <span class=\"tex-span\"><i>w</i><sub class=\"lower-index\"><i>i</i></sub></span> (<span class=\"tex-span\">0&le;<i>x</i><sub class=\"lower-index\"><i>i</i></sub>&le;10<sup class=\"upper-index\">9</sup>,1&le;<i>w</i><sub class=\"lower-index\"><i>i</i></sub>&le;10<sup class=\"upper-index\">9</sup></span>) &minus; the coordinate and the weight of a point. All <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\"><i>i</i></sub></span> are different.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print a single number &minus; the number of vertexes in the maximum clique of the given graph.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>4<br/>2 3<br/>3 1<br/>6 1<br/>0 2<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>3<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>If you happen to know how to solve this problem without using the specific properties of the graph formulated in the problem statement, then you are able to get a prize of one million dollars!</p><p>The picture for the sample test.</p><center> <img class=\"tex-graphics\" src=\"http://cf.hustoj.com:80/userfiles/image/8f6c2bdfd5fdfc06954c216f1d7c576288b9deb219.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> </center></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}