{"title": "Hamming Distance", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">C. Hamming Distance</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p><span class=\"tex-font-style-it\">Hamming distance</span> between strings <span class=\"tex-span\"><i>a</i></span> and <span class=\"tex-span\"><i>b</i></span> of equal length (denoted by <span class=\"tex-span\"><i>h</i>(<i>a</i>,<i>b</i>)</span>) is equal to the number of distinct integers <span class=\"tex-span\"><i>i</i></span> <span class=\"tex-span\">(1&le;<i>i</i>&le;|<i>a</i>|)</span>, such that <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub>&ne;<i>b</i><sub class=\"lower-index\"><i>i</i></sub></span>, where <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> is the <span class=\"tex-span\"><i>i</i></span>-th symbol of string <span class=\"tex-span\"><i>a</i></span>, <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\"><i>i</i></sub></span> is the <span class=\"tex-span\"><i>i</i></span>-th symbol of string <span class=\"tex-span\"><i>b</i></span>. For example, the Hamming distance between strings \"<span class=\"tex-font-style-tt\">aba</span>\" and \"<span class=\"tex-font-style-tt\">bba</span>\" equals <span class=\"tex-span\">1</span>, they have different first symbols. For strings \"<span class=\"tex-font-style-tt\">bbba</span>\" and \"<span class=\"tex-font-style-tt\">aaab</span>\" the Hamming distance equals <span class=\"tex-span\">4</span>.</p><p>John Doe had a paper on which four strings of equal length <span class=\"tex-span\"><i>s</i><sub class=\"lower-index\">1</sub></span>, <span class=\"tex-span\"><i>s</i><sub class=\"lower-index\">2</sub></span>, <span class=\"tex-span\"><i>s</i><sub class=\"lower-index\">3</sub></span> and <span class=\"tex-span\"><i>s</i><sub class=\"lower-index\">4</sub></span> were written. Each string <span class=\"tex-span\"><i>s</i><sub class=\"lower-index\"><i>i</i></sub></span> consisted only of lowercase letters \"<span class=\"tex-font-style-tt\">a</span>\" and \"<span class=\"tex-font-style-tt\">b</span>\". John found the Hamming distances between all pairs of strings he had. Then he lost the paper with the strings but he didn't lose the Hamming distances between all pairs.</p><p>Help John restore the strings; find some four strings <span class=\"tex-span\"><i>s</i>'<sub class=\"lower-index\">1</sub></span>, <span class=\"tex-span\"><i>s</i>'<sub class=\"lower-index\">2</sub></span>, <span class=\"tex-span\"><i>s</i>'<sub class=\"lower-index\">3</sub>,<i>s</i>'<sub class=\"lower-index\">4</sub></span> of equal length that consist only of lowercase letters \"<span class=\"tex-font-style-tt\">a</span>\" and \"<span class=\"tex-font-style-tt\">b</span>\", such that the pairwise Hamming distances between them are the same as between John's strings. More formally, set <span class=\"tex-span\"><i>s</i>'<sub class=\"lower-index\"><i>i</i></sub></span> must satisfy the condition <img align=\"middle\" class=\"tex-formula\" src=\"http://cf.hustoj.com:80/userfiles/image/94ecd10df9369fee00d0cacd4f042c2038305f0a48.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/>. </p><p>To make the strings easier to put down on a piece of paper, you should choose among all suitable sets of strings the one that has strings of <span class=\"tex-font-style-bf\">minimum length</span>. </p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains space-separated integers <span class=\"tex-span\"><i>h</i>(<i>s</i><sub class=\"lower-index\">1</sub>,<i>s</i><sub class=\"lower-index\">2</sub>)</span>, <span class=\"tex-span\"><i>h</i>(<i>s</i><sub class=\"lower-index\">1</sub>,<i>s</i><sub class=\"lower-index\">3</sub>)</span>, <span class=\"tex-span\"><i>h</i>(<i>s</i><sub class=\"lower-index\">1</sub>,<i>s</i><sub class=\"lower-index\">4</sub>)</span>. The second line contains space-separated integers <span class=\"tex-span\"><i>h</i>(<i>s</i><sub class=\"lower-index\">2</sub>,<i>s</i><sub class=\"lower-index\">3</sub>)</span> and <span class=\"tex-span\"><i>h</i>(<i>s</i><sub class=\"lower-index\">2</sub>,<i>s</i><sub class=\"lower-index\">4</sub>)</span>. The third line contains the single integer <span class=\"tex-span\"><i>h</i>(<i>s</i><sub class=\"lower-index\">3</sub>,<i>s</i><sub class=\"lower-index\">4</sub>)</span>.</p><p>All given integers <span class=\"tex-span\"><i>h</i>(<i>s</i><sub class=\"lower-index\"><i>i</i></sub>,<i>s</i><sub class=\"lower-index\"><i>j</i></sub>)</span> are non-negative and do not exceed <span class=\"tex-span\">10<sup class=\"upper-index\">5</sup></span>. It is guaranteed that at least one number <span class=\"tex-span\"><i>h</i>(<i>s</i><sub class=\"lower-index\"><i>i</i></sub>,<i>s</i><sub class=\"lower-index\"><i>j</i></sub>)</span> is positive.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print -1 if there's no suitable set of strings.</p><p>Otherwise print on the first line number <span class=\"tex-span\"><i>len</i></span> &minus; the length of each string. On the <span class=\"tex-span\"><i>i</i></span>-th of the next four lines print string <span class=\"tex-span\"><i>s</i>'<sub class=\"lower-index\"><i>i</i></sub></span>. If there are multiple sets with the minimum length of the strings, print any of them. </p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>4 4 4<br/>4 4<br/>4<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>6<br/>aaaabb<br/>aabbaa<br/>bbaaaa<br/>bbbbbb<br/></pre></div></div></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}