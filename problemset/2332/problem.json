{"title": "Hamiltonian Spanning Tree", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">D. Hamiltonian Spanning Tree</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>A group of <span class=\"tex-span\"><i>n</i></span> cities is connected by a network of roads. There is an undirected road between every pair of cities, so there are <img align=\"middle\" class=\"tex-formula\" src=\"http://cf.hustoj.com:80/userfiles/image/faddde8c5844c9b186c110138fda9196ef5f02c629.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> roads in total. It takes exactly <span class=\"tex-span\"><i>y</i></span> seconds to traverse <span class=\"tex-font-style-bf\">any</span> single road.</p><p>A <span class=\"tex-font-style-it\">spanning tree</span> is a set of roads containing exactly <span class=\"tex-span\"><i>n</i>-1</span> roads such that it's possible to travel between any two cities using only these roads.</p><p>Some spanning tree of the initial network was chosen. For every road in this tree the time one needs to traverse this road was changed from <span class=\"tex-span\"><i>y</i></span> to <span class=\"tex-span\"><i>x</i></span> seconds. Note that it's not guaranteed that <span class=\"tex-span\"><i>x</i></span> is smaller than <span class=\"tex-span\"><i>y</i></span>.</p><p>You would like to travel through all the cities using the shortest path possible. Given <span class=\"tex-span\"><i>n</i></span>, <span class=\"tex-span\"><i>x</i></span>, <span class=\"tex-span\"><i>y</i></span> and a description of the spanning tree that was chosen, find the cost of the shortest path that starts in any city, ends in any city and visits all cities <span class=\"tex-font-style-bf\">exactly once</span>.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line of the input contains three integers <span class=\"tex-span\"><i>n</i></span>, <span class=\"tex-span\"><i>x</i></span> and <span class=\"tex-span\"><i>y</i></span> (<span class=\"tex-span\">2&le;<i>n</i>&le;200000,1&le;<i>x</i>,<i>y</i>&le;10<sup class=\"upper-index\">9</sup></span>).</p><p>Each of the next <span class=\"tex-span\"><i>n</i>-1</span> lines contains a description of a road in the spanning tree. The <span class=\"tex-span\"><i>i</i></span>-th of these lines contains two integers <span class=\"tex-span\"><i>u</i><sub class=\"lower-index\"><i>i</i></sub></span> and <span class=\"tex-span\"><i>v</i><sub class=\"lower-index\"><i>i</i></sub></span> (<span class=\"tex-span\">1&le;<i>u</i><sub class=\"lower-index\"><i>i</i></sub>,<i>v</i><sub class=\"lower-index\"><i>i</i></sub>&le;<i>n</i></span>)&minus; indices of the cities connected by the <span class=\"tex-span\"><i>i</i></span>-th road. It is guaranteed that these roads form a spanning tree.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print a single integer&minus; the minimum number of seconds one needs to spend in order to visit all the cities exactly once.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>5 2 3<br/>1 2<br/>1 3<br/>3 4<br/>5 3<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>9<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>5 3 2<br/>1 2<br/>1 3<br/>3 4<br/>5 3<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>8<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>In the first sample, roads of the spanning tree have cost <span class=\"tex-span\">2</span>, while other roads have cost <span class=\"tex-span\">3</span>. One example of an optimal path is <img align=\"middle\" class=\"tex-formula\" src=\"http://cf.hustoj.com:80/userfiles/image/e493d74e2140521a77016e02eb520316a3909e8429.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/>.</p><p>In the second sample, we have the same spanning tree, but roads in the spanning tree cost 3, while other roads cost 2. One example of an optimal path is <img align=\"middle\" class=\"tex-formula\" src=\"http://cf.hustoj.com:80/userfiles/image/19df8b0440ca820710edadcda2050cae9793804929.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/>.</p></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}