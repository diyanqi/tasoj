{"title": "Barcode", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">C. Barcode</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>You've got an <span class=\"tex-span\"><i>n</i>&times;<i>m</i></span> pixel picture. Each pixel can be white or black. Your task is to change the colors of as few pixels as possible to obtain a barcode picture.</p><p>A picture is a barcode if the following conditions are fulfilled: </p><ul> <li> All pixels in each column are of the same color. </li><li> The width of each monochrome vertical line is at least <span class=\"tex-span\"><i>x</i></span> and at most <span class=\"tex-span\"><i>y</i></span> pixels. In other words, if we group all neighbouring columns of the pixels with equal color, the size of each group can not be less than <span class=\"tex-span\"><i>x</i></span> or greater than <span class=\"tex-span\"><i>y</i></span>. </li></ul></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains four space-separated integers <span class=\"tex-span\"><i>n</i></span>, <span class=\"tex-span\"><i>m</i></span>, <span class=\"tex-span\"><i>x</i></span> and <span class=\"tex-span\"><i>y</i></span> (<span class=\"tex-span\">1&le;<i>n</i>,<i>m</i>,<i>x</i>,<i>y</i>&le;1000;<i>x</i>&le;<i>y</i></span>).</p><p>Then follow <span class=\"tex-span\"><i>n</i></span> lines, describing the original image. Each of these lines contains exactly <span class=\"tex-span\"><i>m</i></span> characters. Character \"<span class=\"tex-font-style-tt\">.</span>\" represents a white pixel and \"<span class=\"tex-font-style-tt\">#</span>\" represents a black pixel. The picture description doesn't have any other characters besides \"<span class=\"tex-font-style-tt\">.</span>\" and \"<span class=\"tex-font-style-tt\">#</span>\".</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>In the first line print the minimum number of pixels to repaint. It is guaranteed that the answer exists. </p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>6 5 1 2<br/>##.#.<br/>.###.<br/>###..<br/>#...#<br/>.##.#<br/>###..<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>11<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>2 5 1 1<br/>#####<br/>.....<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>5<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>In the first test sample the picture after changing some colors can looks as follows: </p><center> <pre><br/>.##..<br/>.##..<br/>.##..<br/>.##..<br/>.##..<br/>.##..<br/></pre> </center><p>In the second test sample the picture after changing some colors can looks as follows: </p><center> <pre><br/>.#.#.<br/>.#.#.<br/></pre> </center></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}