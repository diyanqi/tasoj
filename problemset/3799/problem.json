{"title": "Blackboard Fibonacci", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">B. Blackboard Fibonacci</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>1 second</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Fibonacci numbers are the sequence of integers: <span class=\"tex-span\"><i>f</i><sub class=\"lower-index\">0</sub>=0</span>, <span class=\"tex-span\"><i>f</i><sub class=\"lower-index\">1</sub>=1</span>, <span class=\"tex-span\"><i>f</i><sub class=\"lower-index\">2</sub>=1</span>, <span class=\"tex-span\"><i>f</i><sub class=\"lower-index\">3</sub>=2</span>, <span class=\"tex-span\"><i>f</i><sub class=\"lower-index\">4</sub>=3</span>, <span class=\"tex-span\"><i>f</i><sub class=\"lower-index\">5</sub>=5</span>, <span class=\"tex-span\">...</span>, <span class=\"tex-span\"><i>f</i><sub class=\"lower-index\"><i>n</i></sub>=<i>f</i><sub class=\"lower-index\"><i>n</i>-2</sub>+<i>f</i><sub class=\"lower-index\"><i>n</i>-1</sub></span>. So every next number is the sum of the previous two.</p><p>Bajtek has developed a nice way to compute Fibonacci numbers on a blackboard. First, he writes a 0. Then, below it, he writes a 1. Then he performs the following two operations:</p><ul> <li> operation \"<span class=\"tex-font-style-tt\">T</span>\": replace the top number with the sum of both numbers; </li><li> operation \"<span class=\"tex-font-style-tt\">B</span>\": replace the bottom number with the sum of both numbers. </li></ul><p>If he performs <span class=\"tex-span\"><i>n</i></span> operations, starting with \"<span class=\"tex-font-style-tt\">T</span>\" and then choosing operations alternately (so that the sequence of operations looks like \"<span class=\"tex-font-style-tt\">TBTBTBTB</span><span class=\"tex-span\">...</span>\"), the last number written will be equal to <span class=\"tex-span\"><i>f</i><sub class=\"lower-index\"><i>n</i>+1</sub></span>.</p><p>Unfortunately, Bajtek sometimes makes mistakes and repeats an operation two or more times in a row. For example, if Bajtek wanted to compute <span class=\"tex-span\"><i>f</i><sub class=\"lower-index\">7</sub></span>, then he would want to do <span class=\"tex-span\"><i>n</i>=6</span> operations: \"<span class=\"tex-font-style-tt\">TBTBTB</span>\". If he instead performs the sequence of operations \"<span class=\"tex-font-style-tt\">TTTBBT</span>\", then he will have made 3 mistakes, and he will incorrectly compute that the seventh Fibonacci number is 10. The number of mistakes in the sequence of operations is the number of neighbouring equal operations (&laquo;<span class=\"tex-font-style-tt\">TT</span>&raquo; or &laquo;<span class=\"tex-font-style-tt\">BB</span>&raquo;).</p><p>You are given the number <span class=\"tex-span\"><i>n</i></span> of operations that Bajtek has made in an attempt to compute <span class=\"tex-span\"><i>f</i><sub class=\"lower-index\"><i>n</i>+1</sub></span> and the number <span class=\"tex-span\"><i>r</i></span> that is the result of his computations (that is last written number). Find the minimum possible number of mistakes that Bajtek must have made and any possible sequence of <span class=\"tex-span\"><i>n</i></span> operations resulting in <span class=\"tex-span\"><i>r</i></span> with that number of mistakes.</p><p>Assume that Bajtek always correctly starts with operation \"<span class=\"tex-font-style-tt\">T</span>\".</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains the integers <span class=\"tex-span\"><i>n</i></span> and <span class=\"tex-span\"><i>r</i></span> (<span class=\"tex-span\">1&le;<i>n</i>,<i>r</i>&le;10<sup class=\"upper-index\">6</sup>)</span>.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>The first line of the output should contain one number &minus; the minimum possible number of mistakes made by Bajtek. The second line should contain <span class=\"tex-span\"><i>n</i></span> characters, starting with \"<span class=\"tex-font-style-tt\">T</span>\", describing one possible sequence of operations with that number of mistakes. Each character must be either \"<span class=\"tex-font-style-tt\">T</span>\" or \"<span class=\"tex-font-style-tt\">B</span>\".</p><p>If the required sequence doesn't exist, output \"<span class=\"tex-font-style-tt\">IMPOSSIBLE</span>\" (without quotes).</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>6 10<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>2<br/>TBBTTB<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>4 5<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>0<br/>TBTB<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>2 1<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>IMPOSSIBLE<br/></pre></div></div></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 1000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}