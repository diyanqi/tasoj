{"title": "Furukawa Nagisa's Tree", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">E. Furukawa Nagisa's Tree</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>512 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>One day, Okazaki Tomoya has bought a tree for Furukawa Nagisa's birthday. The tree is so strange that every node of the tree has a value. The value of the <span class=\"tex-span\"><i>i</i></span>-th node is <span class=\"tex-span\"><i>v</i><sub class=\"lower-index\"><i>i</i></sub></span>. Now Furukawa Nagisa and Okazaki Tomoya want to play a game on the tree.</p><p>Let <span class=\"tex-span\">(<i>s</i>,<i>e</i>)</span> be the path from node <span class=\"tex-span\"><i>s</i></span> to node <span class=\"tex-span\"><i>e</i></span>, we can write down the sequence of the values of nodes on path <span class=\"tex-span\">(<i>s</i>,<i>e</i>)</span>, and denote this sequence as <span class=\"tex-span\"><i>S</i>(<i>s</i>,<i>e</i>)</span>. We define the value of the sequence <span class=\"tex-span\"><i>G</i>(<i>S</i>(<i>s</i>,<i>e</i>))</span> as follows. Suppose that the sequence is <span class=\"tex-span\"><i>z</i><sub class=\"lower-index\">0</sub>,<i>z</i><sub class=\"lower-index\">1</sub>...<i>z</i><sub class=\"lower-index\"><i>l</i>-1</sub></span>, where <span class=\"tex-span\"><i>l</i></span> is the length of the sequence. We define <span class=\"tex-span\"><i>G</i>(<i>S</i>(<i>s</i>,<i>e</i>))=<i>z</i><sub class=\"lower-index\">0</sub>&times;<i>k</i><sup class=\"upper-index\">0</sup>+<i>z</i><sub class=\"lower-index\">1</sub>&times;<i>k</i><sup class=\"upper-index\">1</sup>+...+<i>z</i><sub class=\"lower-index\"><i>l</i>-1</sub>&times;<i>k</i><sup class=\"upper-index\"><i>l</i>-1</sup></span>. If the path <span class=\"tex-span\">(<i>s</i>,<i>e</i>)</span> satisfies <img align=\"middle\" class=\"tex-formula\" src=\"http://cf.hustoj.com:80/userfiles/image/25df56b247ace7813230c944516460828309bb089.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/>, then the path <span class=\"tex-span\">(<i>s</i>,<i>e</i>)</span> belongs to Furukawa Nagisa, otherwise it belongs to Okazaki Tomoya.</p><p>Calculating who has more paths is too easy, so they want to play something more difficult. Furukawa Nagisa thinks that if paths <span class=\"tex-span\">(<i>p</i><sub class=\"lower-index\">1</sub>,<i>p</i><sub class=\"lower-index\">2</sub>)</span> and <span class=\"tex-span\">(<i>p</i><sub class=\"lower-index\">2</sub>,<i>p</i><sub class=\"lower-index\">3</sub>)</span> belong to her, then path <span class=\"tex-span\">(<i>p</i><sub class=\"lower-index\">1</sub>,<i>p</i><sub class=\"lower-index\">3</sub>)</span> belongs to her as well. Also, she thinks that if paths <span class=\"tex-span\">(<i>p</i><sub class=\"lower-index\">1</sub>,<i>p</i><sub class=\"lower-index\">2</sub>)</span> and <span class=\"tex-span\">(<i>p</i><sub class=\"lower-index\">2</sub>,<i>p</i><sub class=\"lower-index\">3</sub>)</span> belong to Okazaki Tomoya, then path <span class=\"tex-span\">(<i>p</i><sub class=\"lower-index\">1</sub>,<i>p</i><sub class=\"lower-index\">3</sub>)</span> belongs to Okazaki Tomoya as well. But in fact, this conclusion isn't always right. So now Furukawa Nagisa wants to know how many triplets <span class=\"tex-span\">(<i>p</i><sub class=\"lower-index\">1</sub>,<i>p</i><sub class=\"lower-index\">2</sub>,<i>p</i><sub class=\"lower-index\">3</sub>)</span> are correct for the conclusion, and this is your task.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains four integers <span class=\"tex-span\"><i>n</i></span>, <span class=\"tex-span\"><i>y</i></span>, <span class=\"tex-span\"><i>k</i></span> and <span class=\"tex-span\"><i>x</i>(1&le;<i>n</i>&le;10<sup class=\"upper-index\">5</sup>;2&le;<i>y</i>&le;10<sup class=\"upper-index\">9</sup>;1&le;<i>k</i>&lt;<i>y</i>;0&le;<i>x</i>&lt;<i>y</i>)</span> &minus; <span class=\"tex-span\"><i>n</i></span> being the number of nodes on the tree. It is guaranteed that <span class=\"tex-span\"><i>y</i></span> is a prime number.</p><p>The second line contains <span class=\"tex-span\"><i>n</i></span> integers, the <span class=\"tex-span\"><i>i</i></span>-th integer is <span class=\"tex-span\"><i>v</i><sub class=\"lower-index\"><i>i</i></sub>(0&le;<i>v</i><sub class=\"lower-index\"><i>i</i></sub>&lt;<i>y</i>)</span>.</p><p>Then follow <span class=\"tex-span\"><i>n</i>-1</span> lines, each line contains two integers, denoting an edge of the tree. The nodes of the tree are numbered from 1 to <span class=\"tex-span\"><i>n</i></span>.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Output a single integer &minus; the number of triplets that are correct for Furukawa Nagisa's conclusion.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>1 2 1 0<br/>1<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>1<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>3 5 2 1<br/>4 3 1<br/>1 2<br/>2 3<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>14<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>8 13 8 12<br/>0 12 7 4 12 0 8 12<br/>1 8<br/>8 4<br/>4 6<br/>6 2<br/>2 3<br/>8 5<br/>2 7<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>341<br/></pre></div></div></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 512, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}