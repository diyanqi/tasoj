{"title": "Fibonacci Strings", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">G1. Fibonacci Strings</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Fibonacci strings are defined as follows: </p><ul> <li> <span class=\"tex-span\"><i>f</i><sub class=\"lower-index\">1</sub></span> = &laquo;<span class=\"tex-font-style-tt\">a</span>&raquo; </li><li> <span class=\"tex-span\"><i>f</i><sub class=\"lower-index\">2</sub></span> = &laquo;<span class=\"tex-font-style-tt\">b</span>&raquo; </li><li> <span class=\"tex-span\"><i>f</i><sub class=\"lower-index\"><i>n</i></sub></span> = <span class=\"tex-span\"><i>f</i><sub class=\"lower-index\"><i>n</i>-1</sub><i>f</i><sub class=\"lower-index\"><i>n</i>-2</sub></span>, <span class=\"tex-span\"><i>n</i>&gt;2</span> </li></ul><p>Thus, the first five Fibonacci strings are: \"<span class=\"tex-font-style-tt\">a</span>\", \"<span class=\"tex-font-style-tt\">b</span>\", \"<span class=\"tex-font-style-tt\">ba</span>\", \"<span class=\"tex-font-style-tt\">bab</span>\", \"<span class=\"tex-font-style-tt\">babba</span>\".</p><p>You are given a Fibonacci string and <span class=\"tex-span\"><i>m</i></span> strings <span class=\"tex-span\"><i>s</i><sub class=\"lower-index\"><i>i</i></sub></span>. For each string <span class=\"tex-span\"><i>s</i><sub class=\"lower-index\"><i>i</i></sub></span>, find the number of times it occurs in the given Fibonacci string as a substring.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains two space-separated integers <span class=\"tex-span\"><i>k</i></span> and <span class=\"tex-span\"><i>m</i></span> &minus; the number of a Fibonacci string and the number of queries, correspondingly.</p><p>Next <span class=\"tex-span\"><i>m</i></span> lines contain strings <span class=\"tex-span\"><i>s</i><sub class=\"lower-index\"><i>i</i></sub></span> that correspond to the queries. It is guaranteed that strings <span class=\"tex-span\"><i>s</i><sub class=\"lower-index\"><i>i</i></sub></span> aren't empty and consist only of characters \"<span class=\"tex-font-style-tt\">a</span>\" and \"<span class=\"tex-font-style-tt\">b</span>\".</p><p>The input limitations for getting 30 points are: </p><ul> <li> <span class=\"tex-span\">1&le;<i>k</i>&le;3000</span> </li><li> <span class=\"tex-span\">1&le;<i>m</i>&le;3000</span> </li><li> The total length of strings <span class=\"tex-span\"><i>s</i><sub class=\"lower-index\"><i>i</i></sub></span> doesn't exceed <span class=\"tex-span\">3000</span> </li></ul> <p>The input limitations for getting 100 points are: </p><ul> <li> <span class=\"tex-span\">1&le;<i>k</i>&le;10<sup class=\"upper-index\">18</sup></span> </li><li> <span class=\"tex-span\">1&le;<i>m</i>&le;10<sup class=\"upper-index\">4</sup></span> </li><li> The total length of strings <span class=\"tex-span\"><i>s</i><sub class=\"lower-index\"><i>i</i></sub></span> doesn't exceed <span class=\"tex-span\">10<sup class=\"upper-index\">5</sup></span> </li></ul> <p>Please do not use the <span class=\"tex-font-style-tt\">%lld</span> specifier to read or write 64-bit integers in C++. It is preferred to use <span class=\"tex-font-style-tt\">cin</span>, <span class=\"tex-font-style-tt\">cout</span> streams or the <span class=\"tex-font-style-tt\">%I64d</span> specifier.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>For each string <span class=\"tex-span\"><i>s</i><sub class=\"lower-index\"><i>i</i></sub></span> print the number of times it occurs in the given Fibonacci string as a substring. Since the numbers can be large enough, print them modulo <span class=\"tex-span\">1000000007</span> <span class=\"tex-span\">(10<sup class=\"upper-index\">9</sup>+7)</span>. Print the answers for the strings in the order in which they are given in the input.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>6 5<br/>a<br/>b<br/>ab<br/>ba<br/>aba<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>3<br/>5<br/>3<br/>3<br/>1<br/></pre></div></div></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}