{"title": "Block Towers", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">C. Block Towers</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Students in a class are making towers of blocks. Each student makes a (non-zero) tower by stacking pieces lengthwise on top of each other. <span class=\"tex-span\"><i>n</i></span> of the students use pieces made of two blocks and <span class=\"tex-span\"><i>m</i></span> of the students use pieces made of three blocks.</p><p>The students don&rsquo;t want to use too many blocks, but they also want to be unique, so no two students&rsquo; towers may contain the same number of blocks. Find the minimum height necessary for the tallest of the students' towers.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line of the input contains two space-separated integers <span class=\"tex-span\"><i>n</i></span> and <span class=\"tex-span\"><i>m</i></span> (<span class=\"tex-span\">0&le;<i>n</i>,<i>m</i>&le;1000000</span>, <span class=\"tex-span\"><i>n</i>+<i>m</i>&gt;0</span>)&minus; the number of students using two-block pieces and the number of students using three-block pieces, respectively.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print a single integer, denoting the minimum possible height of the tallest tower.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>1 3<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>9<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>3 2<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>8<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>5 0<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>10<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>In the first case, the student using two-block pieces can make a tower of height <span class=\"tex-span\">4</span>, and the students using three-block pieces can make towers of height <span class=\"tex-span\">3</span>, <span class=\"tex-span\">6</span>, and <span class=\"tex-span\">9</span> blocks. The tallest tower has a height of <span class=\"tex-span\">9</span> blocks.</p><p>In the second case, the students can make towers of heights <span class=\"tex-span\">2</span>, <span class=\"tex-span\">4</span>, and <span class=\"tex-span\">8</span> with two-block pieces and towers of heights <span class=\"tex-span\">3</span> and <span class=\"tex-span\">6</span> with three-block pieces, for a maximum height of <span class=\"tex-span\">8</span> blocks.</p></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}