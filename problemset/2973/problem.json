{"title": "DZY Loves Hash", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">A. DZY Loves Hash</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>1 second</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>DZY has a hash table with <span class=\"tex-span\"><i>p</i></span> buckets, numbered from <span class=\"tex-span\">0</span> to <span class=\"tex-span\"><i>p</i>-1</span>. He wants to insert <span class=\"tex-span\"><i>n</i></span> numbers, in the order they are given, into the hash table. For the <span class=\"tex-span\"><i>i</i></span>-th number <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\"><i>i</i></sub></span>, DZY will put it into the bucket numbered <span class=\"tex-span\"><i>h</i>(<i>x</i><sub class=\"lower-index\"><i>i</i></sub>)</span>, where <span class=\"tex-span\"><i>h</i>(<i>x</i>)</span> is the hash function. In this problem we will assume, that <span class=\"tex-span\"><i>h</i>(<i>x</i>)=<i>x</i><i>mod</i><i>p</i></span>. Operation <span class=\"tex-span\"><i>a</i><i>mod</i><i>b</i></span> denotes taking a remainder after division <span class=\"tex-span\"><i>a</i></span> by <span class=\"tex-span\"><i>b</i></span>.</p><p>However, each bucket can contain no more than one element. If DZY wants to insert an number into a bucket which is already filled, we say a \"conflict\" happens. Suppose the first conflict happens right after the <span class=\"tex-span\"><i>i</i></span>-th insertion, you should output <span class=\"tex-span\"><i>i</i></span>. If no conflict happens, just output <span class=\"tex-font-style-tt\">-1</span>.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains two integers, <span class=\"tex-span\"><i>p</i></span> and <span class=\"tex-span\"><i>n</i></span> <span class=\"tex-span\">(2&le;<i>p</i>,<i>n</i>&le;300)</span>. Then <span class=\"tex-span\"><i>n</i></span> lines follow. The <span class=\"tex-span\"><i>i</i></span>-th of them contains an integer <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\"><i>i</i></sub></span> <span class=\"tex-span\">(0&le;<i>x</i><sub class=\"lower-index\"><i>i</i></sub>&le;10<sup class=\"upper-index\">9</sup>)</span>.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Output a single integer &minus; the answer to the problem.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>10 5<br/>0<br/>21<br/>53<br/>41<br/>53<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>4<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>5 5<br/>0<br/>1<br/>2<br/>3<br/>4<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>-1<br/></pre></div></div></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 1000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}