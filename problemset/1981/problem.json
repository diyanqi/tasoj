{"title": "Sonya Partymaker", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">E. Sonya Partymaker</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>1.5 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Owl Sonya decided to become a partymaker. To train for this role she gather all her owl friends in the country house. There are <span class=\"tex-span\"><i>m</i></span> chairs located in a circle and consequently numbered with integers from <span class=\"tex-span\">1</span> to <span class=\"tex-span\"><i>m</i></span>. Thus, chairs <span class=\"tex-span\"><i>i</i></span> and <span class=\"tex-span\"><i>i</i>+1</span> are neighbouring for all <span class=\"tex-span\"><i>i</i></span> from <span class=\"tex-span\">1</span> to <span class=\"tex-span\"><i>m</i>-1</span>. Chairs <span class=\"tex-span\">1</span> and <span class=\"tex-span\"><i>m</i></span> are also neighbouring. Some chairs are occupied by her friends. There are <span class=\"tex-span\"><i>n</i></span> friends in total. No two friends occupy the same chair. Rules are the following:</p><ol> <li> Each participant removes from the game the chair he is currently sitting on. </li><li> Each of the participants choose a direction that she will follow: clockwise (indices increase, from <span class=\"tex-span\"><i>m</i></span> goes to <span class=\"tex-span\">1</span>) and counter-clockwise (indices decrease, from <span class=\"tex-span\">1</span> goes to <span class=\"tex-span\"><i>m</i></span>). This direction may coincide or be different for any pair of owls. </li><li> Each turn all guests move one step in the chosen directions. If some guest move to the position with a chair there, he removes this chair from the game. </li><li> Game ends if there are no more chairs left in the game. </li></ol><p>Owls are very busy and want to get rid of the game as soon as possible. They cooperate to pick the direction. Your goal is to find the minimum number o moves required to finish the game.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line of the input contains a single integer <span class=\"tex-span\"><i>m</i></span> (<span class=\"tex-span\">1&le;<i>m</i>&le;10<sup class=\"upper-index\">9</sup></span>)&minus; the length of the circle.</p><p>The second line contains a single integer <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">1&le;<i>n</i>&le;100000</span>)&minus; the number of friends.</p><p>Last line contains an increasing sequence of <span class=\"tex-span\"><i>n</i></span> integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> (<span class=\"tex-span\">1&le;<i>a</i><sub class=\"lower-index\"><i>i</i></sub>&le;<i>m</i></span>)&minus; initial positions of all owls.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print the minimum number of move required to finish the game. Note, that <span class=\"tex-span\">0</span> also may be an answer.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>6<br/>3<br/>1 3 5<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>1<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>6<br/>2<br/>1 6<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>2<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>406<br/>6<br/>1 2 3 204 205 206<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>100<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>In the first sample, it's possible if all owls will move clockwise, i.e. in the direction of increasing indices.</p><p>In the sample, first owl has to move clockwise, while the second&minus; counterclockwise.</p><p>In the third sample, the first and the fourth owls should move counterclockwise, while the third and the sixth&minus; clockwise. The second and the firth may move in any direction.</p></div></div><p> </p></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 1500, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}