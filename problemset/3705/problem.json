{"title": "The Brand New Function", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">A. The Brand New Function</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Polycarpus has a sequence, consisting of <span class=\"tex-span\"><i>n</i></span> non-negative integers: <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">1</sub>,<i>a</i><sub class=\"lower-index\">2</sub>,...,<i>a</i><sub class=\"lower-index\"><i>n</i></sub></span>.</p><p>Let's define function <span class=\"tex-span\"><i>f</i>(<i>l</i>,<i>r</i>)</span> (<span class=\"tex-span\"><i>l</i>,<i>r</i></span> are integer, <span class=\"tex-span\">1&le;<i>l</i>&le;<i>r</i>&le;<i>n</i></span>) for sequence <span class=\"tex-span\"><i>a</i></span> as an operation of bitwise OR of all the sequence elements with indexes from <span class=\"tex-span\"><i>l</i></span> to <span class=\"tex-span\"><i>r</i></span>. Formally: <span class=\"tex-span\"><i>f</i>(<i>l</i>,<i>r</i>)=<i>a</i><sub class=\"lower-index\"><i>l</i></sub>|<i>a</i><sub class=\"lower-index\"><i>l</i>+1</sub>|... |<i>a</i><sub class=\"lower-index\"><i>r</i></sub></span>. </p><p>Polycarpus took a piece of paper and wrote out the values of function <span class=\"tex-span\"><i>f</i>(<i>l</i>,<i>r</i>)</span> for all <span class=\"tex-span\"><i>l</i>,<i>r</i></span> (<span class=\"tex-span\"><i>l</i>,<i>r</i></span> are integer, <span class=\"tex-span\">1&le;<i>l</i>&le;<i>r</i>&le;<i>n</i></span>). Now he wants to know, how many <span class=\"tex-font-style-bf\">distinct</span> values he's got in the end. </p><p>Help Polycarpus, count the number of distinct values of function <span class=\"tex-span\"><i>f</i>(<i>l</i>,<i>r</i>)</span> for the given sequence <span class=\"tex-span\"><i>a</i></span>.</p><p>Expression <span class=\"tex-span\"><i>x</i>|<i>y</i></span> means applying the operation of bitwise OR to numbers <span class=\"tex-span\"><i>x</i></span> and <span class=\"tex-span\"><i>y</i></span>. This operation exists in all modern programming languages, for example, in language <span class=\"tex-font-style-it\">C++</span> and <span class=\"tex-font-style-it\">Java</span> it is marked as \"<span class=\"tex-font-style-tt\">|</span>\", in <span class=\"tex-font-style-it\">Pascal</span> &minus; as \"<span class=\"tex-font-style-tt\">or</span>\".</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains integer <span class=\"tex-span\"><i>n</i></span> <span class=\"tex-span\">(1&le;<i>n</i>&le;10<sup class=\"upper-index\">5</sup>)</span> &minus; the number of elements of sequence <span class=\"tex-span\"><i>a</i></span>. The second line contains <span class=\"tex-span\"><i>n</i></span> space-separated integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">1</sub>,<i>a</i><sub class=\"lower-index\">2</sub>,...,<i>a</i><sub class=\"lower-index\"><i>n</i></sub></span> <span class=\"tex-span\">(0&le;<i>a</i><sub class=\"lower-index\"><i>i</i></sub>&le;10<sup class=\"upper-index\">6</sup>)</span> &minus; the elements of sequence <span class=\"tex-span\"><i>a</i></span>.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print a single integer &minus; the number of distinct values of function <span class=\"tex-span\"><i>f</i>(<i>l</i>,<i>r</i>)</span> for the given sequence <span class=\"tex-span\"><i>a</i></span>.</p><p>Please, do not use the <span class=\"tex-font-style-tt\">%lld</span> specifier to read or write 64-bit integers in C++. It is preferred to use <span class=\"tex-font-style-tt\">cin</span>, <span class=\"tex-font-style-tt\">cout</span> streams or the <span class=\"tex-font-style-tt\">%I64d</span> specifier.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>3<br/>1 2 0<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>4</pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>10<br/>1 2 3 4 5 6 1 2 9 10<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>11</pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>In the first test case Polycarpus will have 6 numbers written on the paper: <span class=\"tex-span\"><i>f</i>(1,1)=1</span>, <span class=\"tex-span\"><i>f</i>(1,2)=3</span>, <span class=\"tex-span\"><i>f</i>(1,3)=3</span>, <span class=\"tex-span\"><i>f</i>(2,2)=2</span>, <span class=\"tex-span\"><i>f</i>(2,3)=2</span>, <span class=\"tex-span\"><i>f</i>(3,3)=0</span>. There are exactly <span class=\"tex-span\">4</span> distinct numbers among them: <span class=\"tex-span\">0,1,2,3</span>.</p></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}