{"title": "Big Number and Remainder", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">E. Big Number and Remainder</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>3 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Stepan has a very big positive integer.</p><p>Let's consider all cyclic shifts of Stepan's integer (if we look at his integer like at a string) which are also integers (i.e. they <span class=\"tex-font-style-bf\">do not have</span> leading zeros). Let's call such shifts as <span class=\"tex-font-style-it\">good shifts</span>. For example, for the integer <span class=\"tex-span\">10203</span> the good shifts are the integer itself <span class=\"tex-span\">10203</span> and integers <span class=\"tex-span\">20310</span> and <span class=\"tex-span\">31020</span>.</p><p>Stepan wants to know the minimum remainder of the division by the given number <span class=\"tex-span\"><i>m</i></span> among all good shifts. Your task is to determine the minimum remainder of the division by <span class=\"tex-span\"><i>m</i></span>.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains the integer which Stepan has. The length of Stepan's integer is between <span class=\"tex-span\">2</span> and <span class=\"tex-span\">200000</span> digits, inclusive. It is guaranteed that Stepan's integer does not contain leading zeros.</p><p>The second line contains the integer <span class=\"tex-span\"><i>m</i></span> (<span class=\"tex-span\">2&le;<i>m</i>&le;10<sup class=\"upper-index\">8</sup></span>) &minus; the number by which Stepan divides good shifts of his integer.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print the minimum remainder which Stepan can get if he divides all good shifts of his integer by the given number <span class=\"tex-span\"><i>m</i></span>.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>521<br/>3<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>2<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>1001<br/>5<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>0<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>5678901234567890123456789<br/>10000<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>123<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>In the first example all good shifts of the integer <span class=\"tex-span\">521</span> (good shifts are equal to <span class=\"tex-span\">521</span>, <span class=\"tex-span\">215</span> and <span class=\"tex-span\">152</span>) has same remainder <span class=\"tex-span\">2</span> when dividing by <span class=\"tex-span\">3</span>.</p><p>In the second example there are only two good shifts: the Stepan's integer itself and the shift by one position to the right. The integer itself is <span class=\"tex-span\">1001</span> and the remainder after dividing it by <span class=\"tex-span\">5</span> equals <span class=\"tex-span\">1</span>. The shift by one position to the right equals to <span class=\"tex-span\">1100</span> and the remainder after dividing it by <span class=\"tex-span\">5</span> equals <span class=\"tex-span\">0</span>, which is the minimum possible remainder.</p></div></div><p> </p></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 3000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}