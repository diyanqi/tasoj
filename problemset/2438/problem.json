{"title": "Happy Tree Party", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">D. Happy Tree Party</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>3 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Bogdan has a birthday today and mom gave him a tree consisting of <span class=\"tex-span\"><i>n</i></span> vertecies. For every edge of the tree <span class=\"tex-span\"><i>i</i></span>, some number <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\"><i>i</i></sub></span> was written on it. In case you forget, a tree is a connected non-directed graph without cycles. After the present was granted, <span class=\"tex-span\"><i>m</i></span> guests consecutively come to Bogdan's party. When the <span class=\"tex-span\"><i>i</i></span>-th guest comes, he performs exactly one of the two possible operations: </p><ol> <li> Chooses some number <span class=\"tex-span\"><i>y</i><sub class=\"lower-index\"><i>i</i></sub></span>, and two vertecies <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> and <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\"><i>i</i></sub></span>. After that, he moves along the edges of the tree from vertex <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> to vertex <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\"><i>i</i></sub></span> using the shortest path (of course, such a path is unique in the tree). Every time he moves along some edge <span class=\"tex-span\"><i>j</i></span>, he replaces his current number <span class=\"tex-span\"><i>y</i><sub class=\"lower-index\"><i>i</i></sub></span> by <img align=\"middle\" class=\"tex-formula\" src=\"http://cf.hustoj.com:80/userfiles/image/f538ffde51f1b7e9216d25f214dc741cbea2d51c27.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/>, that is, by the result of integer division <span class=\"tex-span\"><i>y</i><sub class=\"lower-index\"><i>i</i></sub></span> div <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\"><i>j</i></sub></span>. </li><li> Chooses some edge <span class=\"tex-span\"><i>p</i><sub class=\"lower-index\"><i>i</i></sub></span> and replaces the value written in it <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\"><i>p</i><sub class=\"lower-index\"><i>i</i></sub></sub></span> by some positive integer <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\"><i>i</i></sub>&lt;<i>x</i><sub class=\"lower-index\"><i>p</i><sub class=\"lower-index\"><i>i</i></sub></sub></span>. </li></ol><p>As Bogdan cares about his guests, he decided to ease the process. Write a program that performs all the operations requested by guests and outputs the resulting value <span class=\"tex-span\"><i>y</i><sub class=\"lower-index\"><i>i</i></sub></span> for each <span class=\"tex-span\"><i>i</i></span> of the first type.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line of the input contains integers, <span class=\"tex-span\"><i>n</i></span> and <span class=\"tex-span\"><i>m</i></span> (<span class=\"tex-span\">2&le;<i>n</i>&le;200000</span>, <span class=\"tex-span\">1&le;<i>m</i>&le;200000</span>)&minus; the number of vertecies in the tree granted to Bogdan by his mom and the number of guests that came to the party respectively.</p><p>Next <span class=\"tex-span\"><i>n</i>-1</span> lines contain the description of the edges. The <span class=\"tex-span\"><i>i</i></span>-th of these lines contains three integers <span class=\"tex-span\"><i>u</i><sub class=\"lower-index\"><i>i</i></sub></span>, <span class=\"tex-span\"><i>v</i><sub class=\"lower-index\"><i>i</i></sub></span> and <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\"><i>i</i></sub></span> (<span class=\"tex-span\">1&le;<i>u</i><sub class=\"lower-index\"><i>i</i></sub>,<i>v</i><sub class=\"lower-index\"><i>i</i></sub>&le;<i>n</i></span>, <span class=\"tex-span\"><i>u</i><sub class=\"lower-index\"><i>i</i></sub>&ne;<i>v</i><sub class=\"lower-index\"><i>i</i></sub></span>, <span class=\"tex-span\">1&le;<i>x</i><sub class=\"lower-index\"><i>i</i></sub>&le;10<sup class=\"upper-index\">18</sup></span>), denoting an edge that connects vertecies <span class=\"tex-span\"><i>u</i><sub class=\"lower-index\"><i>i</i></sub></span> and <span class=\"tex-span\"><i>v</i><sub class=\"lower-index\"><i>i</i></sub></span>, with the number <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\"><i>i</i></sub></span> initially written on it.</p><p>The following <span class=\"tex-span\"><i>m</i></span> lines describe operations, requested by Bogdan's guests. Each description contains three or four integers and has one of the two possible forms: </p><ul> <li> <span class=\"tex-span\">1</span> <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\"><i>i</i></sub></span> <span class=\"tex-span\"><i>y</i><sub class=\"lower-index\"><i>i</i></sub></span> corresponds to a guest, who chooses the operation of the first type. </li><li> <span class=\"tex-span\">2</span> <span class=\"tex-span\"><i>p</i><sub class=\"lower-index\"><i>i</i></sub></span> <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\"><i>i</i></sub></span> corresponds to a guests, who chooses the operation of the second type. </li></ul> It is guaranteed that all the queries are correct, namely <span class=\"tex-span\">1&le;<i>a</i><sub class=\"lower-index\"><i>i</i></sub>,<i>b</i><sub class=\"lower-index\"><i>i</i></sub>&le;<i>n</i></span>, <span class=\"tex-span\">1&le;<i>p</i><sub class=\"lower-index\"><i>i</i></sub>&le;<i>n</i>-1</span>, <span class=\"tex-span\">1&le;<i>y</i><sub class=\"lower-index\"><i>i</i></sub>&le;10<sup class=\"upper-index\">18</sup></span> and <span class=\"tex-span\">1&le;<i>c</i><sub class=\"lower-index\"><i>i</i></sub>&lt;<i>x</i><sub class=\"lower-index\"><i>p</i><sub class=\"lower-index\"><i>i</i></sub></sub></span>, where <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\"><i>p</i><sub class=\"lower-index\"><i>i</i></sub></sub></span> represents a number written on edge <span class=\"tex-span\"><i>p</i><sub class=\"lower-index\"><i>i</i></sub></span> at this particular moment of time that is not necessarily equal to the initial value <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\"><i>p</i><sub class=\"lower-index\"><i>i</i></sub></sub></span>, as some decreases may have already been applied to it. The edges are numbered from <span class=\"tex-span\">1</span> to <span class=\"tex-span\"><i>n</i>-1</span> in the order they appear in the input.</div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>For each guest who chooses the operation of the first type, print the result of processing the value <span class=\"tex-span\"><i>y</i><sub class=\"lower-index\"><i>i</i></sub></span> through the path from <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> to <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\"><i>i</i></sub></span>.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>6 6<br/>1 2 1<br/>1 3 7<br/>1 4 4<br/>2 5 5<br/>2 6 2<br/>1 4 6 17<br/>2 3 2<br/>1 4 6 17<br/>1 5 5 20<br/>2 4 1<br/>1 5 1 3<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>2<br/>4<br/>20<br/>3<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>5 4<br/>1 2 7<br/>1 3 3<br/>3 4 2<br/>3 5 5<br/>1 4 2 100<br/>1 5 4 1<br/>2 2 2<br/>1 1 3 4<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>2<br/>0<br/>2<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><center><p>Initially the tree looks like this: </p><center> <img class=\"tex-graphics\" src=\"http://cf.hustoj.com:80/userfiles/image/0efa2364a302db4e7ad3ade990c7e98d9444d02d27.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> <p>The response to the first query is: <img align=\"middle\" class=\"tex-formula\" src=\"http://cf.hustoj.com:80/userfiles/image/7915d66c9d6cc9b869d41564a2d9d191d2a2ad2f27.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> = 2</p><p>After the third edge is changed, the tree looks like this: </p><center> <img class=\"tex-graphics\" src=\"http://cf.hustoj.com:80/userfiles/image/f88fe3264384d83f3686bb5cac44b47af834dc9627.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> <p>The response to the second query is: <img align=\"middle\" class=\"tex-formula\" src=\"http://cf.hustoj.com:80/userfiles/image/b8f5e70f493e116350b37ea973ae916a1c43d50b27.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> = 4</p><p>In the third query the initial and final vertex coincide, that is, the answer will be the initial number 20.</p><p>After the change in the fourth edge the tree looks like this: </p><center> <img class=\"tex-graphics\" src=\"http://cf.hustoj.com:80/userfiles/image/e656db9a7c1d0be7078afb29d991ad63e6612a1327.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> <p>In the last query the answer will be: <img align=\"middle\" class=\"tex-formula\" src=\"http://cf.hustoj.com:80/userfiles/image/457d7223b0bcde199a251d41e43c92d01d5ed0ab27.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> = 3</p></center></center></center></center></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 3000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}