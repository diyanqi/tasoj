{"title": "The same permutation", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">E. The same permutation </div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Seyyed and MoJaK are friends of Sajjad. Sajjad likes a permutation. Seyyed wants to change the permutation in a way that Sajjad won't like it. Seyyed thinks more swaps yield more probability to do that, so he makes MoJaK to perform a swap between every pair of positions <span class=\"tex-span\">(<i>i</i>,<i>j</i>)</span>, where <span class=\"tex-span\"><i>i</i>&lt;<i>j</i></span>, exactly once. MoJaK doesn't like to upset Sajjad.</p><p>Given the permutation, determine whether it is possible to swap all pairs of positions so that the permutation stays the same. If it is possible find how to do that. </p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains single integer <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">1&le;<i>n</i>&le;1000</span>)&minus; the size of the permutation.</p><p>As the permutation is not important, you can consider <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub>=<i>i</i></span>, where the permutation is <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">1</sub>,<i>a</i><sub class=\"lower-index\">2</sub>,...,<i>a</i><sub class=\"lower-index\"><i>n</i></sub></span>.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>If it is not possible to swap all pairs of positions so that the permutation stays the same, print \"<span class=\"tex-font-style-tt\">NO</span>\",</p><p>Otherwise print \"<span class=\"tex-font-style-tt\">YES</span>\", then print <img align=\"middle\" class=\"tex-formula\" src=\"http://cf.hustoj.com:80/userfiles/image/3180a33fa5d6fc9ced6f37180d95ed4545de80355050.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> lines: the <span class=\"tex-span\"><i>i</i></span>-th of these lines should contain two integers <span class=\"tex-span\"><i>a</i></span> and <span class=\"tex-span\"><i>b</i></span> (<span class=\"tex-span\"><i>a</i>&lt;<i>b</i></span>)&minus; the positions where the <span class=\"tex-span\"><i>i</i></span>-th swap is performed.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>3<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>NO<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>1<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>YES<br/></pre></div></div></div></div><p> </p></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}