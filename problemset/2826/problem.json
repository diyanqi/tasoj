{"title": "LIS of Sequence", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">E. LIS of Sequence</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>The next \"Data Structures and Algorithms\" lesson will be about Longest Increasing Subsequence (LIS for short) of a sequence. For better understanding, Nam decided to learn it a few days before the lesson.</p><p>Nam created a sequence <span class=\"tex-span\"><i>a</i></span> consisting of <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">1&le;<i>n</i>&le;10<sup class=\"upper-index\">5</sup></span>) elements <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">1</sub>,<i>a</i><sub class=\"lower-index\">2</sub>,...,<i>a</i><sub class=\"lower-index\"><i>n</i></sub></span> (<span class=\"tex-span\">1&le;<i>a</i><sub class=\"lower-index\"><i>i</i></sub>&le;10<sup class=\"upper-index\">5</sup></span>). A subsequence <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i><sub class=\"lower-index\">1</sub></sub>,<i>a</i><sub class=\"lower-index\"><i>i</i><sub class=\"lower-index\">2</sub></sub>,...,<i>a</i><sub class=\"lower-index\"><i>i</i><sub class=\"lower-index\"><i>k</i></sub></sub></span> where <span class=\"tex-span\">1&le;<i>i</i><sub class=\"lower-index\">1</sub>&lt;<i>i</i><sub class=\"lower-index\">2</sub>&lt;...&lt;<i>i</i><sub class=\"lower-index\"><i>k</i></sub>&le;<i>n</i></span> is called increasing if <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i><sub class=\"lower-index\">1</sub></sub>&lt;<i>a</i><sub class=\"lower-index\"><i>i</i><sub class=\"lower-index\">2</sub></sub>&lt;<i>a</i><sub class=\"lower-index\"><i>i</i><sub class=\"lower-index\">3</sub></sub>&lt;...&lt;<i>a</i><sub class=\"lower-index\"><i>i</i><sub class=\"lower-index\"><i>k</i></sub></sub></span>. An increasing subsequence is called longest if it has maximum length among all increasing subsequences. </p><p>Nam realizes that a sequence may have several longest increasing subsequences. Hence, he divides all indexes <span class=\"tex-span\"><i>i</i></span> (<span class=\"tex-span\">1&le;<i>i</i>&le;<i>n</i></span>), into three groups:</p><ol><li> group of all <span class=\"tex-span\"><i>i</i></span> such that <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> belongs to no longest increasing subsequences.</li><li> group of all <span class=\"tex-span\"><i>i</i></span> such that <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> belongs to at least one <span class=\"tex-font-style-bf\">but not every</span> longest increasing subsequence.</li><li> group of all <span class=\"tex-span\"><i>i</i></span> such that <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> belongs to every longest increasing subsequence. </li></ol><p>Since the number of longest increasing subsequences of <span class=\"tex-span\"><i>a</i></span> may be very large, categorizing process is very difficult. Your task is to help him finish this job.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains the single integer <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">1&le;<i>n</i>&le;10<sup class=\"upper-index\">5</sup></span>) denoting the number of elements of sequence <span class=\"tex-span\"><i>a</i></span>.</p><p>The second line contains <span class=\"tex-span\"><i>n</i></span> space-separated integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">1</sub>,<i>a</i><sub class=\"lower-index\">2</sub>,...,<i>a</i><sub class=\"lower-index\"><i>n</i></sub></span> (<span class=\"tex-span\">1&le;<i>a</i><sub class=\"lower-index\"><i>i</i></sub>&le;10<sup class=\"upper-index\">5</sup></span>).</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print a string consisting of <span class=\"tex-span\"><i>n</i></span> characters. <span class=\"tex-span\"><i>i</i></span>-th character should be '<span class=\"tex-font-style-tt\">1</span>', '<span class=\"tex-font-style-tt\">2</span>' or '<span class=\"tex-font-style-tt\">3</span>' depending on which group among listed above index <span class=\"tex-span\"><i>i</i></span> belongs to.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>1<br/>4<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>3<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>4<br/>1 3 2 5<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>3223<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>4<br/>1 5 2 3<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>3133<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>In the second sample, sequence <span class=\"tex-span\"><i>a</i></span> consists of 4 elements: <span class=\"tex-span\">{<i>a</i><sub class=\"lower-index\">1</sub>,<i>a</i><sub class=\"lower-index\">2</sub>,<i>a</i><sub class=\"lower-index\">3</sub>,<i>a</i><sub class=\"lower-index\">4</sub>}</span> = <span class=\"tex-span\">{1,3,2,5}</span>. Sequence <span class=\"tex-span\"><i>a</i></span> has exactly 2 longest increasing subsequences of length 3, they are <span class=\"tex-span\">{<i>a</i><sub class=\"lower-index\">1</sub>,<i>a</i><sub class=\"lower-index\">2</sub>,<i>a</i><sub class=\"lower-index\">4</sub>}</span> = <span class=\"tex-span\">{1,3,5}</span> and <span class=\"tex-span\">{<i>a</i><sub class=\"lower-index\">1</sub>,<i>a</i><sub class=\"lower-index\">3</sub>,<i>a</i><sub class=\"lower-index\">4</sub>}</span> = <span class=\"tex-span\">{1,2,5}</span>.</p><p>In the third sample, sequence <span class=\"tex-span\"><i>a</i></span> consists of 4 elements: <span class=\"tex-span\">{<i>a</i><sub class=\"lower-index\">1</sub>,<i>a</i><sub class=\"lower-index\">2</sub>,<i>a</i><sub class=\"lower-index\">3</sub>,<i>a</i><sub class=\"lower-index\">4</sub>}</span> = <span class=\"tex-span\">{1,5,2,3}</span>. Sequence <span class=\"tex-span\"><i>a</i></span> have exactly 1 longest increasing subsequence of length 3, that is <span class=\"tex-span\">{<i>a</i><sub class=\"lower-index\">1</sub>,<i>a</i><sub class=\"lower-index\">3</sub>,<i>a</i><sub class=\"lower-index\">4</sub>}</span> = <span class=\"tex-span\">{1,2,3}</span>.</p></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}