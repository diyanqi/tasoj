{"title": "Good Matrix Elements", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">A2. Good Matrix Elements</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>The Smart Beaver from ABBYY got hooked on square matrices. Now he is busy studying an <span class=\"tex-span\"><i>n</i>&times;<i>n</i></span> size matrix, where <span class=\"tex-span\"><i>n</i></span> is odd. The Smart Beaver considers the following matrix elements good:  </p><ul> <li> Elements of the main diagonal.  </li><li> Elements of the secondary diagonal.  </li><li> Elements of the \"middle\" row &minus; the row which has exactly <img align=\"middle\" class=\"tex-formula\" src=\"http://cf.hustoj.com:80/userfiles/image/fac4fc4bd8ab1b29b177bf8866dfe44561a7eb1b4646.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> rows above it and the same number of rows below it.  </li><li> Elements of the \"middle\" column &minus; the column that has exactly <img align=\"middle\" class=\"tex-formula\" src=\"http://cf.hustoj.com:80/userfiles/image/fac4fc4bd8ab1b29b177bf8866dfe44561a7eb1b4646.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> columns to the left of it and the same number of columns to the right of it. </li></ul><center> <img class=\"tex-graphics\" src=\"http://cf.hustoj.com:80/userfiles/image/42905c00498667098ee40ebef7099bb76d3cc1744646.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> <span class=\"tex-font-size-script\"> The figure shows a <span class=\"tex-span\">5&times;5</span> matrix.   The good elements are marked with green. </span> </center><p>Help the Smart Beaver count the sum of good elements of the given matrix.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line of input data contains a single odd integer <span class=\"tex-span\"><i>n</i></span>. Each of the next <span class=\"tex-span\"><i>n</i></span> lines contains <span class=\"tex-span\"><i>n</i></span> integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>ij</i></sub></span> <span class=\"tex-span\">(0&le;<i>a</i><sub class=\"lower-index\"><i>ij</i></sub>&le;100)</span> separated by single spaces &minus; the elements of the given matrix.</p><p>The input limitations for getting 30 points are: </p><ul> <li> <span class=\"tex-span\">1&le;<i>n</i>&le;5</span> </li></ul><p>The input limitations for getting 100 points are:</p><ul> <li> <span class=\"tex-span\">1&le;<i>n</i>&le;101</span> </li></ul></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print a single integer &minus; the sum of good matrix elements.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>3<br/>1 2 3<br/>4 5 6<br/>7 8 9<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>45<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>5<br/>1 1 1 1 1<br/>1 1 1 1 1<br/>1 1 1 1 1<br/>1 1 1 1 1<br/>1 1 1 1 1<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>17<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>In the first sample all matrix elements will be good. Good elements in the second sample are shown on the figure.</p></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}