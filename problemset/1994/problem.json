{"title": "String Set Queries", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">F. String Set Queries</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>3 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>768 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>You should process <span class=\"tex-span\"><i>m</i></span> queries over a set <span class=\"tex-span\"><i>D</i></span> of strings. Each query is one of three kinds:</p><ol> <li> Add a string <span class=\"tex-span\"><i>s</i></span> to the set <span class=\"tex-span\"><i>D</i></span>. It is guaranteed that the string <span class=\"tex-span\"><i>s</i></span> was not added before. </li><li> Delete a string <span class=\"tex-span\"><i>s</i></span> from the set <span class=\"tex-span\"><i>D</i></span>. It is guaranteed that the string <span class=\"tex-span\"><i>s</i></span> is in the set <span class=\"tex-span\"><i>D</i></span>. </li><li> For the given string <span class=\"tex-span\"><i>s</i></span> find the number of occurrences of the strings from the set <span class=\"tex-span\"><i>D</i></span>. If some string <span class=\"tex-span\"><i>p</i></span> from <span class=\"tex-span\"><i>D</i></span> has several occurrences in <span class=\"tex-span\"><i>s</i></span> you should count all of them. </li></ol><p>Note that you should solve the problem in <span class=\"tex-font-style-tt\">online</span> mode. It means that you can't read the whole input at once. You can read each query only after writing the answer for the last query of the third type. Use functions <span class=\"tex-font-style-tt\">fflush</span> in <span class=\"tex-font-style-tt\">C++</span> and <span class=\"tex-font-style-tt\">BufferedWriter.flush</span> in <span class=\"tex-font-style-tt\">Java</span> languages after each writing in your program.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains integer <span class=\"tex-span\"><i>m</i></span> (<span class=\"tex-span\">1&le;<i>m</i>&le;3&middot;10<sup class=\"upper-index\">5</sup></span>) &minus; the number of queries.</p><p>Each of the next <span class=\"tex-span\"><i>m</i></span> lines contains integer <span class=\"tex-span\"><i>t</i></span> (<span class=\"tex-span\">1&le;<i>t</i>&le;3</span>) and nonempty string <span class=\"tex-span\"><i>s</i></span> &minus; the kind of the query and the string to process. All strings consist of only lowercase English letters.</p><p>The sum of lengths of all strings in the input will not exceed <span class=\"tex-span\">3&middot;10<sup class=\"upper-index\">5</sup></span>.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>For each query of the third kind print the only integer <span class=\"tex-span\"><i>c</i></span> &minus; the desired number of occurrences in the string <span class=\"tex-span\"><i>s</i></span>.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>5<br/>1 abc<br/>3 abcabc<br/>2 abc<br/>1 aba<br/>3 abababc<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>2<br/>2<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>10<br/>1 abc<br/>1 bcd<br/>1 abcd<br/>3 abcd<br/>2 abcd<br/>3 abcd<br/>2 bcd<br/>3 abcd<br/>2 abc<br/>3 abcd<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>3<br/>2<br/>1<br/>0<br/></pre></div></div></div></div><p> </p></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 3000, "memory_limit": 768, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}