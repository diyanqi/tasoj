{"title": "George and Number", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">C. George and Number</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>1 second</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>George is a cat, so he really likes to play. Most of all he likes to play with his array of positive integers <span class=\"tex-span\"><i>b</i></span>. During the game, George modifies the array by using special changes. Let's mark George's current array as <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\">1</sub>,<i>b</i><sub class=\"lower-index\">2</sub>,...,<i>b</i><sub class=\"lower-index\">|<i>b</i>|</sub></span> (record <span class=\"tex-span\">|<i>b</i>|</span> denotes the current length of the array). Then one change is a sequence of actions: </p><ul> <li> Choose two distinct indexes <span class=\"tex-span\"><i>i</i></span> and <span class=\"tex-span\"><i>j</i></span> <span class=\"tex-span\">(1&le;<i>i</i>,<i>j</i>&le;|<i>b</i>|;<i>i</i>&ne;<i>j</i>)</span>, such that <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\"><i>i</i></sub>&ge;<i>b</i><sub class=\"lower-index\"><i>j</i></sub></span>. </li><li> Get number <span class=\"tex-span\"><i>v</i>=<i>concat</i>(<i>b</i><sub class=\"lower-index\"><i>i</i></sub>,<i>b</i><sub class=\"lower-index\"><i>j</i></sub>)</span>, where <span class=\"tex-span\"><i>concat</i>(<i>x</i>,<i>y</i>)</span> is a number obtained by adding number <span class=\"tex-span\"><i>y</i></span> to the end of the decimal record of number <span class=\"tex-span\"><i>x</i></span>. For example, <span class=\"tex-span\"><i>concat</i>(500,10)=50010</span>, <span class=\"tex-span\"><i>concat</i>(2,2)=22</span>. </li><li> Add number <span class=\"tex-span\"><i>v</i></span> to the end of the array. The length of the array will increase by one. </li><li> Remove from the array numbers with indexes <span class=\"tex-span\"><i>i</i></span> and <span class=\"tex-span\"><i>j</i></span>. The length of the array will decrease by two, and elements of the array will become re-numbered from <span class=\"tex-span\">1</span> to current length of the array. </li></ul><p>George played for a long time with his array <span class=\"tex-span\"><i>b</i></span> and received from array <span class=\"tex-span\"><i>b</i></span> an array consisting of exactly one number <span class=\"tex-span\"><i>p</i></span>. Now George wants to know: what is the maximum number of elements array <span class=\"tex-span\"><i>b</i></span> could contain originally? Help him find this number. Note that originally the array could contain only <span class=\"tex-font-style-bf\">positive</span> integers.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line of the input contains a single integer <span class=\"tex-span\"><i>p</i></span> (<span class=\"tex-span\">1&le;<i>p</i>&lt;10<sup class=\"upper-index\">100000</sup></span>). It is guaranteed that number <span class=\"tex-span\"><i>p</i></span> doesn't contain any leading zeroes.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print an integer &minus; the maximum number of elements array <span class=\"tex-span\"><i>b</i></span> could contain originally.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>9555<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>4</pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>10000000005<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>2</pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>800101<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>3</pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>45<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>1</pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>1000000000000001223300003342220044555<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>17</pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>19992000<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>1</pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>310200<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>2</pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>Let's consider the test examples: </p><ul> <li> Originally array <span class=\"tex-span\"><i>b</i></span> can be equal to <span class=\"tex-span\">{5,9,5,5}</span>. The sequence of George's changes could have been: <span class=\"tex-span\">{5,9,5,5}&rarr;{5,5,95}&rarr;{95,55}&rarr;{9555}</span>. </li><li> Originally array <span class=\"tex-span\"><i>b</i></span> could be equal to <span class=\"tex-span\">{1000000000,5}</span>. Please note that the array <span class=\"tex-span\"><i>b</i></span> cannot contain zeros. </li><li> Originally array <span class=\"tex-span\"><i>b</i></span> could be equal to <span class=\"tex-span\">{800,10,1}</span>. </li><li> Originally array <span class=\"tex-span\"><i>b</i></span> could be equal to <span class=\"tex-span\">{45}</span>. It cannot be equal to <span class=\"tex-span\">{4,5}</span>, because George can get only array <span class=\"tex-span\">{54}</span> from this array in one operation. </li></ul><p>Note that the numbers can be very large.</p></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 1000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}