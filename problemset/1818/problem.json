{"title": "Byteland coins", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">E. Byteland coins</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>1 second</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>512 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>There are <span class=\"tex-span\"><i>n</i></span> types of coins in Byteland. Conveniently, the denomination of the coin type <span class=\"tex-span\"><i>k</i></span> divides the denomination of the coin type <span class=\"tex-span\"><i>k</i>+1</span>, the denomination of the coin type <span class=\"tex-span\">1</span> equals <span class=\"tex-span\">1</span> tugrick. The ratio of the denominations of coin types <span class=\"tex-span\"><i>k</i>+1</span> and <span class=\"tex-span\"><i>k</i></span> equals <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>k</i></sub></span>. It is known that for each <span class=\"tex-span\"><i>x</i></span> there are at most <span class=\"tex-font-style-bf\">20</span> coin types of denomination <span class=\"tex-span\"><i>x</i></span>.</p><p>Byteasar has <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\"><i>k</i></sub></span> coins of type <span class=\"tex-span\"><i>k</i></span> with him, and he needs to pay exactly <span class=\"tex-span\"><i>m</i></span> tugricks. It is known that Byteasar never has more than <span class=\"tex-span\">3&middot;10<sup class=\"upper-index\">5</sup></span> coins with him. Byteasar want to know how many ways there are to pay exactly <span class=\"tex-span\"><i>m</i></span> tugricks. Two ways are different if there is an integer <span class=\"tex-span\"><i>k</i></span> such that the amount of coins of type <span class=\"tex-span\"><i>k</i></span> differs in these two ways. As all Byteland citizens, Byteasar wants to know the number of ways modulo <span class=\"tex-span\">10<sup class=\"upper-index\">9</sup>+7</span>.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains single integer <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">1&le;<i>n</i>&le;3&middot;10<sup class=\"upper-index\">5</sup></span>)&minus; the number of coin types.</p><p>The second line contains <span class=\"tex-span\"><i>n</i>-1</span> integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">1</sub></span>, <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">2</sub></span>, <span class=\"tex-span\">...</span>, <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>n</i>-1</sub></span> (<span class=\"tex-span\">1&le;<i>a</i><sub class=\"lower-index\"><i>k</i></sub>&le;10<sup class=\"upper-index\">9</sup></span>)&minus; the ratios between the coin types denominations. It is guaranteed that for each <span class=\"tex-span\"><i>x</i></span> there are at most <span class=\"tex-font-style-bf\">20</span> coin types of denomination <span class=\"tex-span\"><i>x</i></span>.</p><p>The third line contains <span class=\"tex-span\"><i>n</i></span> non-negative integers <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\">1</sub></span>, <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\">2</sub></span>, <span class=\"tex-span\">...</span>, <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\"><i>n</i></sub></span>&minus; the number of coins of each type Byteasar has. It is guaranteed that the sum of these integers doesn't exceed <span class=\"tex-span\">3&middot;10<sup class=\"upper-index\">5</sup></span>.</p><p>The fourth line contains single integer <span class=\"tex-span\"><i>m</i></span> (<span class=\"tex-span\">0&le;<i>m</i>&lt;10<sup class=\"upper-index\">10000</sup></span>)&minus; the amount in tugricks Byteasar needs to pay.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print single integer&minus; the number of ways to pay exactly <span class=\"tex-span\"><i>m</i></span> tugricks modulo <span class=\"tex-span\">10<sup class=\"upper-index\">9</sup>+7</span>.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>1<br/><br/>4<br/>2<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>1<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>2<br/>1<br/>4 4<br/>2<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>3<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>3<br/>3 3<br/>10 10 10<br/>17<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>6<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>In the first example Byteasar has <span class=\"tex-span\">4</span> coins of denomination <span class=\"tex-span\">1</span>, and he has to pay <span class=\"tex-span\">2</span> tugricks. There is only one way.</p><p>In the second example Byteasar has <span class=\"tex-span\">4</span> coins of each of two different types of denomination <span class=\"tex-span\">1</span>, he has to pay <span class=\"tex-span\">2</span> tugricks. There are <span class=\"tex-span\">3</span> ways: pay one coin of the first type and one coin of the other, pay two coins of the first type, and pay two coins of the second type.</p><p>In the third example the denominations are equal to <span class=\"tex-span\">1</span>, <span class=\"tex-span\">3</span>, <span class=\"tex-span\">9</span>.</p></div></div><p> </p></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 1000, "memory_limit": 512, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}