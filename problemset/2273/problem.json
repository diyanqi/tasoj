{"title": "Parking Lot", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">I. Parking Lot</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>0.5 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>64 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>To quickly hire highly skilled specialists one of the new IT City companies made an unprecedented move. Every employee was granted a car, and an employee can choose one of four different car makes.</p><p>The parking lot before the office consists of one line of <span class=\"tex-span\">(2<i>n</i>-2)</span> parking spaces. Unfortunately the total number of cars is greater than the parking lot capacity. Furthermore even amount of cars of each make is greater than the amount of parking spaces! That's why there are no free spaces on the parking lot ever.</p><p>Looking on the straight line of cars the company CEO thought that parking lot would be more beautiful if it contained exactly <span class=\"tex-span\"><i>n</i></span> successive cars of the same make. Help the CEO determine the number of ways to fill the parking lot this way.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The only line of the input contains one integer <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">3&le;<i>n</i>&le;30</span>) &minus; the amount of successive cars of the same make.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Output one integer &minus; the number of ways to fill the parking lot by cars of four makes using the described way.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>3<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>24</pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>Let's denote car makes in the following way: A &minus; Aston Martin, B &minus;   Bentley, M &minus; Mercedes-Maybach, Z &minus; Zaporozhets. For <span class=\"tex-span\"><i>n</i>=3</span> there are the following appropriate ways to fill the parking lot: AAAB AAAM AAAZ ABBB AMMM AZZZ BBBA BBBM BBBZ BAAA BMMM BZZZ MMMA MMMB MMMZ MAAA MBBB MZZZ ZZZA ZZZB ZZZM ZAAA ZBBB ZMMM</p><p>Originally it was planned to grant sport cars of Ferrari, Lamborghini, Maserati and Bugatti makes but this idea was renounced because it is impossible to drive these cars having small road clearance on the worn-down roads of IT City.</p></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 500, "memory_limit": 64, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}