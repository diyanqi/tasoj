{"title": "Ostap and Tree", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">E. Ostap and Tree</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Ostap already settled down in Rio de Janiero suburb and started to grow a tree in his garden. Recall that a tree is a connected undirected acyclic graph. </p><p>Ostap's tree now has <span class=\"tex-span\"><i>n</i></span> vertices. He wants to paint some vertices of the tree black such that from any vertex <span class=\"tex-span\"><i>u</i></span> there is at least one black vertex <span class=\"tex-span\"><i>v</i></span> at distance no more than <span class=\"tex-span\"><i>k</i></span>. <span class=\"tex-font-style-it\">Distance</span> between two vertices of the tree is the minimum possible number of edges of the path between them.</p><p>As this number of ways to paint the tree can be large, Ostap wants you to compute it modulo <span class=\"tex-span\">10<sup class=\"upper-index\">9</sup>+7</span>. Two ways to paint the tree are considered different if there exists a vertex that is painted black in one way and is not painted in the other one.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line of the input contains two integers <span class=\"tex-span\"><i>n</i></span> and <span class=\"tex-span\"><i>k</i></span> (<span class=\"tex-span\">1&le;<i>n</i>&le;100</span>, <span class=\"tex-span\">0&le;<i>k</i>&le;<i>min</i>(20,<i>n</i>-1)</span>)&minus; the number of vertices in Ostap's tree and the maximum allowed distance to the nearest black vertex. <span class=\"tex-font-style-bf\">Don't miss</span> the unusual constraint for <span class=\"tex-span\"><i>k</i></span>.</p><p>Each of the next <span class=\"tex-span\"><i>n</i>-1</span> lines contain two integers <span class=\"tex-span\"><i>u</i><sub class=\"lower-index\"><i>i</i></sub></span> and <span class=\"tex-span\"><i>v</i><sub class=\"lower-index\"><i>i</i></sub></span> (<span class=\"tex-span\">1&le;<i>u</i><sub class=\"lower-index\"><i>i</i></sub>,<i>v</i><sub class=\"lower-index\"><i>i</i></sub>&le;<i>n</i></span>)&minus; indices of vertices, connected by the <span class=\"tex-span\"><i>i</i></span>-th edge. It's guaranteed that given graph is a tree.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print one integer&minus; the remainder of division of the number of ways to paint the tree by <span class=\"tex-span\">1000000007</span> (<span class=\"tex-span\">10<sup class=\"upper-index\">9</sup>+7</span>).</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>2 0<br/>1 2<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>1<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>2 1<br/>1 2<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>3<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>4 1<br/>1 2<br/>2 3<br/>3 4<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>9<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>7 2<br/>1 2<br/>2 3<br/>1 4<br/>4 5<br/>1 6<br/>6 7<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>91<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>In the first sample, Ostap has to paint both vertices black.</p><p>In the second sample, it is enough to paint only one of two vertices, thus the answer is <span class=\"tex-span\">3</span>: Ostap can paint only vertex <span class=\"tex-span\">1</span>, only vertex <span class=\"tex-span\">2</span>, vertices <span class=\"tex-span\">1</span> and <span class=\"tex-span\">2</span> both.</p><p>In the third sample, the valid ways to paint vertices are: <span class=\"tex-span\">{1,3}</span>, <span class=\"tex-span\">{1,4}</span>, <span class=\"tex-span\">{2,3}</span>, <span class=\"tex-span\">{2,4}</span>, <span class=\"tex-span\">{1,2,3}</span>, <span class=\"tex-span\">{1,2,4}</span>, <span class=\"tex-span\">{1,3,4}</span>, <span class=\"tex-span\">{2,3,4}</span>, <span class=\"tex-span\">{1,2,3,4}</span>.</p></div></div><p> </p></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}