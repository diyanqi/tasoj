{"title": "Bear and Forgotten Tree 3", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">B. Bear and Forgotten Tree 3</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>A tree is a connected undirected graph consisting of <span class=\"tex-span\"><i>n</i></span> vertices and <span class=\"tex-span\"><i>n</i>-1</span> edges. Vertices are numbered <span class=\"tex-span\">1</span> through <span class=\"tex-span\"><i>n</i></span>.</p><p>Limak is a little polar bear and Radewoosh is his evil enemy. Limak once had a tree but Radewoosh stolen it. Bear is very sad now because he doesn't remember much about the tree&minus; he can tell you only three values <span class=\"tex-span\"><i>n</i></span>, <span class=\"tex-span\"><i>d</i></span> and <span class=\"tex-span\"><i>h</i></span>:</p><ul> <li> The tree had exactly <span class=\"tex-span\"><i>n</i></span> vertices. </li><li> The tree had diameter <span class=\"tex-span\"><i>d</i></span>. In other words, <span class=\"tex-span\"><i>d</i></span> was the biggest distance between two vertices. </li><li> Limak also remembers that he once rooted the tree in vertex <span class=\"tex-span\">1</span> and after that its height was <span class=\"tex-span\"><i>h</i></span>. In other words, <span class=\"tex-span\"><i>h</i></span> was the biggest distance between vertex <span class=\"tex-span\">1</span> and some other vertex. </li></ul><p>The distance between two vertices of the tree is the number of edges on the simple path between them.</p><p>Help Limak to restore his tree. Check whether there exists a tree satisfying the given conditions. Find any such tree and print its edges in any order. It's also possible that Limak made a mistake and there is no suitable tree&mdash; in this case print \"<span class=\"tex-font-style-tt\">-1</span>\".</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains three integers <span class=\"tex-span\"><i>n</i></span>, <span class=\"tex-span\"><i>d</i></span> and <span class=\"tex-span\"><i>h</i></span> (<span class=\"tex-span\">2&le;<i>n</i>&le;100000,1&le;<i>h</i>&le;<i>d</i>&le;<i>n</i>-1</span>)&minus; the number of vertices, diameter, and height after rooting in vertex <span class=\"tex-span\">1</span>, respectively.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>If there is no tree matching what Limak remembers, print the only line with \"<span class=\"tex-font-style-tt\">-1</span>\" (without the quotes).</p><p>Otherwise, describe any tree matching Limak's description. Print <span class=\"tex-span\"><i>n</i>-1</span> lines, each with two space-separated integers&mdash; indices of vertices connected by an edge. If there are many valid trees, print any of them. You can print edges in any order.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>5 3 2<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>1 2<br/>1 3<br/>3 4<br/>3 5</pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>8 5 2<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>-1<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>8 4 2<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>4 8<br/>5 7<br/>2 3<br/>8 1<br/>2 1<br/>5 6<br/>1 5<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>Below you can see trees printed to the output in the first sample and the third sample.</p><center> <img class=\"tex-graphics\" src=\"http://cf.hustoj.com:80/userfiles/image/85a2d742d171de827ccefbbe4e7d6f0f288b8b1b3232.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> </center></div></div><p> </p></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}