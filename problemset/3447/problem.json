{"title": "Good Substrings", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">G3. Good Substrings</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>4 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Smart Beaver recently got interested in a new word game. The point is as follows: count the number of distinct good substrings of some string <span class=\"tex-span\"><i>s</i></span>. To determine if a string is good or not the game uses rules. Overall there are <span class=\"tex-span\"><i>n</i></span> rules. Each rule is described by a group of three <span class=\"tex-span\">(<i>p</i>,<i>l</i>,<i>r</i>)</span>, where <span class=\"tex-span\"><i>p</i></span> is a string and <span class=\"tex-span\"><i>l</i></span> and <span class=\"tex-span\"><i>r</i></span> <span class=\"tex-span\">(<i>l</i>&le;<i>r</i>)</span> are integers. We&rsquo;ll say that string <span class=\"tex-span\"><i>t</i></span> complies with rule <span class=\"tex-span\">(<i>p</i>,<i>l</i>,<i>r</i>)</span>, if the number of occurrences of string <span class=\"tex-span\"><i>t</i></span> in string <span class=\"tex-span\"><i>p</i></span> lies between <span class=\"tex-span\"><i>l</i></span> and <span class=\"tex-span\"><i>r</i></span>, inclusive. For example, string \"<span class=\"tex-font-style-tt\">ab</span>\", complies with rules (\"<span class=\"tex-font-style-tt\">ab</span>\", <span class=\"tex-span\">1</span>, <span class=\"tex-span\">2</span>) and (\"<span class=\"tex-font-style-tt\">aab</span>\", <span class=\"tex-span\">0</span>, <span class=\"tex-span\">1</span>), but does not comply with rules (\"<span class=\"tex-font-style-tt\">cd</span>\", <span class=\"tex-span\">1</span>, <span class=\"tex-span\">2</span>) and (\"<span class=\"tex-font-style-tt\">abab</span>\", <span class=\"tex-span\">0</span>, <span class=\"tex-span\">1</span>).</p><p>A <span class=\"tex-font-style-it\">substring</span> <span class=\"tex-span\"><i>s</i>[<i>l</i>... <i>r</i>]</span> <span class=\"tex-span\">(1&le;<i>l</i>&le;<i>r</i>&le;|<i>s</i>|)</span> of string <span class=\"tex-span\"><i>s</i>=<i>s</i><sub class=\"lower-index\">1</sub><i>s</i><sub class=\"lower-index\">2</sub>... <i>s</i><sub class=\"lower-index\">|<i>s</i>|</sub></span> (<span class=\"tex-span\">|<i>s</i>|</span> is a length of <span class=\"tex-span\"><i>s</i></span>) is string <span class=\"tex-span\"><i>s</i><sub class=\"lower-index\"><i>l</i></sub><i>s</i><sub class=\"lower-index\"><i>l</i>+1</sub>... <i>s</i><sub class=\"lower-index\"><i>r</i></sub></span>.</p><p>Consider a <span class=\"tex-font-style-it\">number of occurrences </span> of string <span class=\"tex-span\"><i>t</i></span> in string <span class=\"tex-span\"><i>p</i></span> as a number of pairs of integers <span class=\"tex-span\"><i>l</i>,<i>r</i></span> <span class=\"tex-span\">(1&le;<i>l</i>&le;<i>r</i>&le;|<i>p</i>|)</span> such that <span class=\"tex-span\"><i>p</i>[<i>l</i>... <i>r</i>]=<i>t</i></span>.</p><p>We&rsquo;ll say that string <span class=\"tex-span\"><i>t</i></span> is good if it complies with all <span class=\"tex-span\"><i>n</i></span> rules. Smart Beaver asks you to help him to write a program that can calculate the number of distinct good substrings of string <span class=\"tex-span\"><i>s</i></span>. Two substrings <span class=\"tex-span\"><i>s</i>[<i>x</i>... <i>y</i>]</span> and <span class=\"tex-span\"><i>s</i>[<i>z</i>... <i>w</i>]</span> are cosidered to be distinct iff <span class=\"tex-span\"><i>s</i>[<i>x</i>... <i>y</i>]&ne;<i>s</i>[<i>z</i>... <i>w</i>]</span>.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains string <span class=\"tex-span\"><i>s</i></span>. The second line contains integer <span class=\"tex-span\"><i>n</i></span>. Next <span class=\"tex-span\"><i>n</i></span> lines contain the rules, one per line. Each of these lines contains a string and two integers <span class=\"tex-span\"><i>p</i><sub class=\"lower-index\"><i>i</i></sub>,<i>l</i><sub class=\"lower-index\"><i>i</i></sub>,<i>r</i><sub class=\"lower-index\"><i>i</i></sub></span>, separated by single spaces (<span class=\"tex-span\">0&le;<i>l</i><sub class=\"lower-index\"><i>i</i></sub>&le;<i>r</i><sub class=\"lower-index\"><i>i</i></sub>&le;|<i>p</i><sub class=\"lower-index\"><i>i</i></sub>|</span>). It is guaranteed that all the given strings are non-empty and only contain lowercase English letters.</p><p>The input limits for scoring 30 points are (subproblem G1): </p><ul> <li> <span class=\"tex-span\">0&le;<i>n</i>&le;10</span>. </li><li> The length of string <span class=\"tex-span\"><i>s</i></span> and the maximum length of string <span class=\"tex-span\"><i>p</i></span> is <span class=\"tex-span\">&le;200</span>. </li></ul><p>The input limits for scoring 70 points are (subproblems G1+G2): </p><ul> <li> <span class=\"tex-span\">0&le;<i>n</i>&le;10</span>. </li><li> The length of string <span class=\"tex-span\"><i>s</i></span> and the maximum length of string <span class=\"tex-span\"><i>p</i></span> is <span class=\"tex-span\">&le;2000</span>. </li></ul><p>The input limits for scoring 100 points are (subproblems G1+G2+G3): </p><ul> <li> <span class=\"tex-span\">0&le;<i>n</i>&le;10</span>. </li><li> The length of string <span class=\"tex-span\"><i>s</i></span> and the maximum length of string <span class=\"tex-span\"><i>p</i></span> is <span class=\"tex-span\">&le;50000</span>. </li></ul></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print a single integer &minus; the number of good substrings of string <span class=\"tex-span\"><i>s</i></span>.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>aaab<br/>2<br/>aa 0 0<br/>aab 1 1<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>3<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>ltntlnen<br/>3<br/>n 0 0<br/>ttlneenl 1 4<br/>lelllt 1 1<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>2<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>a<br/>0<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>1<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>There are three good substrings in the first sample test: &laquo;<span class=\"tex-font-style-tt\">aab</span>&raquo;, &laquo;<span class=\"tex-font-style-tt\">ab</span>&raquo; and &laquo;<span class=\"tex-font-style-tt\">b</span>&raquo;.</p><p>In the second test only substrings &laquo;<span class=\"tex-font-style-tt\">e</span>&raquo; and &laquo;<span class=\"tex-font-style-tt\">t</span>&raquo; are good.</p></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 4000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}