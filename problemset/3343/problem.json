{"title": "Difference Row", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">A. Difference Row</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>You want to arrange <span class=\"tex-span\"><i>n</i></span> integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">1</sub>,<i>a</i><sub class=\"lower-index\">2</sub>,...,<i>a</i><sub class=\"lower-index\"><i>n</i></sub></span> in some order in a row. Let's define the value of an arrangement as the sum of differences between all pairs of adjacent integers.</p><p>More formally, let's denote some arrangement as a sequence of integers <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\">1</sub>,<i>x</i><sub class=\"lower-index\">2</sub>,...,<i>x</i><sub class=\"lower-index\"><i>n</i></sub></span>, where sequence <span class=\"tex-span\"><i>x</i></span> is a permutation of sequence <span class=\"tex-span\"><i>a</i></span>. The value of such an arrangement is <span class=\"tex-span\">(<i>x</i><sub class=\"lower-index\">1</sub>-<i>x</i><sub class=\"lower-index\">2</sub>)+(<i>x</i><sub class=\"lower-index\">2</sub>-<i>x</i><sub class=\"lower-index\">3</sub>)+...+(<i>x</i><sub class=\"lower-index\"><i>n</i>-1</sub>-<i>x</i><sub class=\"lower-index\"><i>n</i></sub>)</span>.</p><p>Find the largest possible value of an arrangement. Then, output the lexicographically smallest sequence <span class=\"tex-span\"><i>x</i></span> that corresponds to an arrangement of the largest possible value.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line of the input contains integer <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">2&le;<i>n</i>&le;100</span>). The second line contains <span class=\"tex-span\"><i>n</i></span> space-separated integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">1</sub></span>, <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">2</sub></span>, <span class=\"tex-span\">...</span>, <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>n</i></sub></span> (<span class=\"tex-span\">|<i>a</i><sub class=\"lower-index\"><i>i</i></sub>|&le;1000</span>).</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print the required sequence <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\">1</sub>,<i>x</i><sub class=\"lower-index\">2</sub>,...,<i>x</i><sub class=\"lower-index\"><i>n</i></sub></span>. Sequence <span class=\"tex-span\"><i>x</i></span> should be the lexicographically smallest permutation of <span class=\"tex-span\"><i>a</i></span> that corresponds to an arrangement of the largest possible value.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>5<br/>100 -100 50 0 -50<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>100 -50 0 50 -100 <br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>In the sample test case, the value of the output arrangement is <span class=\"tex-span\">(100-(-50))+((-50)-0)+(0-50)+(50-(-100))=200</span>. No other arrangement has a larger value, and among all arrangements with the value of <span class=\"tex-span\">200</span>, the output arrangement is the lexicographically smallest one.</p><p>Sequence <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\">1</sub>,<i>x</i><sub class=\"lower-index\">2</sub>,... ,<i>x</i><sub class=\"lower-index\"><i>p</i></sub></span> is <span class=\"tex-font-style-it\">lexicographically smaller</span> than sequence <span class=\"tex-span\"><i>y</i><sub class=\"lower-index\">1</sub>,<i>y</i><sub class=\"lower-index\">2</sub>,... ,<i>y</i><sub class=\"lower-index\"><i>p</i></sub></span> if there exists an integer <span class=\"tex-span\"><i>r</i></span> <span class=\"tex-span\">(0&le;<i>r</i>&lt;<i>p</i>)</span> such that <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\">1</sub>=<i>y</i><sub class=\"lower-index\">1</sub>,<i>x</i><sub class=\"lower-index\">2</sub>=<i>y</i><sub class=\"lower-index\">2</sub>,... ,<i>x</i><sub class=\"lower-index\"><i>r</i></sub>=<i>y</i><sub class=\"lower-index\"><i>r</i></sub></span> and <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\"><i>r</i>+1</sub>&lt;<i>y</i><sub class=\"lower-index\"><i>r</i>+1</sub></span>.</p></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}