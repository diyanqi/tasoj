{"title": "Bear and Bad Powers of 42", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">E. Bear and Bad Powers of 42</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>5 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Limak, a bear, isn't good at handling queries. So, he asks you to do it.</p><p>We say that powers of <span class=\"tex-span\">42</span> (numbers <span class=\"tex-span\">1,42,1764,...</span>) are <span class=\"tex-font-style-it\">bad</span>. Other numbers are <span class=\"tex-font-style-it\">good</span>.</p><p>You are given a sequence of <span class=\"tex-span\"><i>n</i></span> good integers <span class=\"tex-span\"><i>t</i><sub class=\"lower-index\">1</sub>,<i>t</i><sub class=\"lower-index\">2</sub>,...,<i>t</i><sub class=\"lower-index\"><i>n</i></sub></span>. Your task is to handle <span class=\"tex-span\"><i>q</i></span> queries of three types:</p><ol> <li> <span class=\"tex-font-style-tt\">1 i</span>&minus; print <span class=\"tex-span\"><i>t</i><sub class=\"lower-index\"><i>i</i></sub></span> in a separate line. </li><li> <span class=\"tex-font-style-tt\">2 a b x</span>&minus; for <img align=\"middle\" class=\"tex-formula\" src=\"http://cf.hustoj.com:80/userfiles/image/716fe9461703df921fb23a83c0c98952561fddad3535.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> set <span class=\"tex-span\"><i>t</i><sub class=\"lower-index\"><i>i</i></sub></span> to <span class=\"tex-span\"><i>x</i></span>. It's guaranteed that <span class=\"tex-span\"><i>x</i></span> is a good number. </li><li> <span class=\"tex-font-style-tt\">3 a b x</span>&minus; for <img align=\"middle\" class=\"tex-formula\" src=\"http://cf.hustoj.com:80/userfiles/image/716fe9461703df921fb23a83c0c98952561fddad3535.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> increase <span class=\"tex-span\"><i>t</i><sub class=\"lower-index\"><i>i</i></sub></span> by <span class=\"tex-span\"><i>x</i></span>. After this repeat the process while at least one <span class=\"tex-span\"><i>t</i><sub class=\"lower-index\"><i>i</i></sub></span> is bad. </li></ol><p>You can note that after each query all <span class=\"tex-span\"><i>t</i><sub class=\"lower-index\"><i>i</i></sub></span> are good.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line of the input contains two integers <span class=\"tex-span\"><i>n</i></span> and <span class=\"tex-span\"><i>q</i></span> (<span class=\"tex-span\">1&le;<i>n</i>,<i>q</i>&le;100000</span>)&minus; the size of Limak's sequence and the number of queries, respectively.</p><p>The second line of the input contains <span class=\"tex-span\"><i>n</i></span> integers <span class=\"tex-span\"><i>t</i><sub class=\"lower-index\">1</sub>,<i>t</i><sub class=\"lower-index\">2</sub>,...,<i>t</i><sub class=\"lower-index\"><i>n</i></sub></span> (<span class=\"tex-span\">2&le;<i>t</i><sub class=\"lower-index\"><i>i</i></sub>&le;10<sup class=\"upper-index\">9</sup></span>)&minus; initial elements of Limak's sequence. All <span class=\"tex-span\"><i>t</i><sub class=\"lower-index\"><i>i</i></sub></span> are good.</p><p>Then, <span class=\"tex-span\"><i>q</i></span> lines follow. The <span class=\"tex-span\"><i>i</i></span>-th of them describes the <span class=\"tex-span\"><i>i</i></span>-th query. The first number in the line is an integer <span class=\"tex-span\"><i>type</i><sub class=\"lower-index\"><i>i</i></sub></span> (<span class=\"tex-span\">1&le;<i>type</i><sub class=\"lower-index\"><i>i</i></sub>&le;3</span>)&minus; the type of the query. There is at least one query of the first type, so the output won't be empty.</p><p>In queries of the second and the third type there is <span class=\"tex-span\">1&le;<i>a</i>&le;<i>b</i>&le;<i>n</i></span>.</p><p>In queries of the second type an integer <span class=\"tex-span\"><i>x</i></span> (<span class=\"tex-span\">2&le;<i>x</i>&le;10<sup class=\"upper-index\">9</sup></span>) is guaranteed to be good.</p><p>In queries of the third type an integer <span class=\"tex-span\"><i>x</i></span> (<span class=\"tex-span\">1&le;<i>x</i>&le;10<sup class=\"upper-index\">9</sup></span>) may be bad.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>For each query of the first type, print the answer in a separate line.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Example</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>6 12<br/>40 1700 7 1672 4 1722<br/>3 2 4 42<br/>1 2<br/>1 3<br/>3 2 6 50<br/>1 2<br/>1 4<br/>1 6<br/>2 3 4 41<br/>3 1 5 1<br/>1 1<br/>1 3<br/>1 5<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>1742<br/>49<br/>1842<br/>1814<br/>1822<br/>43<br/>44<br/>107<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>After a query <span class=\"tex-font-style-tt\">3 2 4 42</span> the sequence is <span class=\"tex-span\">40,1742,49,1714,4,1722</span>.</p><p>After a query <span class=\"tex-font-style-tt\">3 2 6 50</span> the sequence is <span class=\"tex-span\">40,1842,149,1814,104,1822</span>.</p><p>After a query <span class=\"tex-font-style-tt\">2 3 4 41</span> the sequence is <span class=\"tex-span\">40,1842,41,41,104,1822</span>.</p><p>After a query <span class=\"tex-font-style-tt\">3 1 5 1</span> the sequence is <span class=\"tex-span\">43,1845,44,44,107,1822</span>.</p></div></div><p> </p></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 5000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}