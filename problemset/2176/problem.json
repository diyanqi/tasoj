{"title": "Hard Process", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">C. Hard Process</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>1 second</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>You are given an array <span class=\"tex-span\"><i>a</i></span> with <span class=\"tex-span\"><i>n</i></span> elements. Each element of <span class=\"tex-span\"><i>a</i></span> is either <span class=\"tex-span\">0</span> or <span class=\"tex-span\">1</span>.</p><p>Let's denote the length of the longest subsegment of consecutive elements in <span class=\"tex-span\"><i>a</i></span>, consisting of only numbers one, as <span class=\"tex-span\"><i>f</i>(<i>a</i>)</span>. You can change no more than <span class=\"tex-span\"><i>k</i></span> zeroes to ones to maximize <span class=\"tex-span\"><i>f</i>(<i>a</i>)</span>.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains two integers <span class=\"tex-span\"><i>n</i></span> and <span class=\"tex-span\"><i>k</i></span> (<span class=\"tex-span\">1&le;<i>n</i>&le;3&middot;10<sup class=\"upper-index\">5</sup>,0&le;<i>k</i>&le;<i>n</i></span>) &minus; the number of elements in <span class=\"tex-span\"><i>a</i></span> and the parameter <span class=\"tex-span\"><i>k</i></span>.</p><p>The second line contains <span class=\"tex-span\"><i>n</i></span> integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> (<span class=\"tex-span\">0&le;<i>a</i><sub class=\"lower-index\"><i>i</i></sub>&le;1</span>) &minus; the elements of <span class=\"tex-span\"><i>a</i></span>.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>On the first line print a non-negative integer <span class=\"tex-span\"><i>z</i></span> &minus; the maximal value of <span class=\"tex-span\"><i>f</i>(<i>a</i>)</span> after no more than <span class=\"tex-span\"><i>k</i></span> changes of zeroes to ones.</p><p>On the second line print <span class=\"tex-span\"><i>n</i></span> integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>j</i></sub></span> &minus; the elements of the array <span class=\"tex-span\"><i>a</i></span> after the changes.</p><p>If there are multiple answers, you can print any one of them.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>7 1<br/>1 0 0 1 1 0 1<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>4<br/>1 0 0 1 1 1 1<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>10 2<br/>1 0 0 1 0 1 0 1 0 1<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>5<br/>1 0 0 1 1 1 1 1 0 1<br/></pre></div></div></div></div><p> </p></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 1000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}