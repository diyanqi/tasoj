{"title": "Newspaper Headline", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">A. Newspaper Headline</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>A newspaper is published in Walrusland. Its heading is <span class=\"tex-span\"><i>s</i><sub class=\"lower-index\">1</sub></span>, it consists of lowercase Latin letters. Fangy the little walrus wants to buy several such newspapers, cut out their headings, glue them one to another in order to get one big string. After that walrus erase several letters from this string in order to get a new word <span class=\"tex-span\"><i>s</i><sub class=\"lower-index\">2</sub></span>. It is considered that when Fangy erases some letter, there's no whitespace formed instead of the letter. That is, the string remains unbroken and it still only consists of lowercase Latin letters.</p><p>For example, the heading is \"<span class=\"tex-font-style-tt\">abc</span>\". If we take two such headings and glue them one to the other one, we get \"<span class=\"tex-font-style-tt\">abcabc</span>\". If we erase the letters on positions <span class=\"tex-span\">1</span> and <span class=\"tex-span\">5</span>, we get a word \"<span class=\"tex-font-style-tt\">bcac</span>\".</p><p>Which least number of newspaper headings <span class=\"tex-span\"><i>s</i><sub class=\"lower-index\">1</sub></span> will Fangy need to glue them, erase several letters and get word <span class=\"tex-span\"><i>s</i><sub class=\"lower-index\">2</sub></span>?</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The input data contain two lines. The first line contain the heading <span class=\"tex-span\"><i>s</i><sub class=\"lower-index\">1</sub></span>, the second line contains the word <span class=\"tex-span\"><i>s</i><sub class=\"lower-index\">2</sub></span>. The lines only consist of lowercase Latin letters (<span class=\"tex-span\">1&le;|<i>s</i><sub class=\"lower-index\">1</sub>|&le;10<sup class=\"upper-index\">4</sup>,1&le;|<i>s</i><sub class=\"lower-index\">2</sub>|&le;10<sup class=\"upper-index\">6</sup></span>).</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>If it is impossible to get the word <span class=\"tex-span\"><i>s</i><sub class=\"lower-index\">2</sub></span> in the above-described manner, print \"-1\" (without the quotes). Otherwise, print the least number of newspaper headings <span class=\"tex-span\"><i>s</i><sub class=\"lower-index\">1</sub></span>, which Fangy will need to receive the word <span class=\"tex-span\"><i>s</i><sub class=\"lower-index\">2</sub></span>.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>abc<br/>xyz<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>-1<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>abcd<br/>dabc<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>2<br/></pre></div></div></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}