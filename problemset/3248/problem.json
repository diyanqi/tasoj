{"title": "Choosing Subtree is Fun", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">D. Choosing Subtree is Fun</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>5 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>There is a tree consisting of <span class=\"tex-span\"><i>n</i></span> vertices. The vertices are numbered from <span class=\"tex-span\">1</span> to <span class=\"tex-span\"><i>n</i></span>.</p><p>Let's define the length of an interval <span class=\"tex-span\">[<i>l</i>,<i>r</i>]</span> as the value <span class=\"tex-span\"><i>r</i>-<i>l</i>+1</span>. The score of a subtree of this tree is the maximum length of such an interval <span class=\"tex-span\">[<i>l</i>,<i>r</i>]</span> that, the vertices with numbers <span class=\"tex-span\"><i>l</i>,<i>l</i>+1,...,<i>r</i></span> belong to the subtree.</p><p>Considering all subtrees of the tree whose size is at most <span class=\"tex-span\"><i>k</i></span>, return the maximum score of the subtree. Note, that in this problem tree is not rooted, so a subtree &minus; is an arbitrary connected subgraph of the tree.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>There are two integers in the first line, <span class=\"tex-span\"><i>n</i></span> and <span class=\"tex-span\"><i>k</i></span> (<span class=\"tex-span\">1&le;<i>k</i>&le;<i>n</i>&le;10<sup class=\"upper-index\">5</sup></span>). Each of the next <span class=\"tex-span\"><i>n</i>-1</span> lines contains integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> and <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\"><i>i</i></sub></span> (<span class=\"tex-span\">1&le;<i>a</i><sub class=\"lower-index\"><i>i</i></sub>,<i>b</i><sub class=\"lower-index\"><i>i</i></sub>&le;<i>n</i>,<i>a</i><sub class=\"lower-index\"><i>i</i></sub>&ne;<i>b</i><sub class=\"lower-index\"><i>i</i></sub></span>). That means <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> and <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\"><i>i</i></sub></span> are connected by a tree edge.</p><p>It is guaranteed that the input represents a tree.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Output should contain a single integer &minus; the maximum possible score.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>10 6<br/>4 10<br/>10 6<br/>2 9<br/>9 6<br/>8 5<br/>7 1<br/>4 7<br/>7 3<br/>1 8<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>3<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>16 7<br/>13 11<br/>12 11<br/>2 14<br/>8 6<br/>9 15<br/>16 11<br/>5 14<br/>6 15<br/>4 3<br/>11 15<br/>15 14<br/>10 1<br/>3 14<br/>14 7<br/>1 7<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>6<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>For the first case, there is some subtree whose size is at most <span class=\"tex-span\">6</span>, including <span class=\"tex-span\">3</span> consecutive numbers of vertices. For example, the subtree that consists of <span class=\"tex-span\">{1,3,4,5,7,8}</span> or of <span class=\"tex-span\">{1,4,6,7,8,10}</span> includes <span class=\"tex-span\">3</span> consecutive numbers of vertices. But there is no subtree whose size is at most <span class=\"tex-span\">6</span>, which includes <span class=\"tex-span\">4</span> or more consecutive numbers of vertices.</p></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 5000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}