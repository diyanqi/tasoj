{"title": "DZY Loves Planting", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">E. DZY Loves Planting</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>3 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p><span class=\"tex-font-style-it\">DZY loves planting, and he enjoys solving tree problems.</span></p><p>DZY has a weighted tree (connected undirected graph without cycles) containing <span class=\"tex-span\"><i>n</i></span> nodes (they are numbered from <span class=\"tex-span\">1</span> to <span class=\"tex-span\"><i>n</i></span>). He defines the function <span class=\"tex-span\"><i>g</i>(<i>x</i>,<i>y</i>)</span> <span class=\"tex-span\">(1&le;<i>x</i>,<i>y</i>&le;<i>n</i>)</span> as the longest edge in the shortest path between nodes <span class=\"tex-span\"><i>x</i></span> and <span class=\"tex-span\"><i>y</i></span>. Specially <span class=\"tex-span\"><i>g</i>(<i>z</i>,<i>z</i>)=0</span> for every <span class=\"tex-span\"><i>z</i></span>.</p><p>For every integer sequence <span class=\"tex-span\"><i>p</i><sub class=\"lower-index\">1</sub>,<i>p</i><sub class=\"lower-index\">2</sub>,...,<i>p</i><sub class=\"lower-index\"><i>n</i></sub></span> <span class=\"tex-span\">(1&le;<i>p</i><sub class=\"lower-index\"><i>i</i></sub>&le;<i>n</i>)</span>, DZY defines <span class=\"tex-span\"><i>f</i>(<i>p</i>)</span> as <img align=\"middle\" class=\"tex-formula\" src=\"http://cf.hustoj.com:80/userfiles/image/4c59f1b2481867b6caa92de546f4e13b0121543210.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/>. </p><p>DZY wants to find such a sequence <span class=\"tex-span\"><i>p</i></span> that <span class=\"tex-span\"><i>f</i>(<i>p</i>)</span> has maximum possible value. But there is one more restriction: the element <span class=\"tex-span\"><i>j</i></span> can appear in <span class=\"tex-span\"><i>p</i></span> at most <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\"><i>j</i></sub></span> times.</p><p>Please, find the maximum possible <span class=\"tex-span\"><i>f</i>(<i>p</i>)</span> under the described restrictions.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains an integer <span class=\"tex-span\"><i>n</i>(1&le;<i>n</i>&le;3000)</span>.</p><p>Each of the next <span class=\"tex-span\"><i>n</i>-1</span> lines contains three integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub>,<i>b</i><sub class=\"lower-index\"><i>i</i></sub>,<i>c</i><sub class=\"lower-index\"><i>i</i></sub>(1&le;<i>a</i><sub class=\"lower-index\"><i>i</i></sub>,<i>b</i><sub class=\"lower-index\"><i>i</i></sub>&le;<i>n</i>;1&le;<i>c</i><sub class=\"lower-index\"><i>i</i></sub>&le;10000)</span>, denoting an edge between <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> and <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\"><i>i</i></sub></span> with length <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\"><i>i</i></sub></span>. It is guaranteed that these edges form a tree.</p><p>Each of the next <span class=\"tex-span\"><i>n</i></span> lines describes an element of sequence <span class=\"tex-span\"><i>x</i></span>. The <span class=\"tex-span\"><i>j</i></span>-th line contains an integer <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\"><i>j</i></sub>(1&le;<i>x</i><sub class=\"lower-index\"><i>j</i></sub>&le;<i>n</i>)</span>.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print a single integer representing the answer.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>4<br/>1 2 1<br/>2 3 2<br/>3 4 3<br/>1<br/>1<br/>1<br/>1<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>2<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>4<br/>1 2 1<br/>2 3 2<br/>3 4 3<br/>4<br/>4<br/>4<br/>4<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>3<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>In the first sample, one of the optimal <span class=\"tex-span\"><i>p</i></span> is <span class=\"tex-span\">[4,3,2,1]</span>.</p></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 3000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}