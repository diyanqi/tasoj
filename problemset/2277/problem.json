{"title": "A rectangle", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">E. A rectangle</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>0.5 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>64 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Developing tools for creation of locations maps for turn-based fights in a new game, Petya faced the following problem.</p><p>A field map consists of hexagonal cells. Since locations sizes are going to be big, a game designer wants to have a tool for quick filling of a field part with identical enemy units. This action will look like following: a game designer will select a rectangular area on the map, and each cell whose center belongs to the selected rectangle will be filled with the enemy unit.</p><p>More formally, if a game designer selected cells having coordinates <span class=\"tex-span\">(<i>x</i><sub class=\"lower-index\">1</sub>,<i>y</i><sub class=\"lower-index\">1</sub>)</span> and <span class=\"tex-span\">(<i>x</i><sub class=\"lower-index\">2</sub>,<i>y</i><sub class=\"lower-index\">2</sub>)</span>, where <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\">1</sub>&le;<i>x</i><sub class=\"lower-index\">2</sub></span> and <span class=\"tex-span\"><i>y</i><sub class=\"lower-index\">1</sub>&le;<i>y</i><sub class=\"lower-index\">2</sub></span>, then all cells having center coordinates <span class=\"tex-span\">(<i>x</i>,<i>y</i>)</span> such that <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\">1</sub>&le;<i>x</i>&le;<i>x</i><sub class=\"lower-index\">2</sub></span> and <span class=\"tex-span\"><i>y</i><sub class=\"lower-index\">1</sub>&le;<i>y</i>&le;<i>y</i><sub class=\"lower-index\">2</sub></span> will be filled. Orthogonal coordinates system is set up so that one of cell sides is parallel to <span class=\"tex-span\"><i>OX</i></span> axis, all hexagon centers have integer coordinates and for each integer <span class=\"tex-span\"><i>x</i></span> there are cells having center with such <span class=\"tex-span\"><i>x</i></span> coordinate and for each integer <span class=\"tex-span\"><i>y</i></span> there are cells having center with such <span class=\"tex-span\"><i>y</i></span> coordinate. It is guaranteed that difference <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\">2</sub>-<i>x</i><sub class=\"lower-index\">1</sub></span> is divisible by <span class=\"tex-span\">2</span>.</p><p>Working on the problem Petya decided that before painting selected units he wants to output number of units that will be painted on the map.</p><p>Help him implement counting of these units before painting.</p><center> <img class=\"tex-graphics\" src=\"http://cf.hustoj.com:80/userfiles/image/f68ddb6334d8dabbf923af5e8aec8f073ce05a3731.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> </center></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The only line of input contains four integers <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\">1</sub>,<i>y</i><sub class=\"lower-index\">1</sub>,<i>x</i><sub class=\"lower-index\">2</sub>,<i>y</i><sub class=\"lower-index\">2</sub></span> (<span class=\"tex-span\">-10<sup class=\"upper-index\">9</sup>&le;<i>x</i><sub class=\"lower-index\">1</sub>&le;<i>x</i><sub class=\"lower-index\">2</sub>&le;10<sup class=\"upper-index\">9</sup>,-10<sup class=\"upper-index\">9</sup>&le;<i>y</i><sub class=\"lower-index\">1</sub>&le;<i>y</i><sub class=\"lower-index\">2</sub>&le;10<sup class=\"upper-index\">9</sup></span>) &minus; the coordinates of the centers of two cells.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Output one integer &minus; the number of cells to be filled.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>1 1 5 5<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>13</pre></div></div></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 500, "memory_limit": 64, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}