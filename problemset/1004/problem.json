{
    "display_id": "a103",
    "title": "\u56de\u5f52\u65b9\u7a0b",
    "description": {
        "format": "html",
        "value": "<p>\u968f\u7740\u7ecf\u6d4e\u7684\u53d1\u5c55\uff0c\u5c45\u6c11\u5b58\u6b3e\u9010\u5e74\u589e\u957f\uff0c\u67d0\u5730\u533a\u5c45\u6c11\u8fde\u63a5\u51e0\u5e74\u7684\u5e74\u5e95\u50a8\u84c4\u603b\u91d1\u989d\u5982\u4e0b\u8868\u6240\u793a\uff1a</p><p><img alt=\"1.PNG\" src=\"/public/upload/285723a12f.png\" width=\"990\" height=\"87\" /><br /></p><p>\u8981\u6c42\uff1a\uff081\uff09\u8ba1\u7b97y\u5173\u4e8et\u7684\u56de\u5f52\u65b9\u7a0bY=kX+b\u7684k\u548cb;(2)\u6c42\u603b\u79bb\u5deed;(3)\u9884\u6d4b\u6c42$t_j$\u5e74\u7684\u603b\u91d1\u989d$y_j$\u3002</p><p>\u63d0\u793a\uff1a\u5bf9\u4e8e\u6240\u6709\u89c2\u5bdf\u70b9$t_i$\uff0c\u5176\u89c2\u5bdf\u503c$y_i$\u4e0e\u56de\u5f52\u76f4\u7ebf\u7684\u70b9Y\u7684\u8ddd\u79bb\u7684\u5e73\u65b9\u548c<span style=\"color: rgb(82, 82, 82);\">$d=\\sum_{i=1}^{n}(y_i-Y_i)^{2}$\u79f0\u4e3a\u603b\u79bb\u5dee\u3002\u8fd9\u79cd\u4f7f\u5f97\u603b\u79bb\u5dee\u6700\u7684\u65b9\u6cd5\u79f0\u4e3a\u6700\u5c0f\u4e8c\u4e58\u6cd5\u3002</span></p><p><span style=\"color: rgb(82, 82, 82);\">\u5176\u4e2d<img alt=\"3.PNG\" src=\"/public/upload/311e983d0a.png\" width=\"218\" height=\"68\" />\uff0c\u5176\u4e2d<img alt=\"4.PNG\" src=\"/public/upload/a4ba707506.png\" width=\"134\" height=\"52\" />\uff0c<img alt=\"6.PNG\" src=\"/public/upload/94c6e09f63.png\" width=\"146\" height=\"54\" />\uff0c\u5219$b= \\bar{y}-k\\bar{t}$\u3002</span></p><p>\u5982\uff1a<br /></p><p><img alt=\"2.PNG\" src=\"/public/upload/d5a10888a4.png\" width=\"980\" height=\"86\" /><br /></p><p>\u6c42\uff1ak,b,d,\u7b2c6\u5e74\u91d1\u989dy6</p><p>k=1.200 b=3.600 d=0.400 y6=10.800\u3002</p>"
    },
    "tags": [
        "map\u51fd\u6570",
        "lambda",
        "\u7ebf\u6027\u56de\u5f52"
    ],
    "input_description": {
        "format": "html",
        "value": "<p>\u4e09\u884c\uff1a\u7b2c\u4e00\u884c ti\uff1b\u7b2c\u4e8c\u884cyi\uff1b\u7b2c\u4e09\u884c tj\u3002</p>"
    },
    "output_description": {
        "format": "html",
        "value": "<p>\u4e00\u884c\uff0c\u56db\u4e2a\u6570k b d yj\uff0c\u7528\u7a7a\u683c\u5206\u5f00\u3002</p>"
    },
    "test_case_score": [
        {
            "score": 33,
            "input_name": "1.in",
            "output_name": "1.out"
        },
        {
            "score": 33,
            "input_name": "2.in",
            "output_name": "2.out"
        },
        {
            "score": 33,
            "input_name": "3.in",
            "output_name": "3.out"
        }
    ],
    "hint": {
        "format": "html",
        "value": "<p>\u6240\u6709\u7684\u8f93\u5165\u503c\u5747\u53ef\u80fd\u4e3a\u6d6e\u70b9\u6570\u3002</p>"
    },
    "time_limit": 1000,
    "memory_limit": 256,
    "samples": [
        {
            "input": "1.0 2.0 3.0 4.0 5.0\n5.0 6.0 7.0 8.0 10.0\n6.0",
            "output": "1.200 3.600 0.400 10.800"
        }
    ],
    "template": {},
    "spj": null,
    "rule_type": "OI",
    "source": "\u300aPython\u7f16\u7a0b\u57fa\u7840\u548c\u6848\u4f8b\u96c6\u9526\uff08\u4e2d\u5b66\u7248\uff09\u300b\uff0cP42\u4f8b2-3",
    "answers": [
        {
            "language": "Python3",
            "code": "def f(x,y,x1):\n    n=len(x)\n    xAvg = sum(x)/n\n    yAvg = sum(y)/n\n    ly = sum(map(lambda ax,ay:ax*ay,x,y))-n*xAvg*yAvg\n    lx = sum(map(lambda ax:ax*ax,x))-n*xAvg*xAvg\n    k = ly/lx\n    b = yAvg - k*xAvg\n    dist = sum(map(lambda ax,ay:(k*ax+b-ay)**2,x,y))\n    y1 = k*x1 + b\n    return k,b,dist,y1\nx = list(map(float,input().split()))\ny = list(map(float,input().split()))\nx1 = float(input())\nr = f(x,y,x1)\nprint('{:.3f} {:.3f} {:.3f} {:.3f}'.format(*r))"
        }
    ]
}
