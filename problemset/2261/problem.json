{"title": "Alice, Bob, Two Teams", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">B. Alice, Bob, Two Teams</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>1.5 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Alice and Bob are playing a game. The game involves splitting up game pieces into two teams. There are <span class=\"tex-span\"><i>n</i></span> pieces, and the <span class=\"tex-span\"><i>i</i></span>-th piece has a strength <span class=\"tex-span\"><i>p</i><sub class=\"lower-index\"><i>i</i></sub></span>.</p><p>The way to split up game pieces is split into several steps:</p><ol> <li> First, Alice will split the pieces into two different groups <span class=\"tex-span\"><i>A</i></span> and <span class=\"tex-span\"><i>B</i></span>. This can be seen as writing the assignment of teams of a piece in an <span class=\"tex-span\"><i>n</i></span> character string, where each character is <span class=\"tex-span\"><i>A</i></span> or <span class=\"tex-span\"><i>B</i></span>. </li><li> Bob will then choose an arbitrary prefix or suffix of the string, and flip each character in that suffix (i.e. change <span class=\"tex-span\"><i>A</i></span> to <span class=\"tex-span\"><i>B</i></span> and <span class=\"tex-span\"><i>B</i></span> to <span class=\"tex-span\"><i>A</i></span>). He can do this step at most once. </li><li> Alice will get all the pieces marked <span class=\"tex-span\"><i>A</i></span> and Bob will get all the pieces marked <span class=\"tex-span\"><i>B</i></span>. </li></ol><p>The strength of a player is then the sum of strengths of the pieces in the group.</p><p>Given Alice's initial split into two teams, help Bob determine an optimal strategy. Return the maximum strength he can achieve.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains integer <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">1&le;<i>n</i>&le;5&middot;10<sup class=\"upper-index\">5</sup></span>) &minus; the number of game pieces.</p><p>The second line contains <span class=\"tex-span\"><i>n</i></span> integers <span class=\"tex-span\"><i>p</i><sub class=\"lower-index\"><i>i</i></sub></span> (<span class=\"tex-span\">1&le;<i>p</i><sub class=\"lower-index\"><i>i</i></sub>&le;10<sup class=\"upper-index\">9</sup></span>) &minus; the strength of the <span class=\"tex-span\"><i>i</i></span>-th piece.</p><p>The third line contains <span class=\"tex-span\"><i>n</i></span> characters <span class=\"tex-span\"><i>A</i></span> or <span class=\"tex-span\"><i>B</i></span> &minus; the assignment of teams after the first step (after Alice's step).</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print the only integer <span class=\"tex-span\"><i>a</i></span> &minus; the maximum strength Bob can achieve.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>5<br/>1 2 3 4 5<br/>ABABA<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>11<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>5<br/>1 2 3 4 5<br/>AAAAA<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>15<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>1<br/>1<br/>B<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>1<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>In the first sample Bob should flip the suffix of length one.</p><p>In the second sample Bob should flip the prefix or the suffix (here it is the same) of length <span class=\"tex-span\">5</span>.</p><p>In the third sample Bob should do nothing.</p></div></div><p> </p></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 1500, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}