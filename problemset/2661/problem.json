{"title": "Group Photo 2 (online mirror version)", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">B. Group Photo 2 (online mirror version)</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Many years have passed, and <span class=\"tex-span\"><i>n</i></span> friends met at a party again. Technologies have leaped forward since the last meeting, cameras with timer appeared and now it is not obligatory for one of the friends to stand with a camera, and, thus, being absent on the photo.</p><p>Simply speaking, the process of photographing can be described as follows. Each friend occupies a rectangle of pixels on the photo: the <span class=\"tex-span\"><i>i</i></span>-th of them in a standing state occupies a <span class=\"tex-span\"><i>w</i><sub class=\"lower-index\"><i>i</i></sub></span> pixels wide and a <span class=\"tex-span\"><i>h</i><sub class=\"lower-index\"><i>i</i></sub></span> pixels high rectangle. But also, each person can lie down for the photo, and then he will occupy a <span class=\"tex-span\"><i>h</i><sub class=\"lower-index\"><i>i</i></sub></span> pixels wide and a <span class=\"tex-span\"><i>w</i><sub class=\"lower-index\"><i>i</i></sub></span> pixels high rectangle.</p><p>The total photo will have size <span class=\"tex-span\"><i>W</i>&times;<i>H</i></span>, where <span class=\"tex-span\"><i>W</i></span> is the total width of all the people rectangles, and <span class=\"tex-span\"><i>H</i></span> is the maximum of the heights. The friends want to determine what minimum area the group photo can they obtain if no more than <span class=\"tex-span\"><i>n</i>/2</span> of them can lie on the ground (it would be strange if more than <span class=\"tex-span\"><i>n</i>/2</span> gentlemen lie on the ground together, isn't it?..)</p><p>Help them to achieve this goal.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains integer <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">1&le;<i>n</i>&le;1000</span>) &minus; the number of friends.</p><p>The next <span class=\"tex-span\"><i>n</i></span> lines have two integers <span class=\"tex-span\"><i>w</i><sub class=\"lower-index\"><i>i</i></sub>,<i>h</i><sub class=\"lower-index\"><i>i</i></sub></span> (<span class=\"tex-span\">1&le;<i>w</i><sub class=\"lower-index\"><i>i</i></sub>,<i>h</i><sub class=\"lower-index\"><i>i</i></sub>&le;1000</span>) each, representing the size of the rectangle, corresponding to the <span class=\"tex-span\"><i>i</i></span>-th friend.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print a single integer equal to the minimum possible area of the photo containing all friends if no more than <span class=\"tex-span\"><i>n</i>/2</span> of them can lie on the ground.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>3<br/>10 1<br/>20 2<br/>30 3<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>180<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>3<br/>3 1<br/>2 2<br/>4 3<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>21<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>1<br/>5 10<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>50<br/></pre></div></div></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}