{"title": "Minimal Labels", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">E. Minimal Labels</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>1 second</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>You are given a directed acyclic graph with <span class=\"tex-span\"><i>n</i></span> vertices and <span class=\"tex-span\"><i>m</i></span> edges. There are no self-loops or multiple edges between any pair of vertices. Graph can be disconnected.</p><p>You should assign labels to all vertices in such a way that:</p><ul> <li> Labels form a valid permutation of length <span class=\"tex-span\"><i>n</i></span> &minus; an integer sequence such that each integer from <span class=\"tex-span\">1</span> to <span class=\"tex-span\"><i>n</i></span> appears exactly once in it. </li><li> If there exists an edge from vertex <span class=\"tex-span\"><i>v</i></span> to vertex <span class=\"tex-span\"><i>u</i></span> then <span class=\"tex-span\"><i>label</i><sub class=\"lower-index\"><i>v</i></sub></span> should be smaller than <span class=\"tex-span\"><i>label</i><sub class=\"lower-index\"><i>u</i></sub></span>. </li><li> Permutation should be lexicographically smallest among all suitable. </li></ul><p>Find such sequence of labels to satisfy all the conditions.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains two integer numbers <span class=\"tex-span\"><i>n</i></span>, <span class=\"tex-span\"><i>m</i></span> (<span class=\"tex-span\">2&le;<i>n</i>&le;10<sup class=\"upper-index\">5</sup>,1&le;<i>m</i>&le;10<sup class=\"upper-index\">5</sup></span>).</p><p>Next <span class=\"tex-span\"><i>m</i></span> lines contain two integer numbers <span class=\"tex-span\"><i>v</i></span> and <span class=\"tex-span\"><i>u</i></span> (<span class=\"tex-span\">1&le;<i>v</i>,<i>u</i>&le;<i>n</i>,<i>v</i>&ne;<i>u</i></span>) &minus; edges of the graph. Edges are directed, graph doesn't contain loops or multiple edges.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print <span class=\"tex-span\"><i>n</i></span> numbers &minus; lexicographically smallest correct permutation of labels of vertices.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>3 3<br/>1 2<br/>1 3<br/>3 2<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>1 3 2 <br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>4 5<br/>3 1<br/>4 1<br/>2 3<br/>3 4<br/>2 4<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>4 1 2 3 <br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>5 4<br/>3 1<br/>2 1<br/>2 3<br/>4 5<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>3 1 2 4 5 <br/></pre></div></div></div></div><p> </p></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 1000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}