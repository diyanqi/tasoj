{"title": "Sagheer and Apple Tree", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">E. Sagheer and Apple Tree</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Sagheer is playing a game with his best friend Soliman. He brought a tree with <span class=\"tex-span\"><i>n</i></span> nodes numbered from <span class=\"tex-span\">1</span> to <span class=\"tex-span\"><i>n</i></span> and rooted at node <span class=\"tex-span\">1</span>. The <span class=\"tex-span\"><i>i</i></span>-th node has <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> apples. This tree has a special property: the lengths of all paths from the root to any leaf have the same parity (i.e. all paths have even length or all paths have odd length).</p><p>Sagheer and Soliman will take turns to play. Soliman will make the first move. The player who can't make a move loses.</p><p>In each move, the current player will pick a single node, take a non-empty subset of apples from it and do one of the following two things:</p><ol> <li> eat the apples, if the node is a leaf. </li><li> move the apples to one of the children, if the node is non-leaf. </li></ol><p>Before Soliman comes to start playing, Sagheer will make <span class=\"tex-font-style-bf\">exactly one change</span> to the tree. He will pick two different nodes <span class=\"tex-span\"><i>u</i></span> and <span class=\"tex-span\"><i>v</i></span> and swap the apples of <span class=\"tex-span\"><i>u</i></span> with the apples of <span class=\"tex-span\"><i>v</i></span>.</p><p>Can you help Sagheer count the number of ways to make the swap (i.e. to choose <span class=\"tex-span\"><i>u</i></span> and <span class=\"tex-span\"><i>v</i></span>) after which he will win the game if both players play optimally? <span class=\"tex-span\">(<i>u</i>,<i>v</i>)</span> and <span class=\"tex-span\">(<i>v</i>,<i>u</i>)</span> are considered to be the same pair.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line will contain one integer <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">2&le;<i>n</i>&le;10<sup class=\"upper-index\">5</sup>)</span> &minus; the number of nodes in the apple tree.</p><p>The second line will contain <span class=\"tex-span\"><i>n</i></span> integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">1</sub>,<i>a</i><sub class=\"lower-index\">2</sub>,...,<i>a</i><sub class=\"lower-index\"><i>n</i></sub></span> (<span class=\"tex-span\">1&le;<i>a</i><sub class=\"lower-index\"><i>i</i></sub>&le;10<sup class=\"upper-index\">7</sup></span>) &minus; the number of apples on each node of the tree.</p><p>The third line will contain <span class=\"tex-span\"><i>n</i>-1</span> integers <span class=\"tex-span\"><i>p</i><sub class=\"lower-index\">2</sub>,<i>p</i><sub class=\"lower-index\">3</sub>,...,<i>p</i><sub class=\"lower-index\"><i>n</i></sub></span> (<span class=\"tex-span\">1&le;<i>p</i><sub class=\"lower-index\"><i>i</i></sub>&le;<i>n</i></span>) &minus; the parent of each node of the tree. Node <span class=\"tex-span\"><i>i</i></span> has parent <span class=\"tex-span\"><i>p</i><sub class=\"lower-index\"><i>i</i></sub></span> (for <span class=\"tex-span\">2&le;<i>i</i>&le;<i>n</i></span>). Node <span class=\"tex-span\">1</span> is the root of the tree.</p><p>It is guaranteed that the input describes a valid tree, and the lengths of all paths from the root to any leaf will have the same parity.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>On a single line, print the number of different pairs of nodes <span class=\"tex-span\">(<i>u</i>,<i>v</i>)</span>, <span class=\"tex-span\"><i>u</i>&ne;<i>v</i></span> such that if they start playing after swapping the apples of both nodes, Sagheer will win the game. <span class=\"tex-span\">(<i>u</i>,<i>v</i>)</span> and <span class=\"tex-span\">(<i>v</i>,<i>u</i>)</span> are considered to be the same pair.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>3<br/>2 2 3<br/>1 1<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>1<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>3<br/>1 2 3<br/>1 1<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>0<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>8<br/>7 2 2 5 4 3 1 1<br/>1 1 1 4 4 5 6<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>4<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>In the first sample, Sagheer can only win if he swapped node <span class=\"tex-span\">1</span> with node <span class=\"tex-span\">3</span>. In this case, both leaves will have <span class=\"tex-span\">2</span> apples. If Soliman makes a move in a leaf node, Sagheer can make the same move in the other leaf. If Soliman moved some apples from a root to a leaf, Sagheer will eat those moved apples. Eventually, Soliman will not find a move.</p><p>In the second sample, There is no swap that will make Sagheer win the game.</p><p>Note that Sagheer must make the swap even if he can win with the initial tree.</p></div></div><p> </p></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}