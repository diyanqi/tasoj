{"title": "Road to Home", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">E. Road to Home</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Once Danil the student was returning home from tram stop lately by straight road of length <span class=\"tex-span\"><i>L</i></span>. The stop is located at the point <span class=\"tex-span\"><i>x</i>=0</span>, but the Danil's home&minus; at the point <span class=\"tex-span\"><i>x</i>=<i>L</i></span>. Danil goes from <span class=\"tex-span\"><i>x</i>=0</span> to <span class=\"tex-span\"><i>x</i>=<i>L</i></span> with a constant speed and does not change direction of movement.</p><p>There are <span class=\"tex-span\"><i>n</i></span> street lights at the road, each of which lights some continuous segment of the road. All of the <span class=\"tex-span\"><i>n</i></span> lightened segments do not share common points.</p><p>Danil loves to sing, thus he wants to sing his favourite song over and over again during his walk. As soon as non-lightened segments of the road scare him, he sings only when he goes through the lightened segments.</p><p>Danil passes distance <span class=\"tex-span\"><i>p</i></span> while performing his favourite song once. Danil can't start another performance if the segment passed while performing is not fully lightened. Moreover, if Danil has taken a pause between two performances, he is not performing while not having passed a segment of length at least <span class=\"tex-span\"><i>t</i></span>. Formally,</p><ol> <li> Danil can start single performance at a point <span class=\"tex-span\"><i>x</i></span> only if every point of segment <span class=\"tex-span\">[<i>x</i>,<i>x</i>+<i>p</i>]</span> is lightened; </li><li> If Danil has finished performing at a point <span class=\"tex-span\"><i>x</i>+<i>p</i></span>, then the next performance can be started only at a point <span class=\"tex-span\"><i>y</i></span> such that <span class=\"tex-span\"><i>y</i>=<i>x</i>+<i>p</i></span> or <span class=\"tex-span\"><i>y</i>&ge;<i>x</i>+<i>p</i>+<i>t</i></span> satisfying the statement under the point <span class=\"tex-span\">1</span>. </li></ol><center> <img class=\"tex-graphics\" src=\"http://cf.hustoj.com:80/userfiles/image/288e1a578fc79d87b36e71ff97bbed13b786f25a4040.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> <span class=\"tex-font-size-small\">Blue half-circles denote performances. Please note that just after Danil has taken a pause in performing, he has not sang for a path of length of at least <span class=\"tex-span\"><i>t</i></span>.</span> </center><p>Determine how many times Danil can perform his favourite song during his walk from <span class=\"tex-span\"><i>x</i>=0</span> to <span class=\"tex-span\"><i>x</i>=<i>L</i></span>.</p><p>Please note that Danil does not break a single performance, thus, started singing another time, he finishes singing when having a segment of length of <span class=\"tex-span\"><i>p</i></span> passed from the performance start point.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line of the input contains four integers <span class=\"tex-span\"><i>L</i></span>, <span class=\"tex-span\"><i>n</i></span>, <span class=\"tex-span\"><i>p</i></span> and <span class=\"tex-span\"><i>t</i></span> (<span class=\"tex-span\">1&le;<i>L</i>&le;10<sup class=\"upper-index\">9</sup></span>, <span class=\"tex-span\">0&le;<i>n</i>&le;100000</span>, <span class=\"tex-span\">1&le;<i>p</i>&le;10<sup class=\"upper-index\">9</sup></span>, <span class=\"tex-span\">1&le;<i>t</i>&le;10<sup class=\"upper-index\">9</sup></span>)&minus; the length of the Danil's path, the number of street lights at the road, the distance Danil passes while doing single performance and the minimum distance of pause respectively.</p><p>The next <span class=\"tex-span\"><i>n</i></span> lines describe segments lightened by street lights. <span class=\"tex-span\"><i>i</i></span>-th of them contains two integers <span class=\"tex-span\"><i>l</i><sub class=\"lower-index\"><i>i</i></sub>,<i>r</i><sub class=\"lower-index\"><i>i</i></sub></span> (<span class=\"tex-span\">0&le;<i>l</i><sub class=\"lower-index\"><i>i</i></sub>&lt;<i>r</i><sub class=\"lower-index\"><i>i</i></sub>&le;<i>L</i></span>)&minus; the endpoints of the segment lightened by <span class=\"tex-span\"><i>i</i></span>-th street light. It is guaranteed that no two segments are intersecting, nesting, or touching each other. The segments are given in the order from left to right.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print the only integer&minus; the maximum number of performances of Danil's favourite song on the path from <span class=\"tex-span\"><i>x</i>=0</span> to <span class=\"tex-span\"><i>x</i>=<i>L</i></span>.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>17 2 2 6<br/>0 9<br/>13 17<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>5<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>12 2 2 2<br/>0 5<br/>6 11<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>4<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>12 2 2 4<br/>0 5<br/>6 11<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>3<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>The first sample case is just about corresponding to the picture from the statement.</p></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}