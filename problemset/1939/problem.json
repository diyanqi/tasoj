{"title": "Dense Subsequence", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">D. Dense Subsequence</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>You are given a string <span class=\"tex-span\"><i>s</i></span>, consisting of lowercase English letters, and the integer <span class=\"tex-span\"><i>m</i></span>.</p><p>One should choose some symbols from the given string so that any contiguous subsegment of length <span class=\"tex-span\"><i>m</i></span> has at least one selected symbol. Note that here we choose positions of symbols, not the symbols themselves.</p><p>Then one uses the chosen symbols to form <span class=\"tex-font-style-bf\">a new string</span>. All symbols from the chosen position should be used, but we are allowed to rearrange them in any order.</p><p>Formally, we choose a subsequence of indices <span class=\"tex-span\">1&le;<i>i</i><sub class=\"lower-index\">1</sub>&lt;<i>i</i><sub class=\"lower-index\">2</sub>&lt;...&lt;<i>i</i><sub class=\"lower-index\"><i>t</i></sub>&le;|<i>s</i>|</span>. The selected sequence must meet the following condition: for every <span class=\"tex-span\"><i>j</i></span> such that <span class=\"tex-span\">1&le;<i>j</i>&le;|<i>s</i>|-<i>m</i>+1</span>, there must be at least one selected index that belongs to the segment <span class=\"tex-span\">[<i>j</i>,<i>j</i>+<i>m</i>-1]</span>, i.e. there should exist a <span class=\"tex-span\"><i>k</i></span> from <span class=\"tex-span\">1</span> to <span class=\"tex-span\"><i>t</i></span>, such that <span class=\"tex-span\"><i>j</i>&le;<i>i</i><sub class=\"lower-index\"><i>k</i></sub>&le;<i>j</i>+<i>m</i>-1</span>.</p><p>Then we take any permutation <span class=\"tex-span\"><i>p</i></span> of the selected indices and form a new string <span class=\"tex-span\"><i>s</i><sub class=\"lower-index\"><i>i</i><sub class=\"lower-index\"><i>p</i><sub class=\"lower-index\">1</sub></sub></sub><i>s</i><sub class=\"lower-index\"><i>i</i><sub class=\"lower-index\"><i>p</i><sub class=\"lower-index\">2</sub></sub></sub>... <i>s</i><sub class=\"lower-index\"><i>i</i><sub class=\"lower-index\"><i>p</i><sub class=\"lower-index\"><i>t</i></sub></sub></sub></span>.</p><p>Find the lexicographically smallest string, that can be obtained using this procedure.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line of the input contains a single integer <span class=\"tex-span\"><i>m</i></span> (<span class=\"tex-span\">1&le;<i>m</i>&le;100000</span>).</p><p>The second line contains the string <span class=\"tex-span\"><i>s</i></span> consisting of lowercase English letters. It is guaranteed that this string is non-empty and its length doesn't exceed <span class=\"tex-span\">100000</span>. It is also guaranteed that the number <span class=\"tex-span\"><i>m</i></span> doesn't exceed the length of the string <span class=\"tex-span\"><i>s</i></span>.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print the single line containing the lexicographically smallest string, that can be obtained using the procedure described above.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>3<br/>cbabc<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>a<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>2<br/>abcab<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>aab<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>3<br/>bcabcbaccba<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>aaabb<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>In the first sample, one can choose the subsequence <span class=\"tex-span\">{3}</span> and form a string \"<span class=\"tex-font-style-tt\">a</span>\".</p><p>In the second sample, one can choose the subsequence <span class=\"tex-span\">{1,2,4}</span> (symbols on this positions are '<span class=\"tex-font-style-tt\">a</span>', '<span class=\"tex-font-style-tt\">b</span>' and '<span class=\"tex-font-style-tt\">a</span>') and rearrange the chosen symbols to form a string \"<span class=\"tex-font-style-tt\">aab</span>\".</p></div></div><p> </p></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}