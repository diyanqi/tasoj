{"title": "Little Robber Girl's Zoo", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">B. Little Robber Girl's Zoo</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Little Robber Girl likes to scare animals in her zoo for fun. She decided to arrange the animals in a row in the order of non-decreasing height. However, the animals were so scared that they couldn't stay in the right places.</p><p>The robber girl was angry at first, but then she decided to arrange the animals herself. She repeatedly names numbers <span class=\"tex-span\"><i>l</i></span> and <span class=\"tex-span\"><i>r</i></span> such that <span class=\"tex-span\"><i>r</i>-<i>l</i>+1</span> is even. After that animals that occupy positions between <span class=\"tex-span\"><i>l</i></span> and <span class=\"tex-span\"><i>r</i></span> inclusively are rearranged as follows: the animal at position <span class=\"tex-span\"><i>l</i></span> swaps places with the animal at position <span class=\"tex-span\"><i>l</i>+1</span>, the animal <span class=\"tex-span\"><i>l</i>+2</span> swaps with the animal <span class=\"tex-span\"><i>l</i>+3</span>, ..., finally, the animal at position <span class=\"tex-span\"><i>r</i>-1</span> swaps with the animal <span class=\"tex-span\"><i>r</i></span>.</p><p>Help the robber girl to arrange the animals in the order of non-decreasing height. You should name at most <span class=\"tex-span\">20000</span> segments, since otherwise the robber girl will become bored and will start scaring the animals again.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains a single integer <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">1&le;<i>n</i>&le;100</span>)&minus; number of animals in the robber girl's zoo.</p><p>The second line contains <span class=\"tex-span\"><i>n</i></span> space-separated integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">1</sub>,<i>a</i><sub class=\"lower-index\">2</sub>,...,<i>a</i><sub class=\"lower-index\"><i>n</i></sub></span> (<span class=\"tex-span\">1&le;<i>a</i><sub class=\"lower-index\"><i>i</i></sub>&le;10<sup class=\"upper-index\">9</sup></span>), where <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> is the height of the animal occupying the <span class=\"tex-span\"><i>i</i></span>-th place.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print the sequence of operations that will rearrange the animals by non-decreasing height.</p><p>The output should contain several lines, <span class=\"tex-span\"><i>i</i></span>-th of the lines should contain two space-separated integers <span class=\"tex-span\"><i>l</i><sub class=\"lower-index\"><i>i</i></sub></span> and <span class=\"tex-span\"><i>r</i><sub class=\"lower-index\"><i>i</i></sub></span> (<span class=\"tex-span\">1&le;<i>l</i><sub class=\"lower-index\"><i>i</i></sub>&lt;<i>r</i><sub class=\"lower-index\"><i>i</i></sub>&le;<i>n</i></span>)&minus; descriptions of segments the robber girl should name. The segments should be described in the order the operations are performed.</p><p>The number of operations should not exceed <span class=\"tex-span\">20000</span>.</p><p>If the animals are arranged correctly from the start, you are allowed to output nothing.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>4<br/>2 1 4 3<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>1 4<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>7<br/>36 28 57 39 66 69 68<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>1 4<br/>6 7<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>5<br/>1 2 1 2 1<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>2 5<br/>3 4<br/>1 4<br/>1 4<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>Note that you don't have to minimize the number of operations. Any solution that performs at most <span class=\"tex-span\">20000</span> operations is allowed.</p></div></div><p> </p></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}