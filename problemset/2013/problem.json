{"title": "Working routine", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">E. Working routine</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2.5 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Vasiliy finally got to work, where there is a huge amount of tasks waiting for him. Vasiliy is given a matrix consisting of <span class=\"tex-span\"><i>n</i></span> rows and <span class=\"tex-span\"><i>m</i></span> columns and <span class=\"tex-span\"><i>q</i></span> tasks. Each task is to swap two submatrices of the given matrix.</p><p>For each task Vasiliy knows six integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span>, <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\"><i>i</i></sub></span>, <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\"><i>i</i></sub></span>, <span class=\"tex-span\"><i>d</i><sub class=\"lower-index\"><i>i</i></sub></span>, <span class=\"tex-span\"><i>h</i><sub class=\"lower-index\"><i>i</i></sub></span>, <span class=\"tex-span\"><i>w</i><sub class=\"lower-index\"><i>i</i></sub></span>, where <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> is the index of the row where the top-left corner of the first rectangle is located, <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\"><i>i</i></sub></span> is the index of its column, <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\"><i>i</i></sub></span> is the index of the row of the top-left corner of the second rectangle, <span class=\"tex-span\"><i>d</i><sub class=\"lower-index\"><i>i</i></sub></span> is the index of its column, <span class=\"tex-span\"><i>h</i><sub class=\"lower-index\"><i>i</i></sub></span> is the height of the rectangle and <span class=\"tex-span\"><i>w</i><sub class=\"lower-index\"><i>i</i></sub></span> is its width.</p><p>It's guaranteed that two rectangles in one query do not overlap and do not touch, that is, no cell belongs to both rectangles, and no two cells belonging to different rectangles <span class=\"tex-font-style-bf\">share a side</span>. However, rectangles are allowed to share an angle.</p><p>Vasiliy wants to know how the matrix will look like after all tasks are performed.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line of the input contains three integers <span class=\"tex-span\"><i>n</i></span>, <span class=\"tex-span\"><i>m</i></span> and <span class=\"tex-span\"><i>q</i></span> (<span class=\"tex-span\">2&le;<i>n</i>,<i>m</i>&le;1000</span>, <span class=\"tex-span\">1&le;<i>q</i>&le;10000</span>)&minus; the number of rows and columns in matrix, and the number of tasks Vasiliy has to perform.</p><p>Then follow <span class=\"tex-span\"><i>n</i></span> lines containing <span class=\"tex-span\"><i>m</i></span> integers <span class=\"tex-span\"><i>v</i><sub class=\"lower-index\"><i>i</i>,<i>j</i></sub></span> (<span class=\"tex-span\">1&le;<i>v</i><sub class=\"lower-index\"><i>i</i>,<i>j</i></sub>&le;10<sup class=\"upper-index\">9</sup></span>) each&minus; initial values of the cells of the matrix.</p><p>Each of the following <span class=\"tex-span\"><i>q</i></span> lines contains six integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span>, <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\"><i>i</i></sub></span>, <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\"><i>i</i></sub></span>, <span class=\"tex-span\"><i>d</i><sub class=\"lower-index\"><i>i</i></sub></span>, <span class=\"tex-span\"><i>h</i><sub class=\"lower-index\"><i>i</i></sub></span>, <span class=\"tex-span\"><i>w</i><sub class=\"lower-index\"><i>i</i></sub></span> (<span class=\"tex-span\">1&le;<i>a</i><sub class=\"lower-index\"><i>i</i></sub>,<i>c</i><sub class=\"lower-index\"><i>i</i></sub>,<i>h</i><sub class=\"lower-index\"><i>i</i></sub>&le;<i>n</i></span>, <span class=\"tex-span\">1&le;<i>b</i><sub class=\"lower-index\"><i>i</i></sub>,<i>d</i><sub class=\"lower-index\"><i>i</i></sub>,<i>w</i><sub class=\"lower-index\"><i>i</i></sub>&le;<i>m</i></span>).</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print <span class=\"tex-span\"><i>n</i></span> lines containing <span class=\"tex-span\"><i>m</i></span> integers each&minus; the resulting matrix.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>4 4 2<br/>1 1 2 2<br/>1 1 2 2<br/>3 3 4 4<br/>3 3 4 4<br/>1 1 3 3 2 2<br/>3 1 1 3 2 2<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>4 4 3 3<br/>4 4 3 3<br/>2 2 1 1<br/>2 2 1 1<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>4 2 1<br/>1 1<br/>1 1<br/>2 2<br/>2 2<br/>1 1 4 1 1 2<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>2 2<br/>1 1<br/>2 2<br/>1 1<br/></pre></div></div></div></div><p> </p></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2500, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}