{"title": "Lucky Permutation", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">C. Lucky Permutation</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p><span class=\"tex-font-style-it\">Petya loves lucky numbers. Everybody knows that lucky numbers are positive integers whose decimal representation contains only the lucky digits <span class=\"tex-font-style-bf\">4</span> and <span class=\"tex-font-style-bf\">7</span>. For example, numbers <span class=\"tex-font-style-bf\">47</span>, <span class=\"tex-font-style-bf\">744</span>, <span class=\"tex-font-style-bf\">4</span> are lucky and <span class=\"tex-font-style-bf\">5</span>, <span class=\"tex-font-style-bf\">17</span>, <span class=\"tex-font-style-bf\">467</span> are not.</span></p><p>One day Petya dreamt of a lexicographically <span class=\"tex-span\"><i>k</i></span>-th permutation of integers from <span class=\"tex-span\">1</span> to <span class=\"tex-span\"><i>n</i></span>. Determine how many lucky numbers in the permutation are located on the positions whose indexes are also lucky numbers.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains two integers <span class=\"tex-span\"><i>n</i></span> and <span class=\"tex-span\"><i>k</i></span> <span class=\"tex-span\">(1&le;<i>n</i>,<i>k</i>&le;10<sup class=\"upper-index\">9</sup>)</span> &minus; the number of elements in the permutation and the lexicographical number of the permutation.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>If the <span class=\"tex-span\"><i>k</i></span>-th permutation of numbers from <span class=\"tex-span\">1</span> to <span class=\"tex-span\"><i>n</i></span> does not exist, print the single number \"-1\" (without the quotes). Otherwise, print the answer to the problem: the number of such indexes <span class=\"tex-span\"><i>i</i></span>, that <span class=\"tex-span\"><i>i</i></span> and <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> are both lucky numbers.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>7 4<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>1<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>4 7<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>1<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>A permutation is an ordered set of <span class=\"tex-span\"><i>n</i></span> elements, where each integer from <span class=\"tex-span\">1</span> to <span class=\"tex-span\"><i>n</i></span> occurs exactly once. The element of permutation in position with index <span class=\"tex-span\"><i>i</i></span> is denoted as <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> (<span class=\"tex-span\">1&le;<i>i</i>&le;<i>n</i></span>). Permutation <span class=\"tex-span\"><i>a</i></span> is lexicographically smaller that permutation <span class=\"tex-span\"><i>b</i></span> if there is such a <span class=\"tex-span\"><i>i</i></span> (<span class=\"tex-span\">1&le;<i>i</i>&le;<i>n</i></span>), that <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub>&lt;<i>b</i><sub class=\"lower-index\"><i>i</i></sub></span>, and for any <span class=\"tex-span\"><i>j</i></span> (<span class=\"tex-span\">1&le;<i>j</i>&lt;<i>i</i></span>) <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>j</i></sub>=<i>b</i><sub class=\"lower-index\"><i>j</i></sub></span>. Let's make a list of all possible permutations of <span class=\"tex-span\"><i>n</i></span> elements and sort it in the order of lexicographical increasing. Then the lexicographically <span class=\"tex-span\"><i>k</i></span>-th permutation is the <span class=\"tex-span\"><i>k</i></span>-th element of this list of permutations.</p><p>In the first sample the permutation looks like that:</p><p><span class=\"tex-font-style-tt\">1 2 3 4 6 7 5</span></p><p>The only suitable position is 4.</p><p>In the second sample the permutation looks like that:</p><p><span class=\"tex-font-style-tt\">2 1 3 4</span></p><p>The only suitable position is 4.</p></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}