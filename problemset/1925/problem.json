{"title": "Interview with Oleg", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">A. Interview with Oleg</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>1 second</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Polycarp has interviewed Oleg and has written the interview down without punctuation marks and spaces to save time. Thus, the interview is now a string <span class=\"tex-span\"><i>s</i></span> consisting of <span class=\"tex-span\"><i>n</i></span> lowercase English letters.</p><p>There is a filler word <span class=\"tex-font-style-tt\">ogo</span> in Oleg's speech. All words that can be obtained from <span class=\"tex-font-style-tt\">ogo</span> by adding <span class=\"tex-font-style-tt\">go</span> several times to the end of it are also considered to be fillers. For example, the words <span class=\"tex-font-style-tt\">ogo</span>, <span class=\"tex-font-style-tt\">ogogo</span>, <span class=\"tex-font-style-tt\">ogogogo</span> are fillers, but the words <span class=\"tex-font-style-tt\">go</span>, <span class=\"tex-font-style-tt\">og</span>, <span class=\"tex-font-style-tt\">ogog</span>, <span class=\"tex-font-style-tt\">ogogog</span> and <span class=\"tex-font-style-tt\">oggo</span> are not fillers.</p><p>The fillers have maximal size, for example, for <span class=\"tex-font-style-tt\">ogogoo</span> speech we can't consider <span class=\"tex-font-style-tt\">ogo</span> a filler and <span class=\"tex-font-style-tt\">goo</span> as a normal phrase. We should consider <span class=\"tex-font-style-tt\">ogogo</span> as a filler here.</p><p>To print the interview, Polycarp has to replace each of the fillers with three asterisks. Note that a filler word is replaced with exactly three asterisks regardless of its length.</p><p>Polycarp has dealt with this problem in no time. Can you do the same? The clock is ticking!</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains a positive integer <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">1&le;<i>n</i>&le;100</span>)&minus; the length of the interview.</p><p>The second line contains the string <span class=\"tex-span\"><i>s</i></span> of length <span class=\"tex-span\"><i>n</i></span>, consisting of lowercase English letters.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print the interview text after the replacement of each of the fillers with \"<span class=\"tex-font-style-tt\">***</span>\". It is allowed for the substring \"<span class=\"tex-font-style-tt\">***</span>\" to have several consecutive occurences.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>7<br/>aogogob<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>a***b<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>13<br/>ogogmgogogogo<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>***gmg***<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>9<br/>ogoogoogo<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>*********<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>The first sample contains one filler word <span class=\"tex-font-style-tt\">ogogo</span>, so the interview for printing is \"<span class=\"tex-font-style-tt\">a***b</span>\".</p><p>The second sample contains two fillers <span class=\"tex-font-style-tt\">ogo</span> and <span class=\"tex-font-style-tt\">ogogogo</span>. Thus, the interview is transformed to \"<span class=\"tex-font-style-tt\">***gmg***</span>\".</p></div></div><p> </p></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 1000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}