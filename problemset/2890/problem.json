{"title": "Tree", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">D. Tree</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Little X has a tree consisting of <span class=\"tex-span\"><i>n</i></span> nodes (they are numbered from <span class=\"tex-span\">1</span> to <span class=\"tex-span\"><i>n</i></span>). Each edge of the tree has a positive length. Let's define the distance between two nodes <span class=\"tex-span\"><i>v</i></span> and <span class=\"tex-span\"><i>u</i></span> (we'll denote it <span class=\"tex-span\"><i>d</i>(<i>v</i>,<i>u</i>)</span>) as the sum of the lengths of edges in the shortest path between <span class=\"tex-span\"><i>v</i></span> and <span class=\"tex-span\"><i>u</i></span>. </p><p>A permutation <span class=\"tex-span\"><i>p</i></span> is a sequence of <span class=\"tex-span\"><i>n</i></span> distinct integers <span class=\"tex-span\"><i>p</i><sub class=\"lower-index\">1</sub>,<i>p</i><sub class=\"lower-index\">2</sub>,...,<i>p</i><sub class=\"lower-index\"><i>n</i></sub></span> <span class=\"tex-span\">(1&le;<i>p</i><sub class=\"lower-index\"><i>i</i></sub>&le;<i>n</i>)</span>. Little X wants to find a permutation <span class=\"tex-span\"><i>p</i></span> such that sum <img align=\"middle\" class=\"tex-formula\" src=\"http://cf.hustoj.com:80/userfiles/image/57a92e05a1aaed7355bfb67c93bb53c1bc40cb5313.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> is maximal possible. If there are multiple optimal permutations, he wants to find the lexicographically smallest one. Help him with the task!</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains an integer <span class=\"tex-span\"><i>n</i>(1&le;<i>n</i>&le;10<sup class=\"upper-index\">5</sup>)</span>.</p><p>Each of the next <span class=\"tex-span\"><i>n</i>-1</span> lines contains three space separated integers <span class=\"tex-span\"><i>u</i><sub class=\"lower-index\"><i>i</i></sub>,<i>v</i><sub class=\"lower-index\"><i>i</i></sub>,<i>w</i><sub class=\"lower-index\"><i>i</i></sub>(1&le;<i>u</i><sub class=\"lower-index\"><i>i</i></sub>,<i>v</i><sub class=\"lower-index\"><i>i</i></sub>&le;<i>n</i>;1&le;<i>w</i><sub class=\"lower-index\"><i>i</i></sub>&le;10<sup class=\"upper-index\">5</sup>)</span>, denoting an edge between nodes <span class=\"tex-span\"><i>u</i><sub class=\"lower-index\"><i>i</i></sub></span> and <span class=\"tex-span\"><i>v</i><sub class=\"lower-index\"><i>i</i></sub></span> with length equal to <span class=\"tex-span\"><i>w</i><sub class=\"lower-index\"><i>i</i></sub></span>.</p><p>It is guaranteed that these edges form a tree.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>In the first line print the maximum possible value of the described sum. In the second line print <span class=\"tex-span\"><i>n</i></span> integers, representing the lexicographically smallest permutation.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>2<br/>1 2 3<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>6<br/>2 1<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>5<br/>1 2 2<br/>1 3 3<br/>2 4 4<br/>2 5 5<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>32<br/>2 1 4 5 3<br/></pre></div></div></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}