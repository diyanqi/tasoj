{"title": "Bear and Rectangle Strips", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">E. Bear and Rectangle Strips</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>3 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Limak has a grid that consists of <span class=\"tex-span\">2</span> rows and <span class=\"tex-span\"><i>n</i></span> columns. The <span class=\"tex-span\"><i>j</i></span>-th cell in the <span class=\"tex-span\"><i>i</i></span>-th row contains an integer <span class=\"tex-span\"><i>t</i><sub class=\"lower-index\"><i>i</i>,<i>j</i></sub></span> which can be positive, negative or zero.</p><p>A non-empty rectangle of cells is called <span class=\"tex-font-style-it\">nice</span> if and only if the sum of numbers in its cells is equal to <span class=\"tex-span\">0</span>.</p><p>Limak wants to choose some nice rectangles and give them to his friends, as gifts. No two chosen rectangles should share a cell. What is the maximum possible number of nice rectangles Limak can choose?</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line of the input contains an integer <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">1&le;<i>n</i>&le;300000</span>)&minus; the number of columns in the grid.</p><p>The next two lines contain numbers in the grid. The <span class=\"tex-span\"><i>i</i></span>-th of those two lines contains <span class=\"tex-span\"><i>n</i></span> integers <span class=\"tex-span\"><i>t</i><sub class=\"lower-index\"><i>i</i>,1</sub>,<i>t</i><sub class=\"lower-index\"><i>i</i>,2</sub>,...,<i>t</i><sub class=\"lower-index\"><i>i</i>,<i>n</i></sub></span> (<span class=\"tex-span\">-10<sup class=\"upper-index\">9</sup>&le;<i>t</i><sub class=\"lower-index\"><i>i</i>,<i>j</i></sub>&le;10<sup class=\"upper-index\">9</sup></span>).</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print one integer, denoting the maximum possible number of cell-disjoint nice rectangles.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>6<br/>70 70 70 70 70 -15<br/>90 -60 -30 30 -30 15<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>3<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>4<br/>0 -1 0 0<br/>0 0 1 0<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>6<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>3<br/>1000000000 999999999 -1000000000<br/>999999999 -1000000000 -999999998<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>1<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>In the first sample, there are four nice rectangles:</p><center> <img class=\"tex-graphics\" src=\"http://cf.hustoj.com:80/userfiles/image/49ffede1ca9b6c0504e6fec4a5187e1ccffa1eb54545.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> </center><p>Limak can't choose all of them because they are not disjoint. He should take three nice rectangles: those denoted as blue frames on the drawings.</p><p>In the second sample, it's optimal to choose six nice rectangles, each consisting of one cell with a number <span class=\"tex-span\">0</span>.</p><p>In the third sample, the only nice rectangle is the whole grid&minus; the sum of all numbers is <span class=\"tex-span\">0</span>. Clearly, Limak can choose at most one nice rectangle, so the answer is <span class=\"tex-span\">1</span>.</p></div></div><p> </p></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 3000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}