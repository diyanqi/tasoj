{"title": "Vladik and Entertaining Flags", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">E. Vladik and Entertaining Flags</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>In his spare time Vladik estimates beauty of the flags.</p><p>Every flag could be represented as the matrix <span class=\"tex-span\"><i>n</i>&times;<i>m</i></span> which consists of positive integers.</p><p>Let's define the beauty of the flag as number of components in its matrix. We call component a set of cells with same numbers and between any pair of cells from that set there exists a path through adjacent cells from same component. Here is the example of the partitioning some flag matrix into components:</p><center> <img class=\"tex-graphics\" src=\"http://cf.hustoj.com:80/userfiles/image/f48d24e3d7532269daec0d61b8e255e03a98f59450.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> </center><p>But this time he decided to change something in the process. Now he wants to estimate not the entire flag, but some segment. Segment of flag can be described as a submatrix of the flag matrix with opposite corners at <span class=\"tex-span\">(1,<i>l</i>)</span> and <span class=\"tex-span\">(<i>n</i>,<i>r</i>)</span>, where conditions <span class=\"tex-span\">1&le;<i>l</i>&le;<i>r</i>&le;<i>m</i></span> are satisfied.</p><p>Help Vladik to calculate the beauty for some segments of the given flag.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>First line contains three space-separated integers <span class=\"tex-span\"><i>n</i></span>, <span class=\"tex-span\"><i>m</i></span>, <span class=\"tex-span\"><i>q</i></span> (<span class=\"tex-span\">1&le;<i>n</i>&le;10</span>, <span class=\"tex-span\">1&le;<i>m</i>,<i>q</i>&le;10<sup class=\"upper-index\">5</sup></span>)&minus; dimensions of flag matrix and number of segments respectively.</p><p>Each of next <span class=\"tex-span\"><i>n</i></span> lines contains <span class=\"tex-span\"><i>m</i></span> space-separated integers&minus; description of flag matrix. All elements of flag matrix is positive integers not exceeding <span class=\"tex-span\">10<sup class=\"upper-index\">6</sup></span>.</p><p>Each of next <span class=\"tex-span\"><i>q</i></span> lines contains two space-separated integers <span class=\"tex-span\"><i>l</i></span>, <span class=\"tex-span\"><i>r</i></span> (<span class=\"tex-span\">1&le;<i>l</i>&le;<i>r</i>&le;<i>m</i></span>)&minus; borders of segment which beauty Vladik wants to know.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>For each segment print the result on the corresponding line.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Example</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>4 5 4<br/>1 1 1 1 1<br/>1 2 2 3 3<br/>1 1 1 2 5<br/>4 4 5 5 5<br/>1 5<br/>2 5<br/>1 2<br/>4 5<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>6<br/>7<br/>3<br/>4<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>Partitioning on components for every segment from first test case:</p><p><img class=\"tex-graphics\" src=\"http://cf.hustoj.com:80/userfiles/image/048973050f5e34dc435eb7d0e3838b8017d2ab7a50.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/></p></div></div><p> </p></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}