{"title": "On Changing Tree", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">C. On Changing Tree</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>You are given a rooted tree consisting of <span class=\"tex-span\"><i>n</i></span> vertices numbered from <span class=\"tex-span\">1</span> to <span class=\"tex-span\"><i>n</i></span>. The root of the tree is a vertex number <span class=\"tex-span\">1</span>.</p><p>Initially all vertices contain number <span class=\"tex-span\">0</span>. Then come <span class=\"tex-span\"><i>q</i></span> queries, each query has one of the two types:</p><ul> <li> The format of the query: <span class=\"tex-span\">1</span> <span class=\"tex-span\"><i>v</i></span> <span class=\"tex-span\"><i>x</i></span> <span class=\"tex-span\"><i>k</i></span>. In response to the query, you need to add to the number at vertex <span class=\"tex-span\"><i>v</i></span> number <span class=\"tex-span\"><i>x</i></span>; to the numbers at the <span class=\"tex-font-style-bf\">descendants</span> of vertex <span class=\"tex-span\"><i>v</i></span> at distance <span class=\"tex-span\">1</span>, add <span class=\"tex-span\"><i>x</i>-<i>k</i></span>; and so on, to the numbers written in the descendants of vertex <span class=\"tex-span\"><i>v</i></span> at distance <span class=\"tex-span\"><i>i</i></span>, you need to add <span class=\"tex-span\"><i>x</i>-(<i>i</i>&middot;<i>k</i>)</span>. The distance between two vertices is the number of edges in the shortest path between these vertices. </li><li> The format of the query: <span class=\"tex-span\">2</span> <span class=\"tex-span\"><i>v</i></span>. In reply to the query you should print the number written in vertex <span class=\"tex-span\"><i>v</i></span> modulo <span class=\"tex-span\">1000000007</span> <span class=\"tex-span\">(10<sup class=\"upper-index\">9</sup>+7)</span>. </li></ul><p>Process the queries given in the input.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains integer <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">1&le;<i>n</i>&le;3&middot;10<sup class=\"upper-index\">5</sup></span>) &minus;the number of vertices in the tree. The second line contains <span class=\"tex-span\"><i>n</i>-1</span> integers <span class=\"tex-span\"><i>p</i><sub class=\"lower-index\">2</sub>,<i>p</i><sub class=\"lower-index\">3</sub>,... <i>p</i><sub class=\"lower-index\"><i>n</i></sub></span> (<span class=\"tex-span\">1&le;<i>p</i><sub class=\"lower-index\"><i>i</i></sub>&lt;<i>i</i></span>), where <span class=\"tex-span\"><i>p</i><sub class=\"lower-index\"><i>i</i></sub></span> is the number of the vertex that is the parent of vertex <span class=\"tex-span\"><i>i</i></span> in the tree.</p><p>The third line contains integer <span class=\"tex-span\"><i>q</i></span> (<span class=\"tex-span\">1&le;<i>q</i>&le;3&middot;10<sup class=\"upper-index\">5</sup></span>) &minus; the number of queries. Next <span class=\"tex-span\"><i>q</i></span> lines contain the queries, one per line. The first number in the line is <span class=\"tex-span\"><i>type</i></span>. It represents the type of the query. If <span class=\"tex-span\"><i>type</i>=1</span>, then next follow space-separated integers <span class=\"tex-span\"><i>v</i>,<i>x</i>,<i>k</i></span> (<span class=\"tex-span\">1&le;<i>v</i>&le;<i>n</i></span>; <span class=\"tex-span\">0&le;<i>x</i>&lt;10<sup class=\"upper-index\">9</sup>+7</span>; <span class=\"tex-span\">0&le;<i>k</i>&lt;10<sup class=\"upper-index\">9</sup>+7</span>). If <span class=\"tex-span\"><i>type</i>=2</span>, then next follows integer <span class=\"tex-span\"><i>v</i></span> (<span class=\"tex-span\">1&le;<i>v</i>&le;<i>n</i></span>) &minus;the vertex where you need to find the value of the number.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>For each query of the second type print on a single line the number written in the vertex from the query. Print the number modulo <span class=\"tex-span\">1000000007</span> <span class=\"tex-span\">(10<sup class=\"upper-index\">9</sup>+7)</span>.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>3<br/>1 1<br/>3<br/>1 1 2 1<br/>2 1<br/>2 2<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>2<br/>1<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>You can read about a rooted tree here: <span class=\"tex-font-style-tt\">http://en.wikipedia.org/wiki/Tree_(graph_theory)</span>.</p></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}