{"title": "Not Wool Sequences", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">A. Not Wool Sequences</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>1 second</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>A sequence of non-negative integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">1</sub>,<i>a</i><sub class=\"lower-index\">2</sub>,...,<i>a</i><sub class=\"lower-index\"><i>n</i></sub></span> of length <span class=\"tex-span\"><i>n</i></span> is called a <span class=\"tex-font-style-it\">wool sequence</span> if and only if there exists two integers <span class=\"tex-span\"><i>l</i></span> and <span class=\"tex-span\"><i>r</i></span> <span class=\"tex-span\">(1&le;<i>l</i>&le;<i>r</i>&le;<i>n</i>)</span> such that <img align=\"middle\" class=\"tex-formula\" src=\"http://cf.hustoj.com:80/userfiles/image/4e51316ea76ab3968d54ff14c04ee2d4109156cf52.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/>. In other words each wool sequence contains a subsequence of consecutive elements with xor equal to 0.</p><p>The expression <img align=\"middle\" class=\"tex-formula\" src=\"http://cf.hustoj.com:80/userfiles/image/6414d574a1ee8301d86f2c5d15396d8dc4328313525252.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> means applying the operation of a bitwise xor to numbers <span class=\"tex-span\"><i>x</i></span> and <span class=\"tex-span\"><i>y</i></span>. The given operation exists in all modern programming languages, for example, in languages <span class=\"tex-font-style-it\">C++</span> and <span class=\"tex-font-style-it\">Java</span> it is marked as \"<span class=\"tex-font-style-tt\">^</span>\", in <span class=\"tex-font-style-it\">Pascal</span> &minus; as \"<span class=\"tex-font-style-tt\">xor</span>\".</p><p>In this problem you are asked to compute the number of sequences made of <span class=\"tex-span\"><i>n</i></span> integers from 0 to <span class=\"tex-span\">2<sup class=\"upper-index\"><i>m</i></sup>-1</span> that are not a wool sequence. You should print this number modulo <span class=\"tex-span\">1000000009</span> <span class=\"tex-span\">(10<sup class=\"upper-index\">9</sup>+9)</span>.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The only line of input contains two space-separated integers <span class=\"tex-span\"><i>n</i></span> and <span class=\"tex-span\"><i>m</i></span> <span class=\"tex-span\">(1&le;<i>n</i>,<i>m</i>&le;10<sup class=\"upper-index\">5</sup>)</span>.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print the required number of sequences modulo <span class=\"tex-span\">1000000009</span> <span class=\"tex-span\">(10<sup class=\"upper-index\">9</sup>+9)</span> on the only line of output.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>3 2<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>6<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>Sequences of length <span class=\"tex-span\">3</span> made of integers 0, 1, 2 and 3 that are not a wool sequence are <span class=\"tex-font-style-tt\">(1, 3, 1)</span>, <span class=\"tex-font-style-tt\">(1, 2, 1)</span>, <span class=\"tex-font-style-tt\">(2, 1, 2)</span>, <span class=\"tex-font-style-tt\">(2, 3, 2)</span>, <span class=\"tex-font-style-tt\">(3, 1, 3)</span> and <span class=\"tex-font-style-tt\">(3, 2, 3)</span>.</p></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 1000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}