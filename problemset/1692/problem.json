{"title": "Rap God", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">D. Rap God</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>7 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Rick is in love with Unity. But Mr. Meeseeks also love Unity, so Rick and Mr. Meeseeks are \"love rivals\". </p><p>Unity loves rap, so it decided that they have to compete in a rap game (battle) in order to choose the best. Rick is too nerds, so instead he's gonna make his verse with running his original algorithm on lyrics \"Rap God\" song.</p><center> <img class=\"tex-graphics\" src=\"http://cf.hustoj.com:80/userfiles/image/09f275fb3048256e25f9839f45d75673507df32b46.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> </center><p>His algorithm is a little bit complicated. He's made a tree with <span class=\"tex-span\"><i>n</i></span> vertices numbered from <span class=\"tex-span\">1</span> to <span class=\"tex-span\"><i>n</i></span> and there's a lowercase english letter written on each edge. He denotes <span class=\"tex-span\"><i>str</i>(<i>a</i>,<i>b</i>)</span> to be the string made by writing characters on edges on the shortest path from <span class=\"tex-span\"><i>a</i></span> to <span class=\"tex-span\"><i>b</i></span> one by one (a string of length equal to distance of <span class=\"tex-span\"><i>a</i></span> to <span class=\"tex-span\"><i>b</i></span>). Note that <span class=\"tex-span\"><i>str</i>(<i>a</i>,<i>b</i>)</span> is reverse of <span class=\"tex-span\"><i>str</i>(<i>b</i>,<i>a</i>)</span> and <span class=\"tex-span\"><i>str</i>(<i>a</i>,<i>a</i>)</span> is empty.</p><p> In order to make the best verse he can, he needs to answer some queries, but he's not a computer scientist and is not able to answer those queries, so he asked you to help him. Each query is characterized by two vertices <span class=\"tex-span\"><i>x</i></span> and <span class=\"tex-span\"><i>y</i></span> (<span class=\"tex-span\"><i>x</i>&ne;<i>y</i></span>). Answer to this query is the number of vertices like <span class=\"tex-span\"><i>z</i></span> such that <span class=\"tex-span\"><i>z</i>&ne;<i>x</i>,<i>z</i>&ne;<i>y</i></span> and <span class=\"tex-span\"><i>str</i>(<i>x</i>,<i>y</i>)</span> is lexicographically larger than <span class=\"tex-span\"><i>str</i>(<i>x</i>,<i>z</i>)</span>.</p><p>String <span class=\"tex-span\"><i>x</i>=<i>x</i><sub class=\"lower-index\">1</sub><i>x</i><sub class=\"lower-index\">2</sub>...<i>x</i><sub class=\"lower-index\">|<i>x</i>|</sub></span> is lexicographically larger than string <span class=\"tex-span\"><i>y</i>=<i>y</i><sub class=\"lower-index\">1</sub><i>y</i><sub class=\"lower-index\">2</sub>...<i>y</i><sub class=\"lower-index\">|<i>y</i>|</sub></span>, if either <span class=\"tex-span\">|<i>x</i>|&gt;|<i>y</i>|</span> and <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\">1</sub>=<i>y</i><sub class=\"lower-index\">1</sub>,<i>x</i><sub class=\"lower-index\">2</sub>=<i>y</i><sub class=\"lower-index\">2</sub>,...,<i>x</i><sub class=\"lower-index\">|<i>y</i>|</sub>=<i>y</i><sub class=\"lower-index\">|<i>y</i>|</sub></span>, or exists such number <span class=\"tex-span\"><i>r</i> (<i>r</i>&lt;|<i>x</i>|,<i>r</i>&lt;|<i>y</i>|)</span>, that <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\">1</sub>=<i>y</i><sub class=\"lower-index\">1</sub>,<i>x</i><sub class=\"lower-index\">2</sub>=<i>y</i><sub class=\"lower-index\">2</sub>,...,<i>x</i><sub class=\"lower-index\"><i>r</i></sub>=<i>y</i><sub class=\"lower-index\"><i>r</i></sub></span> and <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\"><i>r</i>+1</sub>&gt;<i>y</i><sub class=\"lower-index\"><i>r</i>+1</sub></span>. Characters are compared like their ASCII codes (or alphabetic order).</p><p>Help Rick get the girl (or whatever gender Unity has).</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line of input contain two integers <span class=\"tex-span\"><i>n</i></span> and <span class=\"tex-span\"><i>q</i></span> (<span class=\"tex-span\">2&le;<i>n</i>&le;20000</span>, <span class=\"tex-span\">1&le;<i>q</i>&le;20000</span>) &minus; number of vertices in tree and number of queries respectively.</p><p>The next <span class=\"tex-span\"><i>n</i>-1</span> lines contain the edges. Each line contains two integers <span class=\"tex-span\"><i>v</i></span> and <span class=\"tex-span\"><i>u</i></span> (endpoints of the edge) followed by an English lowercase letter <span class=\"tex-span\"><i>c</i></span> (<span class=\"tex-span\">1&le;<i>v</i>,<i>u</i>&le;<i>n</i>,<i>v</i>&ne;<i>u</i></span>).</p><p>The next <span class=\"tex-span\"><i>q</i></span> line contain the queries. Each line contains two integers <span class=\"tex-span\"><i>x</i></span> and <span class=\"tex-span\"><i>y</i></span> (<span class=\"tex-span\">1&le;<i>x</i>,<i>y</i>&le;<i>n</i>,<i>x</i>&ne;<i>y</i></span>).</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print the answer for each query in one line.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>4 3<br/>4 1 t<br/>3 2 p<br/>1 2 s<br/>3 2<br/>1 3<br/>2 1<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>0<br/>1<br/>1<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>8 4<br/>4 6 p<br/>3 7 o<br/>7 8 p<br/>4 5 d<br/>1 3 o<br/>4 3 p<br/>3 2 e<br/>8 6<br/>3 7<br/>8 1<br/>4 3<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>6<br/>1<br/>3<br/>1<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>Here's the tree of first sample testcase:</p><center> <img class=\"tex-graphics\" src=\"http://cf.hustoj.com:80/userfiles/image/dfc9d8cfa2118fce59109597b75becdd4ff2767146.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> </center><p>Here's the tree of second sample testcase:</p><center> <img class=\"tex-graphics\" src=\"http://cf.hustoj.com:80/userfiles/image/d8cba8fa60ea208621bd63d2443afd291cf9f32f46.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> </center><p>In this test:</p><ul> <li> <span class=\"tex-span\"><i>str</i>(8,1)</span> = <span class=\"tex-font-style-tt\">poo</span> </li><li> <span class=\"tex-span\"><i>str</i>(8,2)</span> = <span class=\"tex-font-style-tt\">poe</span> </li><li> <span class=\"tex-span\"><i>str</i>(8,3)</span> = <span class=\"tex-font-style-tt\">po</span> </li><li> <span class=\"tex-span\"><i>str</i>(8,4)</span> = <span class=\"tex-font-style-tt\">pop</span> </li><li> <span class=\"tex-span\"><i>str</i>(8,5)</span> = <span class=\"tex-font-style-tt\">popd</span> </li><li> <span class=\"tex-span\"><i>str</i>(8,6)</span> = <span class=\"tex-font-style-tt\">popp</span> </li><li> <span class=\"tex-span\"><i>str</i>(8,7)</span> = <span class=\"tex-font-style-tt\">p</span> </li></ul><p>So, for the first query, <img align=\"middle\" class=\"tex-formula\" src=\"http://cf.hustoj.com:80/userfiles/image/c441d50dff243da618b79814c01de60d704fd5c446.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> and for the third query <img align=\"middle\" class=\"tex-formula\" src=\"http://cf.hustoj.com:80/userfiles/image/630f9fcf72e983c83f039ac98012a4a56d84f24c46.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> is the answer.</p></div></div><p> </p></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 7000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}