{"title": "Rook, Bishop and King", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">A. Rook, Bishop and King</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>1 second</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Little Petya is learning to play chess. He has already learned how to move a king, a rook and a bishop. Let us remind you the rules of moving chess pieces. A chessboard is 64 square fields organized into an <span class=\"tex-span\">8&times;8</span> table. A field is represented by a pair of integers <span class=\"tex-span\">(<i>r</i>,<i>c</i>)</span> &minus; the number of the row and the number of the column (in a classical game the columns are traditionally indexed by letters). Each chess piece takes up exactly one field. To make a move is to move a chess piece, the pieces move by the following rules:</p><ul> <li> A rook moves any number of fields horizontally or vertically. </li><li> A bishop moves any number of fields diagonally. </li><li> A king moves one field in any direction &minus; horizontally, vertically or diagonally. </li></ul><center> <img class=\"tex-graphics\" src=\"http://cf.hustoj.com:80/userfiles/image/5696ee223c3f5ca8aeccf266b44d7eb12d6694ef3.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> <span class=\"tex-font-size-small\">The pieces move like that</span> </center><p>Petya is thinking about the following problem: what minimum number of moves is needed for each of these pieces to move from field <span class=\"tex-span\">(<i>r</i><sub class=\"lower-index\">1</sub>,<i>c</i><sub class=\"lower-index\">1</sub>)</span> to field <span class=\"tex-span\">(<i>r</i><sub class=\"lower-index\">2</sub>,<i>c</i><sub class=\"lower-index\">2</sub>)</span>? At that, we assume that there are no more pieces besides this one on the board. Help him solve this problem.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The input contains four integers <span class=\"tex-span\"><i>r</i><sub class=\"lower-index\">1</sub>,<i>c</i><sub class=\"lower-index\">1</sub>,<i>r</i><sub class=\"lower-index\">2</sub>,<i>c</i><sub class=\"lower-index\">2</sub></span> (<span class=\"tex-span\">1&le;<i>r</i><sub class=\"lower-index\">1</sub>,<i>c</i><sub class=\"lower-index\">1</sub>,<i>r</i><sub class=\"lower-index\">2</sub>,<i>c</i><sub class=\"lower-index\">2</sub>&le;8</span>) &minus; the coordinates of the starting and the final field. The starting field doesn't coincide with the final one.</p><p>You can assume that the chessboard rows are numbered from top to bottom 1 through 8, and the columns are numbered from left to right 1 through 8.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print three space-separated integers: the minimum number of moves the rook, the bishop and the king (in this order) is needed to move from field <span class=\"tex-span\">(<i>r</i><sub class=\"lower-index\">1</sub>,<i>c</i><sub class=\"lower-index\">1</sub>)</span> to field <span class=\"tex-span\">(<i>r</i><sub class=\"lower-index\">2</sub>,<i>c</i><sub class=\"lower-index\">2</sub>)</span>. If a piece cannot make such a move, print a 0 instead of the corresponding number.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>4 3 1 6<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>2 1 3<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>5 5 5 6<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>1 0 1<br/></pre></div></div></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 1000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}