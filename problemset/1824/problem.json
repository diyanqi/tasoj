{"title": "PolandBall and Gifts", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">F. PolandBall and Gifts</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>1.5 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>It's Christmas time! PolandBall and his friends will be giving themselves gifts. There are <span class=\"tex-span\"><i>n</i></span> Balls overall. Each Ball has someone for whom he should bring a present according to some permutation <span class=\"tex-span\"><i>p</i></span>, <span class=\"tex-span\"><i>p</i><sub class=\"lower-index\"><i>i</i></sub>&ne;<i>i</i></span> for all <span class=\"tex-span\"><i>i</i></span>.</p><p>Unfortunately, Balls are quite clumsy. We know earlier that exactly <span class=\"tex-span\"><i>k</i></span> of them will forget to bring their gift. A Ball number <span class=\"tex-span\"><i>i</i></span> will get his present if the following two constraints will hold: </p><ol> <li> Ball number <span class=\"tex-span\"><i>i</i></span> will bring the present he should give. </li><li> Ball <span class=\"tex-span\"><i>x</i></span> such that <span class=\"tex-span\"><i>p</i><sub class=\"lower-index\"><i>x</i></sub>=<i>i</i></span> will bring his present. </li></ol><p>What is minimum and maximum possible number of kids who will <span class=\"tex-font-style-bf\">not</span> get their present if exactly <span class=\"tex-span\"><i>k</i></span> Balls will forget theirs?</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line of input contains two integers <span class=\"tex-span\"><i>n</i></span> and <span class=\"tex-span\"><i>k</i></span> (<span class=\"tex-span\">2&le;<i>n</i>&le;10<sup class=\"upper-index\">6</sup></span>, <span class=\"tex-span\">0&le;<i>k</i>&le;<i>n</i></span>), representing the number of Balls and the number of Balls who will forget to bring their presents. </p><p>The second line contains the permutation <span class=\"tex-span\"><i>p</i></span> of integers from <span class=\"tex-span\">1</span> to <span class=\"tex-span\"><i>n</i></span>, where <span class=\"tex-span\"><i>p</i><sub class=\"lower-index\"><i>i</i></sub></span> is the index of Ball who should get a gift from the <span class=\"tex-span\"><i>i</i></span>-th Ball. For all <span class=\"tex-span\"><i>i</i></span>, <span class=\"tex-span\"><i>p</i><sub class=\"lower-index\"><i>i</i></sub>&ne;<i>i</i></span> holds.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>You should output two values&minus; minimum and maximum possible number of Balls who will <span class=\"tex-font-style-bf\">not</span> get their presents, in that order.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>5 2<br/>3 4 1 5 2<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>2 4</pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>10 1<br/>2 3 4 5 6 7 8 9 10 1<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>2 2</pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>In the first sample, if the third and the first balls will forget to bring their presents, they will be th only balls not getting a present. Thus the minimum answer is <span class=\"tex-span\">2</span>. However, if the first ans the second balls will forget to bring their presents, then only the fifth ball will get a present. So, the maximum answer is <span class=\"tex-span\">4</span>.</p></div></div><p> </p></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 1500, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}