{"title": "Little Elephant and Inversions", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">E. Little Elephant and Inversions</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>The Little Elephant has array <span class=\"tex-span\"><i>a</i></span>, consisting of <span class=\"tex-span\"><i>n</i></span> positive integers, indexed from 1 to <span class=\"tex-span\"><i>n</i></span>. Let's denote the number with index <span class=\"tex-span\"><i>i</i></span> as <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span>.</p><p>The Little Elephant wants to count, how many pairs of integers <span class=\"tex-span\"><i>l</i></span> and <span class=\"tex-span\"><i>r</i></span> are there, such that <span class=\"tex-span\">1&le;<i>l</i>&lt;<i>r</i>&le;<i>n</i></span> and sequence <span class=\"tex-span\"><i>b</i>=<i>a</i><sub class=\"lower-index\">1</sub><i>a</i><sub class=\"lower-index\">2</sub>... <i>a</i><sub class=\"lower-index\"><i>l</i></sub><i>a</i><sub class=\"lower-index\"><i>r</i></sub><i>a</i><sub class=\"lower-index\"><i>r</i>+1</sub>... <i>a</i><sub class=\"lower-index\"><i>n</i></sub></span> has no more than <span class=\"tex-span\"><i>k</i></span> inversions. </p><p>An <span class=\"tex-font-style-it\">inversion</span> in sequence <span class=\"tex-span\"><i>b</i></span> is a pair of elements of the sequence <span class=\"tex-span\"><i>b</i></span>, that change their relative order after a stable sorting of the sequence. In other words, an inversion is a pair of integers <span class=\"tex-span\"><i>i</i></span> and <span class=\"tex-span\"><i>j</i></span>, such that <span class=\"tex-span\">1&le;<i>i</i>&lt;<i>j</i>&le;|<i>b</i>|</span> and <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\"><i>i</i></sub>&gt;<i>b</i><sub class=\"lower-index\"><i>j</i></sub></span>, where <span class=\"tex-span\">|<i>b</i>|</span> is the length of sequence <span class=\"tex-span\"><i>b</i></span>, and <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\"><i>j</i></sub></span> is its <span class=\"tex-span\"><i>j</i></span>-th element.</p><p>Help the Little Elephant and count the number of the described pairs.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains two integers <span class=\"tex-span\"><i>n</i></span> and <span class=\"tex-span\"><i>k</i></span> <span class=\"tex-span\">(2&le;<i>n</i>&le;10<sup class=\"upper-index\">5</sup>,0&le;<i>k</i>&le;10<sup class=\"upper-index\">18</sup>)</span> &minus; the size of array <span class=\"tex-span\"><i>a</i></span> and the maximum allowed number of inversions respectively. The next line contains <span class=\"tex-span\"><i>n</i></span> positive integers, separated by single spaces, <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">1</sub>,<i>a</i><sub class=\"lower-index\">2</sub>,...,<i>a</i><sub class=\"lower-index\"><i>n</i></sub></span> <span class=\"tex-span\">(1&le;<i>a</i><sub class=\"lower-index\"><i>i</i></sub>&le;10<sup class=\"upper-index\">9</sup>)</span> &minus; elements of array <span class=\"tex-span\"><i>a</i></span>.</p><p>Please, do not use the %lld specifier to read or write 64-bit integers in C++. It is preferred to use cin, cout streams or the %I64d specifier.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>In a single line print a single number &minus; the answer to the problem.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>3 1<br/>1 3 2<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>3<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>5 2<br/>1 3 2 1 7<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>6<br/></pre></div></div></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}