{"title": "Economy Game", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">B. Economy Game</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>1 second</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Kolya is developing an economy simulator game. His most favourite part of the development process is in-game testing. Once he was entertained by the testing so much, that he found out his game-coin score become equal to <span class=\"tex-span\">0</span>.</p><p>Kolya remembers that at the beginning of the game his game-coin score was equal to <span class=\"tex-span\"><i>n</i></span> and that he have bought only some houses (for <span class=\"tex-span\">1234567</span> game-coins each), cars (for <span class=\"tex-span\">123456</span> game-coins each) and computers (for <span class=\"tex-span\">1234</span> game-coins each).</p><p>Kolya is now interested, whether he could have spent all of his initial <span class=\"tex-span\"><i>n</i></span> game-coins buying only houses, cars and computers or there is a bug in the game. Formally, is there a triple of non-negative integers <span class=\"tex-span\"><i>a</i></span>, <span class=\"tex-span\"><i>b</i></span> and <span class=\"tex-span\"><i>c</i></span> such that <span class=\"tex-span\"><i>a</i>&times;1234567+<i>b</i>&times;123456+<i>c</i>&times;1234=<i>n</i></span>?</p><p>Please help Kolya answer this question.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line of the input contains a single integer <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">1&le;<i>n</i>&le;10<sup class=\"upper-index\">9</sup></span>)&minus; Kolya's initial game-coin score.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print \"<span class=\"tex-font-style-tt\">YES</span>\" (without quotes) if it's possible that Kolya spent all of his initial <span class=\"tex-span\"><i>n</i></span> coins buying only houses, cars and computers. Otherwise print \"<span class=\"tex-font-style-tt\">NO</span>\" (without quotes).</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>1359257<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>YES</pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>17851817<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>NO</pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>In the first sample, one of the possible solutions is to buy one house, one car and one computer, spending <span class=\"tex-span\">1234567+123456+1234=1359257</span> game-coins in total.</p></div></div><p> </p></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 1000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}