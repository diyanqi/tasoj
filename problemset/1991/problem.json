{"title": "Coloring Trees", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">C. Coloring Trees</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>ZS the Coder and Chris the Baboon has arrived at Udayland! They walked in the park where <span class=\"tex-span\"><i>n</i></span> trees grow. They decided to be naughty and color the trees in the park. The trees are numbered with integers from <span class=\"tex-span\">1</span> to <span class=\"tex-span\"><i>n</i></span> from left to right.</p><p>Initially, tree <span class=\"tex-span\"><i>i</i></span> has color <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\"><i>i</i></sub></span>. ZS the Coder and Chris the Baboon recognizes only <span class=\"tex-span\"><i>m</i></span> different colors, so <span class=\"tex-span\">0&le;<i>c</i><sub class=\"lower-index\"><i>i</i></sub>&le;<i>m</i></span>, where <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\"><i>i</i></sub>=0</span> means that tree <span class=\"tex-span\"><i>i</i></span> is <span class=\"tex-font-style-it\">uncolored</span>.</p><p>ZS the Coder and Chris the Baboon decides to color only the uncolored trees, i.e. the trees with <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\"><i>i</i></sub>=0</span>. They can color each of them them in any of the <span class=\"tex-span\"><i>m</i></span> colors from <span class=\"tex-span\">1</span> to <span class=\"tex-span\"><i>m</i></span>. Coloring the <span class=\"tex-span\"><i>i</i></span>-th tree with color <span class=\"tex-span\"><i>j</i></span> requires exactly <span class=\"tex-span\"><i>p</i><sub class=\"lower-index\"><i>i</i>,<i>j</i></sub></span> litres of paint.</p><p>The two friends define the <span class=\"tex-font-style-it\">beauty</span> of a coloring of the trees as the <span class=\"tex-font-style-bf\">minimum</span> number of contiguous groups (each group contains some subsegment of trees) you can split all the <span class=\"tex-span\"><i>n</i></span> trees into so that each group contains trees of the same color. For example, if the colors of the trees from left to right are <span class=\"tex-span\">2,1,1,1,3,2,2,3,1,3</span>, the beauty of the coloring is <span class=\"tex-span\">7</span>, since we can partition the trees into <span class=\"tex-span\">7</span> contiguous groups of the same color : <span class=\"tex-span\">{2},{1,1,1},{3},{2,2},{3},{1},{3}</span>. </p><p>ZS the Coder and Chris the Baboon wants to color all uncolored trees so that the beauty of the coloring is <span class=\"tex-font-style-bf\">exactly</span> <span class=\"tex-span\"><i>k</i></span>. They need your help to determine the minimum amount of paint (in litres) needed to finish the job.</p><p>Please note that the friends can't color the trees that are already colored.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains three integers, <span class=\"tex-span\"><i>n</i></span>, <span class=\"tex-span\"><i>m</i></span> and <span class=\"tex-span\"><i>k</i></span> (<span class=\"tex-span\">1&le;<i>k</i>&le;<i>n</i>&le;100</span>, <span class=\"tex-span\">1&le;<i>m</i>&le;100</span>)&minus; the number of trees, number of colors and beauty of the resulting coloring respectively.</p><p>The second line contains <span class=\"tex-span\"><i>n</i></span> integers <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\">1</sub>,<i>c</i><sub class=\"lower-index\">2</sub>,...,<i>c</i><sub class=\"lower-index\"><i>n</i></sub></span> (<span class=\"tex-span\">0&le;<i>c</i><sub class=\"lower-index\"><i>i</i></sub>&le;<i>m</i></span>), the initial colors of the trees. <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\"><i>i</i></sub></span> equals to <span class=\"tex-span\">0</span> if the tree number <span class=\"tex-span\"><i>i</i></span> is uncolored, otherwise the <span class=\"tex-span\"><i>i</i></span>-th tree has color <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\"><i>i</i></sub></span>.</p><p>Then <span class=\"tex-span\"><i>n</i></span> lines follow. Each of them contains <span class=\"tex-span\"><i>m</i></span> integers. The <span class=\"tex-span\"><i>j</i></span>-th number on the <span class=\"tex-span\"><i>i</i></span>-th of them line denotes <span class=\"tex-span\"><i>p</i><sub class=\"lower-index\"><i>i</i>,<i>j</i></sub></span> (<span class=\"tex-span\">1&le;<i>p</i><sub class=\"lower-index\"><i>i</i>,<i>j</i></sub>&le;10<sup class=\"upper-index\">9</sup></span>)&minus; the amount of litres the friends need to color <span class=\"tex-span\"><i>i</i></span>-th tree with color <span class=\"tex-span\"><i>j</i></span>. <span class=\"tex-span\"><i>p</i><sub class=\"lower-index\"><i>i</i>,<i>j</i></sub></span>'s are specified even for the initially colored trees, but such trees still can't be colored.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print a single integer, the minimum amount of paint needed to color the trees. If there are no valid tree colorings of beauty <span class=\"tex-span\"><i>k</i></span>, print <span class=\"tex-span\">-1</span>.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>3 2 2<br/>0 0 0<br/>1 2<br/>3 4<br/>5 6<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>10</pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>3 2 2<br/>2 1 2<br/>1 3<br/>2 4<br/>3 5<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>-1</pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>3 2 2<br/>2 0 0<br/>1 3<br/>2 4<br/>3 5<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>5</pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>3 2 3<br/>2 1 2<br/>1 3<br/>2 4<br/>3 5<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>0</pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>In the first sample case, coloring the trees with colors <span class=\"tex-span\">2,1,1</span> minimizes the amount of paint used, which equals to <span class=\"tex-span\">2+3+5=10</span>. Note that <span class=\"tex-span\">1,1,1</span> would not be valid because the beauty of such coloring equals to <span class=\"tex-span\">1</span> (<span class=\"tex-span\">{1,1,1}</span> is a way to group the trees into a single group of the same color).</p><p>In the second sample case, all the trees are colored, but the beauty of the coloring is <span class=\"tex-span\">3</span>, so there is no valid coloring, and the answer is <span class=\"tex-span\">-1</span>.</p><p>In the last sample case, all the trees are colored and the beauty of the coloring matches <span class=\"tex-span\"><i>k</i></span>, so no paint is used and the answer is <span class=\"tex-span\">0</span>. </p></div></div><p> </p></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}