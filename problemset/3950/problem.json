{"title": "Encrypting Messages", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">D2. Encrypting Messages</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>The Smart Beaver from ABBYY invented a new message encryption method and now wants to check its performance. Checking it manually is long and tiresome, so he decided to ask the ABBYY Cup contestants for help.</p><p>A message is a sequence of <span class=\"tex-span\"><i>n</i></span> integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">1</sub>,<i>a</i><sub class=\"lower-index\">2</sub>,...,<i>a</i><sub class=\"lower-index\"><i>n</i></sub></span>. Encryption uses a key which is a sequence of <span class=\"tex-span\"><i>m</i></span> integers <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\">1</sub>,<i>b</i><sub class=\"lower-index\">2</sub>,...,<i>b</i><sub class=\"lower-index\"><i>m</i></sub></span> (<span class=\"tex-span\"><i>m</i>&le;<i>n</i></span>). All numbers from the message and from the key belong to the interval from <span class=\"tex-span\">0</span> to <span class=\"tex-span\"><i>c</i>-1</span>, inclusive, and all the calculations are performed modulo <span class=\"tex-span\"><i>c</i></span>.</p><p>Encryption is performed in <span class=\"tex-span\"><i>n</i>-<i>m</i>+1</span> steps. On the first step we add to each number <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">1</sub>,<i>a</i><sub class=\"lower-index\">2</sub>,...,<i>a</i><sub class=\"lower-index\"><i>m</i></sub></span> a corresponding number <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\">1</sub>,<i>b</i><sub class=\"lower-index\">2</sub>,...,<i>b</i><sub class=\"lower-index\"><i>m</i></sub></span>. On the second step we add to each number <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">2</sub>,<i>a</i><sub class=\"lower-index\">3</sub>,...,<i>a</i><sub class=\"lower-index\"><i>m</i>+1</sub></span> (changed on the previous step) a corresponding number <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\">1</sub>,<i>b</i><sub class=\"lower-index\">2</sub>,...,<i>b</i><sub class=\"lower-index\"><i>m</i></sub></span>. And so on: on step number <span class=\"tex-span\"><i>i</i></span> we add to each number <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub>,<i>a</i><sub class=\"lower-index\"><i>i</i>+1</sub>,...,<i>a</i><sub class=\"lower-index\"><i>i</i>+<i>m</i>-1</sub></span> a corresponding number <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\">1</sub>,<i>b</i><sub class=\"lower-index\">2</sub>,...,<i>b</i><sub class=\"lower-index\"><i>m</i></sub></span>. The result of the encryption is the sequence <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">1</sub>,<i>a</i><sub class=\"lower-index\">2</sub>,...,<i>a</i><sub class=\"lower-index\"><i>n</i></sub></span> after <span class=\"tex-span\"><i>n</i>-<i>m</i>+1</span> steps.</p><p>Help the Beaver to write a program that will encrypt messages in the described manner.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first input line contains three integers <span class=\"tex-span\"><i>n</i></span>, <span class=\"tex-span\"><i>m</i></span> and <span class=\"tex-span\"><i>c</i></span>, separated by single spaces. </p><p>The second input line contains <span class=\"tex-span\"><i>n</i></span> integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> (<span class=\"tex-span\">0&le;<i>a</i><sub class=\"lower-index\"><i>i</i></sub>&lt;<i>c</i></span>), separated by single spaces &minus; the original message. </p><p>The third input line contains <span class=\"tex-span\"><i>m</i></span> integers <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\"><i>i</i></sub></span> (<span class=\"tex-span\">0&le;<i>b</i><sub class=\"lower-index\"><i>i</i></sub>&lt;<i>c</i></span>), separated by single spaces &minus; the encryption key.</p><p>The input limitations for getting 30 points are: </p><ul> <li> <span class=\"tex-span\">1&le;<i>m</i>&le;<i>n</i>&le;10<sup class=\"upper-index\">3</sup></span> </li><li> <span class=\"tex-span\">1&le;<i>c</i>&le;10<sup class=\"upper-index\">3</sup></span> </li></ul> <p>The input limitations for getting 100 points are: </p><ul> <li> <span class=\"tex-span\">1&le;<i>m</i>&le;<i>n</i>&le;10<sup class=\"upper-index\">5</sup></span> </li><li> <span class=\"tex-span\">1&le;<i>c</i>&le;10<sup class=\"upper-index\">3</sup></span> </li></ul> </div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print <span class=\"tex-span\"><i>n</i></span> space-separated integers &minus; the result of encrypting the original message.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>4 3 2<br/>1 1 1 1<br/>1 1 1<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>0 1 1 0<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>3 1 5<br/>1 2 3<br/>4<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>0 1 2<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>In the first sample the encryption is performed in two steps: after the first step <span class=\"tex-span\"><i>a</i>=(0,0,0,1)</span> (remember that the calculations are performed modulo 2), after the second step <span class=\"tex-span\"><i>a</i>=(0,1,1,0)</span>, and that is the answer. </p></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}