{"title": "Nineteen", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">A. Nineteen</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>1 second</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Alice likes word \"<span class=\"tex-font-style-tt\">nineteen</span>\" very much. She has a string <span class=\"tex-span\"><i>s</i></span> and wants the string to contain as many such words as possible. For that reason she can rearrange the letters of the string.</p><p>For example, if she has string \"<span class=\"tex-font-style-tt\">xiineteenppnnnewtnee</span>\", she can get string \"<span class=\"tex-font-style-tt\">x<span class=\"tex-font-style-bf\">nineteen</span>pp<span class=\"tex-font-style-bf\">nineteen</span>w</span>\", containing (the occurrences marked) two such words. More formally, word \"<span class=\"tex-font-style-tt\">nineteen</span>\" occurs in the string the number of times you can read it starting from some letter of the string. Of course, you shouldn't skip letters.</p><p>Help her to find the maximum number of \"<span class=\"tex-font-style-tt\">nineteen</span>\"s that she can get in her string.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains a non-empty string <span class=\"tex-span\"><i>s</i></span>, consisting only of lowercase English letters. The length of string <span class=\"tex-span\"><i>s</i></span> doesn't exceed 100.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print a single integer &minus; the maximum number of \"<span class=\"tex-font-style-tt\">nineteen</span>\"s that she can get in her string.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>nniinneetteeeenn<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>2</pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>nneteenabcnneteenabcnneteenabcnneteenabcnneteenabcii<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>2</pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>nineteenineteen<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>2</pre></div></div></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 1000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}