{"title": "Bits", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">A. Bits</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>1 second</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Let's denote as <img align=\"middle\" class=\"tex-formula\" src=\"http://cf.hustoj.com:80/userfiles/image/c097ecd8556f4f8d61d8b143ef6afbc7928fce0b15.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> the number of bits set ('1' bits) in the binary representation of the non-negative integer <span class=\"tex-span\"><i>x</i></span>.</p><p>You are given multiple queries consisting of pairs of integers <span class=\"tex-span\"><i>l</i></span> and <span class=\"tex-span\"><i>r</i></span>. For each query, find the <span class=\"tex-span\"><i>x</i></span>, such that <span class=\"tex-span\"><i>l</i>&le;<i>x</i>&le;<i>r</i></span>, and <img align=\"middle\" class=\"tex-formula\" src=\"http://cf.hustoj.com:80/userfiles/image/c097ecd8556f4f8d61d8b143ef6afbc7928fce0b15.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> is maximum possible. If there are multiple such numbers find the smallest of them.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains integer <span class=\"tex-span\"><i>n</i></span>&minus; the number of queries (<span class=\"tex-span\">1&le;<i>n</i>&le;10000</span>).</p><p>Each of the following <span class=\"tex-span\"><i>n</i></span> lines contain two integers <span class=\"tex-span\"><i>l</i><sub class=\"lower-index\"><i>i</i></sub>,<i>r</i><sub class=\"lower-index\"><i>i</i></sub></span>&minus; the arguments for the corresponding query (<span class=\"tex-span\">0&le;<i>l</i><sub class=\"lower-index\"><i>i</i></sub>&le;<i>r</i><sub class=\"lower-index\"><i>i</i></sub>&le;10<sup class=\"upper-index\">18</sup></span>).</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>For each query print the answer in a separate line.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>3<br/>1 2<br/>2 4<br/>1 10<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>1<br/>3<br/>7<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>The binary representations of numbers from 1 to 10 are listed below:</p><p><span class=\"tex-span\">1<sub class=\"lower-index\">10</sub>=1<sub class=\"lower-index\">2</sub></span></p><p><span class=\"tex-span\">2<sub class=\"lower-index\">10</sub>=10<sub class=\"lower-index\">2</sub></span></p><p><span class=\"tex-span\">3<sub class=\"lower-index\">10</sub>=11<sub class=\"lower-index\">2</sub></span></p><p><span class=\"tex-span\">4<sub class=\"lower-index\">10</sub>=100<sub class=\"lower-index\">2</sub></span></p><p><span class=\"tex-span\">5<sub class=\"lower-index\">10</sub>=101<sub class=\"lower-index\">2</sub></span></p><p><span class=\"tex-span\">6<sub class=\"lower-index\">10</sub>=110<sub class=\"lower-index\">2</sub></span></p><p><span class=\"tex-span\">7<sub class=\"lower-index\">10</sub>=111<sub class=\"lower-index\">2</sub></span></p><p><span class=\"tex-span\">8<sub class=\"lower-index\">10</sub>=1000<sub class=\"lower-index\">2</sub></span></p><p><span class=\"tex-span\">9<sub class=\"lower-index\">10</sub>=1001<sub class=\"lower-index\">2</sub></span></p><p><span class=\"tex-span\">10<sub class=\"lower-index\">10</sub>=1010<sub class=\"lower-index\">2</sub></span></p></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 1000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}