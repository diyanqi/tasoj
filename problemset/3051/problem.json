{"title": "Sereja and Table", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">B. Sereja and Table </div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>1 second</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Sereja has an <span class=\"tex-span\"><i>n</i>&times;<i>m</i></span> rectangular table <span class=\"tex-span\"><i>a</i></span>, each cell of the table contains a zero or a number one. Sereja wants his table to meet the following requirement: each connected component of the same values forms a rectangle with sides parallel to the sides of the table. Rectangles should be filled with cells, that is, if a component form a rectangle of size <span class=\"tex-span\"><i>h</i>&times;<i>w</i></span>, then the component must contain exactly <span class=\"tex-span\"><i>hw</i></span> cells.</p><p>A connected component of the same values is a set of cells of the table that meet the following conditions:</p><ul> <li> every two cells of the set have the same value; </li><li> the cells of the set form a connected region on the table (two cells are connected if they are adjacent in some row or some column of the table); </li><li> it is impossible to add any cell to the set unless we violate the two previous conditions. </li></ul><p>Can Sereja change the values of at most <span class=\"tex-span\"><i>k</i></span> cells of the table so that the table met the described requirement? What minimum number of table cells should he change in this case?</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains integers <span class=\"tex-span\"><i>n</i></span>, <span class=\"tex-span\"><i>m</i></span> and <span class=\"tex-span\"><i>k</i></span> <span class=\"tex-span\">(1&le;<i>n</i>,<i>m</i>&le;100;1&le;<i>k</i>&le;10)</span>. Next <span class=\"tex-span\"><i>n</i></span> lines describe the table <span class=\"tex-span\"><i>a</i></span>: the <span class=\"tex-span\"><i>i</i></span>-th of them contains <span class=\"tex-span\"><i>m</i></span> integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i>1</sub>,<i>a</i><sub class=\"lower-index\"><i>i</i>2</sub>,...,<i>a</i><sub class=\"lower-index\"><i>im</i></sub></span> <span class=\"tex-span\">(0&le;<i>a</i><sub class=\"lower-index\"><i>i</i>,<i>j</i></sub>&le;1)</span> &minus; the values in the cells of the <span class=\"tex-span\"><i>i</i></span>-th row.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print -1, if it is impossible to meet the requirement. Otherwise, print the minimum number of cells which should be changed.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>5 5 2<br/>1 1 1 1 1<br/>1 1 1 1 1<br/>1 1 0 1 1<br/>1 1 1 1 1<br/>1 1 1 1 1<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>1<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>3 4 1<br/>1 0 0 0<br/>0 1 1 1<br/>1 1 1 0<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>-1<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>3 4 1<br/>1 0 0 1<br/>0 1 1 0<br/>1 0 0 1<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>0<br/></pre></div></div></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 1000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}