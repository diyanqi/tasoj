{"title": "Cycle In Maze", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">C. Cycle In Maze</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>15 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>The Robot is in a rectangular maze of size <span class=\"tex-span\"><i>n</i>&times;<i>m</i></span>. Each cell of the maze is either empty or occupied by an obstacle. The Robot can move between neighboring cells on the side left (the symbol \"<span class=\"tex-font-style-tt\">L</span>\"), right (the symbol \"<span class=\"tex-font-style-tt\">R</span>\"), up (the symbol \"<span class=\"tex-font-style-tt\">U</span>\") or down (the symbol \"<span class=\"tex-font-style-tt\">D</span>\"). The Robot can move to the cell only if it is empty. Initially, the Robot is in the empty cell.</p><p>Your task is to find <span class=\"tex-font-style-bf\">lexicographically minimal</span> Robot's cycle with length <span class=\"tex-font-style-bf\">exactly</span> <span class=\"tex-span\"><i>k</i></span>, which begins and ends in the cell where the Robot was initially. It is allowed to the Robot to visit any cell many times (including starting).</p><p>Consider that Robot's way is given as a line which consists of symbols \"<span class=\"tex-font-style-tt\">L</span>\", \"<span class=\"tex-font-style-tt\">R</span>\", \"<span class=\"tex-font-style-tt\">U</span>\" and \"<span class=\"tex-font-style-tt\">D</span>\". For example, if firstly the Robot goes down, then left, then right and up, it means that his way is written as \"<span class=\"tex-font-style-tt\">DLRU</span>\".</p><p>In this task you <span class=\"tex-font-style-bf\">don't need</span> to minimize the length of the way. Find the minimum lexicographical (in alphabet order as in the dictionary) line which satisfies requirements above.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains three integers <span class=\"tex-span\"><i>n</i></span>, <span class=\"tex-span\"><i>m</i></span> and <span class=\"tex-span\"><i>k</i></span> (<span class=\"tex-span\">1&le;<i>n</i>,<i>m</i>&le;1000</span>, <span class=\"tex-span\">1&le;<i>k</i>&le;10<sup class=\"upper-index\">6</sup></span>) &minus; the size of the maze and the length of the cycle. </p><p>Each of the following <span class=\"tex-span\"><i>n</i></span> lines contains <span class=\"tex-span\"><i>m</i></span> symbols &minus; the description of the maze. If the symbol equals to \"<span class=\"tex-font-style-tt\">.</span>\" the current cell is empty. If the symbol equals to \"<span class=\"tex-font-style-tt\">*</span>\" the current cell is occupied by an obstacle. If the symbol equals to \"<span class=\"tex-font-style-tt\">X</span>\" then initially the Robot is in this cell and it is empty. It is guaranteed that the symbol \"<span class=\"tex-font-style-tt\">X</span>\" is found in the maze exactly once. </p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print the lexicographically minimum Robot's way with the length exactly <span class=\"tex-span\"><i>k</i></span>, which starts and ends in the cell where initially Robot is. If there is no such way, print \"<span class=\"tex-font-style-tt\">IMPOSSIBLE</span>\"(without quotes).</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>2 3 2<br/>.**<br/>X..<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>RL<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>5 6 14<br/>..***.<br/>*...X.<br/>..*...<br/>..*.**<br/>....*.<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>DLDDLLLRRRUURU<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>3 3 4<br/>***<br/>*X*<br/>***<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>IMPOSSIBLE<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>In the first sample two cyclic ways for the Robot with the length <span class=\"tex-span\">2</span> exist &minus; \"<span class=\"tex-font-style-tt\">UD</span>\" and \"<span class=\"tex-font-style-tt\">RL</span>\". The second cycle is lexicographically less. </p><p>In the second sample the Robot should move in the following way: down, left, down, down, left, left, left, right, right, right, up, up, right, up. </p><p>In the third sample the Robot can't move to the neighboring cells, because they are occupied by obstacles.</p></div></div><p> </p></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 15000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}