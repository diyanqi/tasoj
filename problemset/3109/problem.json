{"title": "Hamming Triples", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">E. Hamming Triples</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>1 second</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Little Chris is having a nightmare. Even in dreams all he thinks about is math.</p><p>Chris dreams about <span class=\"tex-span\"><i>m</i></span> binary strings of length <span class=\"tex-span\"><i>n</i></span>, indexed with numbers from 1 to <span class=\"tex-span\"><i>m</i></span>. The most horrifying part is that the bits of each string are ordered in either ascending or descending order. For example, Chris could be dreaming about the following 4 strings of length 5:</p><center> <img class=\"tex-graphics\" src=\"http://cf.hustoj.com:80/userfiles/image/2911f8066998d16ff27e6bed3ae8edd1b20aff457.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> </center><p>The <span class=\"tex-font-style-it\">Hamming distance</span> <span class=\"tex-span\"><i>H</i>(<i>a</i>,<i>b</i>)</span> between two strings <span class=\"tex-span\"><i>a</i></span> and <span class=\"tex-span\"><i>b</i></span> of length <span class=\"tex-span\"><i>n</i></span> is the number of positions at which the corresponding symbols are different. </p><p>Chris thinks that each three strings with different indices constitute a single triple. Chris's delusion is that he will wake up only if he counts the number of such string triples <span class=\"tex-span\"><i>a</i></span>, <span class=\"tex-span\"><i>b</i></span>, <span class=\"tex-span\"><i>c</i></span> that the sum <span class=\"tex-span\"><i>H</i>(<i>a</i>,<i>b</i>)+<i>H</i>(<i>b</i>,<i>c</i>)+<i>H</i>(<i>c</i>,<i>a</i>)</span> is maximal among all the string triples constructed from the dreamed strings.</p><p>Help Chris wake up from this nightmare!</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line of input contains two space-separated integers <span class=\"tex-span\"><i>n</i></span> and <span class=\"tex-span\"><i>m</i></span> (<span class=\"tex-span\">1&le;<i>n</i>&le;10<sup class=\"upper-index\">9</sup></span>; <span class=\"tex-span\">3&le;<i>m</i>&le;10<sup class=\"upper-index\">5</sup></span>), the length and the number of strings. The next <span class=\"tex-span\"><i>m</i></span> lines contain the description of the strings. The <span class=\"tex-span\"><i>i</i></span>-th line contains two space-separated integers <span class=\"tex-span\"><i>s</i><sub class=\"lower-index\"><i>i</i></sub></span> and <span class=\"tex-span\"><i>f</i><sub class=\"lower-index\"><i>i</i></sub></span> (<span class=\"tex-span\">0&le;<i>s</i><sub class=\"lower-index\"><i>i</i></sub>&le;1</span>; <span class=\"tex-span\">1&le;<i>f</i><sub class=\"lower-index\"><i>i</i></sub>&le;<i>n</i></span>), the description of the string with index <span class=\"tex-span\"><i>i</i></span>; that means that the first <span class=\"tex-span\"><i>f</i><sub class=\"lower-index\"><i>i</i></sub></span> bits of the <span class=\"tex-span\"><i>i</i></span>-th string are equal to <span class=\"tex-span\"><i>s</i><sub class=\"lower-index\"><i>i</i></sub></span>, and the remaining <span class=\"tex-span\"><i>n</i>-<i>f</i><sub class=\"lower-index\"><i>i</i></sub></span> bits are equal to <span class=\"tex-span\">1-<i>s</i><sub class=\"lower-index\"><i>i</i></sub></span>. There can be multiple equal strings in Chris's dream.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Output a single integer, the number of such string triples among the given that the sum of the Hamming distances between the strings of the triple is maximal.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>5 4<br/>0 3<br/>0 5<br/>1 4<br/>1 5<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>3<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>10 4<br/>1 5<br/>0 5<br/>0 5<br/>1 5<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>4<br/></pre></div></div></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 1000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}