{"title": "Shifting", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">B. Shifting</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>John Doe has found the beautiful permutation formula.</p><p>Let's take permutation <span class=\"tex-span\"><i>p</i>=<i>p</i><sub class=\"lower-index\">1</sub>,<i>p</i><sub class=\"lower-index\">2</sub>,...,<i>p</i><sub class=\"lower-index\"><i>n</i></sub></span>. Let's define transformation <span class=\"tex-span\"><i>f</i></span> of this permutation: </p><center class=\"tex-equation\"><img align=\"middle\" class=\"tex-formula\" src=\"http://cf.hustoj.com:80/userfiles/image/78fa677b13cdb95ba0ae166e31d4b36439d72dcc56.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/></center><p>where <span class=\"tex-span\"><i>k</i></span> <span class=\"tex-span\">(<i>k</i>&gt;1)</span> is an integer, the transformation parameter, <span class=\"tex-span\"><i>r</i></span> is such maximum integer that <span class=\"tex-span\"><i>rk</i>&le;<i>n</i></span>. If <span class=\"tex-span\"><i>rk</i>=<i>n</i></span>, then elements <span class=\"tex-span\"><i>p</i><sub class=\"lower-index\"><i>rk</i>+1</sub>,<i>p</i><sub class=\"lower-index\"><i>rk</i>+2</sub></span> and so on are omitted. In other words, the described transformation of permutation <span class=\"tex-span\"><i>p</i></span> cyclically shifts to the left each consecutive block of length <span class=\"tex-span\"><i>k</i></span> and the last block with the length equal to the remainder after dividing <span class=\"tex-span\"><i>n</i></span> by <span class=\"tex-span\"><i>k</i></span>. </p><p>John Doe thinks that permutation <span class=\"tex-span\"><i>f</i>(<i>f</i>(...<i>f</i>(<i>p</i>=[1,2,...,<i>n</i>],2)...,<i>n</i>-1),<i>n</i>)</span> is beautiful. Unfortunately, he cannot quickly find the beautiful permutation he's interested in. That's why he asked you to help him.</p><p>Your task is to find a beautiful permutation for the given <span class=\"tex-span\"><i>n</i></span>. For clarifications, see the notes to the third sample.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>A single line contains integer <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">2&le;<i>n</i>&le;10<sup class=\"upper-index\">6</sup></span>).</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print <span class=\"tex-span\"><i>n</i></span> distinct space-separated integers from <span class=\"tex-span\">1</span> to <span class=\"tex-span\"><i>n</i></span> &minus; a beautiful permutation of size <span class=\"tex-span\"><i>n</i></span>.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>2<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>2 1 <br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>3<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>1 3 2 <br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>4<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>4 2 3 1 <br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>A note to the third test sample: </p><ul> <li> <span class=\"tex-span\"><i>f</i>([1,2,3,4],2)=[2,1,4,3]</span> </li><li> <span class=\"tex-span\"><i>f</i>([2,1,4,3],3)=[1,4,2,3]</span> </li><li> <span class=\"tex-span\"><i>f</i>([1,4,2,3],4)=[4,2,3,1]</span> </li></ul></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}