{"title": "BerOS file system", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">A. BerOS file system</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>64 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>The new operating system BerOS has a nice feature. It is possible to use any number of characters <span class=\"tex-font-style-tt\">'/'</span> as a delimiter in path instead of one traditional <span class=\"tex-font-style-tt\">'/'</span>. For example, strings <span class=\"tex-font-style-tt\">//usr///local//nginx/sbin//</span> and <span class=\"tex-font-style-tt\">/usr/local/nginx///sbin</span> are equivalent. The character <span class=\"tex-font-style-tt\">'/'</span> (or some sequence of such characters) at the end of the path is required only in case of the path to the root directory, which can be represented as single character <span class=\"tex-font-style-tt\">'/'</span>.</p><p>A path called normalized if it contains the smallest possible number of characters <span class=\"tex-font-style-tt\">'/'</span>.</p><p>Your task is to transform a given path to the normalized form.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line of the input contains only lowercase Latin letters and character <span class=\"tex-font-style-tt\">'/'</span>&minus; the path to some directory. All paths start with at least one character <span class=\"tex-font-style-tt\">'/'</span>. The length of the given line is no more than 100 characters, it is not empty.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>The path in normalized form.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>//usr///local//nginx/sbin<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>/usr/local/nginx/sbin<br/></pre></div></div></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 64, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}