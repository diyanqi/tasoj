{"title": "Valera and Swaps", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">D. Valera and Swaps</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>1 second</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>A <span class=\"tex-font-style-it\">permutation</span> <span class=\"tex-span\"><i>p</i></span> of length <span class=\"tex-span\"><i>n</i></span> is a sequence of distinct integers <span class=\"tex-span\"><i>p</i><sub class=\"lower-index\">1</sub>,<i>p</i><sub class=\"lower-index\">2</sub>,...,<i>p</i><sub class=\"lower-index\"><i>n</i></sub></span> <span class=\"tex-span\">(1&le;<i>p</i><sub class=\"lower-index\"><i>i</i></sub>&le;<i>n</i>)</span>. A permutation is an identity permutation, if for any <span class=\"tex-span\"><i>i</i></span> the following equation holds <span class=\"tex-span\"><i>p</i><sub class=\"lower-index\"><i>i</i></sub>=<i>i</i></span>. </p><p>A <span class=\"tex-font-style-it\">swap</span> <span class=\"tex-span\">(<i>i</i>,<i>j</i>)</span> is the operation that swaps elements <span class=\"tex-span\"><i>p</i><sub class=\"lower-index\"><i>i</i></sub></span> and <span class=\"tex-span\"><i>p</i><sub class=\"lower-index\"><i>j</i></sub></span> in the permutation. Let's assume that <span class=\"tex-span\"><i>f</i>(<i>p</i>)</span> is the minimum number of swaps that you need to make the permutation <span class=\"tex-span\"><i>p</i></span> an identity permutation. </p><p>Valera wonders, how he can transform permutation <span class=\"tex-span\"><i>p</i></span> into any permutation <span class=\"tex-span\"><i>q</i></span>, such that <span class=\"tex-span\"><i>f</i>(<i>q</i>)=<i>m</i></span>, using the minimum number of swaps. Help him do that.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains integer <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">1&le;<i>n</i>&le;3000</span>) &minus; the length of permutation <span class=\"tex-span\"><i>p</i></span>. The second line contains <span class=\"tex-span\"><i>n</i></span> distinct integers <span class=\"tex-span\"><i>p</i><sub class=\"lower-index\">1</sub>,<i>p</i><sub class=\"lower-index\">2</sub>,...,<i>p</i><sub class=\"lower-index\"><i>n</i></sub></span> (<span class=\"tex-span\">1&le;<i>p</i><sub class=\"lower-index\"><i>i</i></sub>&le;<i>n</i></span>) &minus; Valera's initial permutation. The last line contains integer <span class=\"tex-span\"><i>m</i></span> (<span class=\"tex-span\">0&le;<i>m</i>&lt;<i>n</i></span>).</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>In the first line, print integer <span class=\"tex-span\"><i>k</i></span> &minus; the minimum number of swaps.</p><p>In the second line, print <span class=\"tex-span\">2<i>k</i></span> integers <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\">1</sub>,<i>x</i><sub class=\"lower-index\">2</sub>,...,<i>x</i><sub class=\"lower-index\">2<i>k</i></sub></span> &minus; the description of the swap sequence. The printed numbers show that you need to consecutively make swaps <span class=\"tex-span\">(<i>x</i><sub class=\"lower-index\">1</sub>,<i>x</i><sub class=\"lower-index\">2</sub>)</span>, <span class=\"tex-span\">(<i>x</i><sub class=\"lower-index\">3</sub>,<i>x</i><sub class=\"lower-index\">4</sub>)</span>, ..., <span class=\"tex-span\">(<i>x</i><sub class=\"lower-index\">2<i>k</i>-1</sub>,<i>x</i><sub class=\"lower-index\">2<i>k</i></sub>)</span>. </p><p>If there are multiple sequence swaps of the minimum length, print the lexicographically minimum one.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>5<br/>1 2 3 4 5<br/>2<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>2<br/>1 2 1 3 </pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>5<br/>2 1 4 5 3<br/>2<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>1<br/>1 2 </pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>Sequence <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\">1</sub>,<i>x</i><sub class=\"lower-index\">2</sub>,...,<i>x</i><sub class=\"lower-index\"><i>s</i></sub></span> is lexicographically smaller than sequence <span class=\"tex-span\"><i>y</i><sub class=\"lower-index\">1</sub>,<i>y</i><sub class=\"lower-index\">2</sub>,...,<i>y</i><sub class=\"lower-index\"><i>s</i></sub></span>, if there is such integer <span class=\"tex-span\"><i>r</i></span> <span class=\"tex-span\">(1&le;<i>r</i>&le;<i>s</i>)</span>, that <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\">1</sub>=<i>y</i><sub class=\"lower-index\">1</sub>,<i>x</i><sub class=\"lower-index\">2</sub>=<i>y</i><sub class=\"lower-index\">2</sub>,...,<i>x</i><sub class=\"lower-index\"><i>r</i>-1</sub>=<i>y</i><sub class=\"lower-index\"><i>r</i>-1</sub></span> and <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\"><i>r</i></sub>&lt;<i>y</i><sub class=\"lower-index\"><i>r</i></sub></span>. </p></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 1000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}