{"title": "Young Photographer", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">B. Young Photographer</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>64 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>Among other things, Bob is keen on photography. Especially he likes to take pictures of sportsmen. That was the reason why he placed himself in position <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\">0</sub></span> of a long straight racetrack and got ready to take pictures. But the problem was that not all the runners passed him. The total amount of sportsmen, training at that racetrack, equals <span class=\"tex-span\"><i>n</i></span>. And each of them regularly runs distances within a particular segment of the racetrack, which is the same for each sportsman. For example, the first sportsman runs from position <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">1</sub></span> to position <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\">1</sub></span>, the second &minus; from <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">2</sub></span> to <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\">2</sub></span></p><p>What is the minimum distance that Bob should move to have a chance to take pictures of each sportsman? Bob can take a picture of a sportsman, if he stands within the segment that this sportsman covers on the racetrack.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line of the input file contains integers <span class=\"tex-span\"><i>n</i></span> and <span class=\"tex-span\"><i>x</i><sub class=\"lower-index\">0</sub></span> (<span class=\"tex-span\">1&le;<i>n</i>&le;100</span>; <span class=\"tex-span\">0&le;<i>x</i><sub class=\"lower-index\">0</sub>&le;1000</span>). The following <span class=\"tex-span\"><i>n</i></span> lines contain pairs of integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub>,<i>b</i><sub class=\"lower-index\"><i>i</i></sub></span> (<span class=\"tex-span\">0&le;<i>a</i><sub class=\"lower-index\"><i>i</i></sub>,<i>b</i><sub class=\"lower-index\"><i>i</i></sub>&le;1000</span>; <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub>&ne;<i>b</i><sub class=\"lower-index\"><i>i</i></sub></span>).</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Output the required minimum distance in the same units as the positions on the racetrack. If there is no such a position, output -1.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>3 3<br/>0 7<br/>14 2<br/>4 6<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>1<br/></pre></div></div></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 64, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}