{"title": "Removing Columns", "type": "problem", "description": {"format": "html", "value": "<div class=\"ttypography\"><div class=\"problem-statement\"><div class=\"header\" align=\"center\"><div class=\"title\" style=\"display:none\">C. Removing Columns</div><div class=\"time-limit\"><div class=\"property-title\">time limit per test</div>2 seconds</div><div class=\"memory-limit\"><div class=\"property-title\">memory limit per test</div>256 megabytes</div><div class=\"input-file\"><div class=\"property-title\">input</div>standard input</div><div class=\"output-file\"><div class=\"property-title\">output</div>standard output</div></div><div><p>You are given an <span class=\"tex-span\"><i>n</i>&times;<i>m</i></span> rectangular table consisting of lower case English letters. In one operation you can completely remove one column from the table. The remaining parts are combined forming a new table. For example, after removing the second column from the table</p><pre><br/>abcd<br/>edfg<br/>hijk<br/></pre><p></p><p>we obtain the table:</p><pre><br/>acd<br/>efg<br/>hjk<br/></pre><p></p><p>A table is called <span class=\"tex-font-style-it\">good</span> if its rows are ordered from top to bottom lexicographically, i.e. each row is lexicographically no larger than the following one. Determine the minimum number of operations of removing a column needed to make a given table good.</p></div><div class=\"input-specification\"><div class=\"section-title\">Input</div><p>The first line contains two integers &minus; <span class=\"tex-span\"><i>n</i></span> and <span class=\"tex-span\"><i>m</i></span> (<span class=\"tex-span\">1&le;<i>n</i>,<i>m</i>&le;</span><span class=\"tex-font-style-bf\">100</span>).</p><p>Next <span class=\"tex-span\"><i>n</i></span> lines contain <span class=\"tex-span\"><i>m</i></span> small English letters each&minus; the characters of the table.</p></div><div class=\"output-specification\"><div class=\"section-title\">Output</div><p>Print a single number&minus; the minimum number of columns that you need to remove in order to make the table good.</p></div><div class=\"sample-tests\"><div class=\"section-title\">Examples</div><div class=\"sample-test\"><div class=\"input\"><div class=\"title\">Input</div><pre>1 10<br/>codeforces<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>0<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>4 4<br/>case<br/>care<br/>test<br/>code<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>2<br/></pre></div><div class=\"input\"><div class=\"title\">Input</div><pre>5 4<br/>code<br/>forc<br/>esco<br/>defo<br/>rces<br/></pre></div><div class=\"output\"><div class=\"title\">Output</div><pre>4<br/></pre></div></div></div><div class=\"note\"><div class=\"section-title\">Note</div><p>In the first sample the table is already good.</p><p>In the second sample you may remove the first and third column.</p><p>In the third sample you have to remove all the columns (note that the table where all rows are empty is considered good by definition).</p><p>Let strings <span class=\"tex-span\"><i>s</i></span> and <span class=\"tex-span\"><i>t</i></span> have equal length. Then, <span class=\"tex-span\"><i>s</i></span> is <span class=\"tex-font-style-it\">lexicographically larger</span> than <span class=\"tex-span\"><i>t</i></span> if they are not equal and the character following the largest common prefix of <span class=\"tex-span\"><i>s</i></span> and <span class=\"tex-span\"><i>t</i></span> (the prefix may be empty) in <span class=\"tex-span\"><i>s</i></span> is alphabetically larger than the corresponding character of <span class=\"tex-span\"><i>t</i></span>.</p></div></div></div>\n"}, "tags": ["Codeforces"], "input_description": {"format": "html", "value": ""}, "output_description": {"format": "html", "value": ""}, "test_case_score": [{"score": 10, "input_name": "1.in", "output_name": "1.out"}, {"score": 10, "input_name": "2.in", "output_name": "2.out"}, {"score": 10, "input_name": "3.in", "output_name": "3.out"}, {"score": 10, "input_name": "4.in", "output_name": "4.out"}, {"score": 10, "input_name": "5.in", "output_name": "5.out"}, {"score": 10, "input_name": "6.in", "output_name": "6.out"}, {"score": 10, "input_name": "7.in", "output_name": "7.out"}, {"score": 10, "input_name": "8.in", "output_name": "8.out"}, {"score": 10, "input_name": "9.in", "output_name": "9.out"}], "hint": {"format": "html", "value": ""}, "time_limit": 2000, "memory_limit": 256, "samples": [{"input": "", "output": ""}], "template": {}, "spj": null, "rule_type": "OI", "source": "", "answers": [{"language": "Python3", "code": "print('Hello, world!')"}]}