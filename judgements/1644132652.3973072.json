{"status": "Wrong Answer", "problem_id": 1742, "language": "cpp", "username": "diyanqi@qq.com", "code": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nint mod;\r\ninline int add(int x,int y) {return (x+y>=mod) ? (x+y-mod) : (x+y);}\r\ninline int dec(int x,int y) {return (x-y<0) ? (x-y+mod) : (x-y);}\r\ninline int mul(int x,int y) {return (long long)x*y%mod;}\r\n\r\nnamespace FFT {\r\n    #define double long double\r\n\tconst int N=1e6+50;\r\n\tconst double PI2=acos(-1.0)*2.0;\r\n\tint pos[N],k;\r\n\tstruct CP {\r\n\t\tdouble r,i;\r\n\t\tCP() {}\r\n\t\tCP(double r,double i) : r(r),i(i) {}\r\n\t\tfriend inline CP operator *(const CP &a,const CP &b) {return CP(a.r*b.r-a.i*b.i,a.r*b.i+a.i*b.r);}\r\n\t\tfriend inline CP operator +(const CP &a,const CP &b) {return CP(a.r+b.r,a.i+b.i);}\r\n\t\tfriend inline CP operator -(const CP &a,const CP &b) {return CP(a.r-b.r,a.i-b.i);} \r\n\t} A[N],B[N],w[N];\r\n\tinline void dft(CP *a) {\r\n\t\tfor(int i=1;i<k;i++)\r\n\t\t\tif(pos[i]>i) swap(a[pos[i]],a[i]);\r\n\t\tfor(int bl=1;bl<k;bl<<=1) {\r\n\t\t\tint tl=bl<<1; CP wn=CP(cos(PI2/tl),sin(PI2/tl));\r\n\t\t\tw[0]=CP(1,0); for(int i=1;i<bl;i++) w[i]=w[i-1]*wn;\r\n\t\t\tfor(int bg=0;bg<k;bg+=tl)\r\n\t\t\t\tfor(int j=0;j<bl;j++) {\r\n\t\t\t\t\tCP &t1=a[bg+j], &t2=a[bg+j+bl], t=t2*w[j];\r\n\t\t\t\t\tt2=t1-t; t1=t1+t;\r\n\t\t\t\t}\r\n\t\t}\r\n\t}\r\n\tinline void init(int n) {\r\n\t\tfor(k=1;k<=n;k<<=1);\r\n\t\tfor(int i=1;i<k;i++)\r\n\t\t\tpos[i]=(i&1) ? ((pos[i>>1]>>1)^(k>>1)) : (pos[i>>1]>>1);\r\n\t\tfor(int i=0;i<k;i++) A[i]=B[i]=CP(0,0);\r\n\t}\r\n\tinline void func() {\r\n\t\tdft(A); dft(B);\r\n\t\tfor(int i=0;i<k;i++) A[i]=A[i]*B[i];\r\n\t\tdft(A); reverse(A+1,A+k);\r\n\t\tfor(int i=0;i<k;i++) A[i].r/=k;\r\n\t}\r\n    #undef double\r\n}\r\n\r\nint n,A,ans;\r\nstruct poly {\r\n\tvector <int> a;\r\n\tpoly(int d=0,int t=0) {a.resize(d+1); a[d]=t;}\r\n\tinline int deg() const {return a.size()-1;}\r\n\tinline int& operator[](const int &i) {return a[i];}\r\n\tinline const int& operator[](const int &i) const {return a[i];} \r\n\tfriend inline poly operator +(const poly &a,const poly &b) {\r\n\t\tpoly c(max(a.deg(),b.deg()),0);\r\n\t\tfor(int i=0;i<=a.deg();i++) c[i]=add(c[i],a[i]);\r\n\t\tfor(int i=0;i<=b.deg();i++) c[i]=add(c[i],b[i]);\r\n\t\treturn c;\r\n\t}\r\n\tfriend inline poly operator *(const poly &a,const poly &b) {\r\n\t\tpoly c(a.deg()+b.deg()); \r\n        if(a.deg()>20 && b.deg()>20) {\r\n            FFT::init(c.deg());\r\n            for(int i=0;i<=a.deg();i++) FFT::A[i].r=a[i];\r\n            for(int i=0;i<=b.deg();i++) FFT::B[i].r=b[i];\r\n            FFT::func();\r\n            for(int i=0;i<=c.deg();i++)  {\r\n                c[i]=((long long)(FFT::A[i].r+0.1))%mod;\r\n                assert(c[i]>=0 && c[i]<mod);\r\n            }\r\n        } else {\r\n            for(int i=0;i<=b.deg();i++)\r\n                for(int j=0;j<=a.deg();j++)\r\n                    c[i+j]=add(c[i+j],mul(a[j],b[i]));\r\n        }\r\n\t\tif(c.deg()>=n) c.a.resize(n); return c;\r\n\t}\r\n\tinline int get_sum() {\r\n\t\tint t=0;\r\n\t\tfor(int i=0;i<n && i<=deg();i+=2) t=add(t,a[i]);\r\n\t\treturn t;\r\n\t}\r\n};\r\nstruct mat {\r\n\tpoly a[2][2];\r\n\tmat(int t) {\r\n\t\tif(t==1) {\r\n\t\t\ta[0][0]=poly(0,1);\r\n\t\t\ta[1][1]=poly(1,1);\r\n\t\t\ta[1][1].a[0]=1;\r\n\t\t}\r\n\t}\r\n\tfriend inline mat operator *(const mat &a,const mat &b) {\r\n\t\tmat c(0);\r\n\t\tfor(int i=0;i<=1;++i)\r\n\t\t\tfor(int j=0;j<=1;++j)\r\n\t\t\t\tfor(int k=0;k<=1;k++)\r\n\t\t\t\t\tc.a[i][j^k]=c.a[i][j^k]+a.a[1][j]*b.a[i][k];\r\n\t\tfor(int k=0;k<=1;k++)\r\n\t\t\tc.a[0][k]=c.a[0][k]+a.a[0][k];\r\n\t\treturn c;\r\n\t}\r\n};\r\ninline mat solve(int T,int flag) {\r\n\tif(T==1) {\r\n\t\tif(flag) ans=add(ans,1);\r\n\t\treturn mat(1);\r\n\t}\r\n\tif(T&1) {\r\n\t\tmat tp=solve(T-1,0)*mat(1);\r\n\t\tif(flag) ans=add(ans,tp.a[0][0].get_sum());\r\n        return tp;\r\n\t} else {\r\n\t\tmat tp=solve(T/2,1);\r\n\t\ttp=tp*tp;\r\n\t\tif(flag) ans=add(ans,tp.a[0][0].get_sum());\r\n        return tp;\r\n\t}\r\n}\r\nint main() {\r\n\tcin>>n>>A>>mod;\r\n\tmat a(1);\r\n\tsolve(A,0);\r\n\tcout<<ans<<'\\n';\r\n}\r\n", "msg": "", "testpoints": [{"testpoint": 1, "status": "Time Limit Exceeded", "msg": "", "time": 5108670771, "memory": 6352896}, {"testpoint": 2, "status": "Time Limit Exceeded", "msg": "", "time": 5103456394, "memory": 6324224}, {"testpoint": 3, "status": "Time Limit Exceeded", "msg": "", "time": 5118336057, "memory": 6336512}, {"testpoint": 4, "status": "Time Limit Exceeded", "msg": "", "time": 5102799844, "memory": 6426624}, {"testpoint": 5, "status": "Time Limit Exceeded", "msg": "", "time": 5103821029, "memory": 6463488}, {"testpoint": 6, "status": "Time Limit Exceeded", "msg": "", "time": 5103436856, "memory": 6475776}, {"testpoint": 7, "status": "Time Limit Exceeded", "msg": "", "time": 5103026142, "memory": 6426624}, {"testpoint": 8, "status": "Time Limit Exceeded", "msg": "", "time": 5103778665, "memory": 6373376}, {"testpoint": 9, "status": "Time Limit Exceeded", "msg": "", "time": 5104012547, "memory": 6303744}], "score": 0, "scorerate": "0%"}