{"status": "Compile Error", "problem_id": 1432, "language": "openjdk-11", "username": "diyanqi@qq.com", "code": "/*\r\n * ACM Code => cfr99c.java\r\n * Written by Sam X\r\n * Date: \u4e09\u6708, 19, 2019\r\n * Time: 11:08\r\n */\r\nimport java.util.*;\r\nimport java.math.*;\r\n\r\npublic class cf99c\r\n{\r\n    static TreeSet<String> ts = new TreeSet<>();\r\n    static HashSet<String> hs = new HashSet<>();\r\n    static void Permutation(String obj, String str, int obj_len)\r\n    {\r\n        if(obj.length()==obj_len)\r\n            ts.add(obj);\r\n        else for(int i=0;i!=str.length();++i)\r\n            Permutation(obj+str.charAt(i), str.substring(0, i)+str.substring(i+1, str.length()), obj_len);\r\n    }\r\n    public static void Oj(String args[])\r\n    {\r\n        Scanner cin = new Scanner(System.in);\r\n        String str = cin.next();\r\n        Permutation(\"\", str, str.length());\r\n        int ans=0;\r\n        for(String s:ts) \r\n            if(judge(s)) \r\n            {\r\n                hs.add(s); ans++;\r\n            }\r\n        System.out.println(ans);\r\n        cin.close();\r\n    }\r\n\r\n    // \u4e71\u641e\uff0c\u542f\u52a8\uff01\r\n    static int maxJudge=114514;\r\n    static boolean judge(String str)\r\n    {\r\n        for(int i=1;i<=maxJudge;++i)\r\n        {\r\n            if(Math.random()<0.5) str=rotateUp(str);\r\n            else str=rotateLeft(str);\r\n            if(hs.contains(str)) \r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static String rotateLeft(String str)\r\n    {\r\n        StringBuilder sb = new StringBuilder();\r\n        sb.append(str.charAt(0));\r\n        sb.append(str.charAt(2));\r\n        sb.append(str.charAt(3));\r\n        sb.append(str.charAt(4));\r\n        sb.append(str.charAt(1));\r\n        sb.append(str.charAt(5));\r\n        return sb.toString();\r\n    }\r\n\r\n    static String rotateUp(String str)\r\n    {\r\n        StringBuilder sb = new StringBuilder();\r\n        sb.append(str.charAt(1));\r\n        sb.append(str.charAt(5));\r\n        sb.append(str.charAt(2));\r\n        sb.append(str.charAt(0));\r\n        sb.append(str.charAt(4));\r\n        sb.append(str.charAt(3));\r\n        return sb.toString();\r\n    }\r\n}\r\n", "msg": "Oj.java:4: error: unmappable character (0xE4) for encoding US-ASCII\n * Date: ??????, 19, 2019\n         ^\nOj.java:4: error: unmappable character (0xB8) for encoding US-ASCII\n * Date: ??????, 19, 2019\n          ^\nOj.java:4: error: unmappable character (0x89) for encoding US-ASCII\n * Date: ??????, 19, 2019\n           ^\nOj.java:4: error: unmappable character (0xE6) for encoding US-ASCII\n * Date: ??????, 19, 2019\n            ^\nOj.java:4: error: unmappable character (0x9C) for encoding US-ASCII\n * Date: ??????, 19, 2019\n             ^\nOj.java:4: error: unmappable character (0x88) for encoding US-ASCII\n * Date: ??????, 19, 2019\n              ^\nOj.java:36: error: unmappable character (0xE4) for encoding US-ASCII\n    // ??????????????????\n       ^\nOj.java:36: error: unmappable character (0xB9) for encoding US-ASCII\n    // ??????????????????\n        ^\nOj.java:36: error: unmappable character (0xB1) for encoding US-ASCII\n    // ??????????????????\n         ^\nOj.java:36: error: unmappable character (0xE6) for encoding US-ASCII\n    // ??????????????????\n          ^\nOj.java:36: error: unmappable character (0x90) for encoding US-ASCII\n    // ??????????????????\n           ^\nOj.java:36: error: unmappable character (0x9E) for encoding US-ASCII\n    // ??????????????????\n            ^\nOj.java:36: error: unmappable character (0xEF) for encoding US-ASCII\n    // ??????????????????\n             ^\nOj.java:36: error: unmappable character (0xBC) for encoding US-ASCII\n    // ??????????????????\n              ^\nOj.java:36: error: unmappable character (0x8C) for encoding US-ASCII\n    // ??????????????????\n               ^\nOj.java:36: error: unmappable character (0xE5) for encoding US-ASCII\n    // ??????????????????\n                ^\nOj.java:36: error: unmappable character (0x90) for encoding US-ASCII\n    // ??????????????????\n                 ^\nOj.java:36: error: unmappable character (0xAF) for encoding US-ASCII\n    // ??????????????????\n                  ^\nOj.java:36: error: unmappable character (0xE5) for encoding US-ASCII\n    // ??????????????????\n                   ^\nOj.java:36: error: unmappable character (0x8A) for encoding US-ASCII\n    // ??????????????????\n                    ^\nOj.java:36: error: unmappable character (0xA8) for encoding US-ASCII\n    // ??????????????????\n                     ^\nOj.java:36: error: unmappable character (0xEF) for encoding US-ASCII\n    // ??????????????????\n                      ^\nOj.java:36: error: unmappable character (0xBC) for encoding US-ASCII\n    // ??????????????????\n                       ^\nOj.java:36: error: unmappable character (0x81) for encoding US-ASCII\n    // ??????????????????\n                        ^\n24 errors\n"}